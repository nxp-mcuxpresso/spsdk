{
    "cpu": "MIMXRT1015",
    "groups": [
        {
            "group": {
                "name": "General regs",
                "description": "General register generated by SPSDK"
            },
            "registers": [
                {
                    "id": "field000",
                    "offset_int": "0x0",
                    "reg_width": 32,
                    "name": "tag",
                    "description": " [0x000-0x003] Tag, fixed value 0x42464346UL",
                    "default_value_int": "0x42464346"
                },
                {
                    "id": "field004",
                    "offset_int": "0x4",
                    "reg_width": 32,
                    "name": "version",
                    "description": " [0x004-0x007] Version,[31:24] -'V', [23:16] - Major, [15:8] - Minor, [7:0] - bugfix",
                    "default_value_int": "0x56010100"
                },
                {
                    "id": "field008",
                    "offset_int": "0x8",
                    "reg_width": 32,
                    "name": "reserved0",
                    "description": " [0x008-0x00b] Reserved for future use",
                    "default_value_int": "0x0",
                    "is_reserved": true
                },
                {
                    "id": "field00C",
                    "offset_int": "0xc",
                    "reg_width": 8,
                    "name": "readSampleClkSrc",
                    "description": " [0x00c-0x00c] Read Sample Clock Source, valid value: 0/1/3",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field00D",
                    "offset_int": "0xd",
                    "reg_width": 8,
                    "name": "csHoldTime",
                    "description": " [0x00d-0x00d] CS hold time, default value: 3",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field00E",
                    "offset_int": "0xe",
                    "reg_width": 8,
                    "name": "csSetupTime",
                    "description": " [0x00e-0x00e] CS setup time, default value: 3",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field00F",
                    "offset_int": "0xf",
                    "reg_width": 8,
                    "name": "columnAddressWidth",
                    "description": " [0x00f-0x00f] Column Address with, for HyperBus protocol, it is fixed to 3, For Serial NAND, need to refer to datasheet",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field010",
                    "offset_int": "0x10",
                    "reg_width": 8,
                    "name": "deviceModeCfgEnable",
                    "description": " [0x010-0x010] Device Mode Configure enable flag, 1 - Enable, 0 - Disable",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field011",
                    "offset_int": "0x11",
                    "reg_width": 8,
                    "name": "deviceModeType",
                    "description": " [0x011-0x011] Specify the configuration command type:Quad Enable, DPI/QPI/OPI switch, Generic configuration, etc.",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field012",
                    "offset_int": "0x12",
                    "reg_width": 16,
                    "name": "waitTimeCfgCommands",
                    "description": " [0x012-0x013] Wait time for all configuration commands, unit: 100us, Used for DPI/QPI/OPI switch or reset command",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field014",
                    "offset_int": "0x14",
                    "reg_width": 32,
                    "name": "deviceModeSeq",
                    "description": " [0x014-0x017] Device mode sequence info, [7:0] - LUT sequence id, [15:8] - LUt sequence number, [31:16] Reserved",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "id": "field014-bits0-7",
                            "width": 8,
                            "name": "seqNum",
                            "access": "RW",
                            "description": " Sequence Number, valid number: 1-16"
                        },
                        {
                            "id": "field014-bits8-15",
                            "width": 8,
                            "name": "seqId",
                            "access": "RW",
                            "description": " Sequence Index, valid number: 0-15"
                        },
                        {
                            "width": 16
                        }
                    ]
                },
                {
                    "id": "field018",
                    "offset_int": "0x18",
                    "reg_width": 32,
                    "name": "deviceModeArg",
                    "description": " [0x018-0x01b] Argument/Parameter for device configuration",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field01C",
                    "offset_int": "0x1c",
                    "reg_width": 8,
                    "name": "configCmdEnable",
                    "description": " [0x01c-0x01c] Configure command Enable Flag, 1 - Enable, 0 - Disable",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field01D",
                    "offset_int": "0x1d",
                    "reg_width": 8,
                    "name": "configModeType_0",
                    "description": " [0x01d-0x01f] Configure Mode Type, similar as deviceModeTpe",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field01E",
                    "offset_int": "0x1e",
                    "reg_width": 8,
                    "name": "configModeType_1",
                    "description": " [0x01d-0x01f] Configure Mode Type, similar as deviceModeTpe",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field01F",
                    "offset_int": "0x1f",
                    "reg_width": 8,
                    "name": "configModeType_2",
                    "description": " [0x01d-0x01f] Configure Mode Type, similar as deviceModeTpe",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field020",
                    "offset_int": "0x20",
                    "reg_width": 32,
                    "name": "configCmdSeqs_0",
                    "description": " [0x020-0x02b] Sequence info for Device Configuration command, similar as deviceModeSeq",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "id": "field020-bits0-7",
                            "width": 8,
                            "name": "seqNum",
                            "access": "RW",
                            "description": " Sequence Number, valid number: 1-16"
                        },
                        {
                            "id": "field020-bits8-15",
                            "width": 8,
                            "name": "seqId",
                            "access": "RW",
                            "description": " Sequence Index, valid number: 0-15"
                        },
                        {
                            "width": 16
                        }
                    ]
                },
                {
                    "id": "field024",
                    "offset_int": "0x24",
                    "reg_width": 32,
                    "name": "configCmdSeqs_1",
                    "description": " [0x020-0x02b] Sequence info for Device Configuration command, similar as deviceModeSeq",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "id": "field024-bits0-7",
                            "width": 8,
                            "name": "seqNum",
                            "access": "RW",
                            "description": " Sequence Number, valid number: 1-16"
                        },
                        {
                            "id": "field024-bits8-15",
                            "width": 8,
                            "name": "seqId",
                            "access": "RW",
                            "description": " Sequence Index, valid number: 0-15"
                        },
                        {
                            "width": 16
                        }
                    ]
                },
                {
                    "id": "field028",
                    "offset_int": "0x28",
                    "reg_width": 32,
                    "name": "configCmdSeqs_2",
                    "description": " [0x020-0x02b] Sequence info for Device Configuration command, similar as deviceModeSeq",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "id": "field028-bits0-7",
                            "width": 8,
                            "name": "seqNum",
                            "access": "RW",
                            "description": " Sequence Number, valid number: 1-16"
                        },
                        {
                            "id": "field028-bits8-15",
                            "width": 8,
                            "name": "seqId",
                            "access": "RW",
                            "description": " Sequence Index, valid number: 0-15"
                        },
                        {
                            "width": 16
                        }
                    ]
                },
                {
                    "id": "field02C",
                    "offset_int": "0x2c",
                    "reg_width": 32,
                    "name": "reserved1",
                    "description": " [0x02c-0x02f] Reserved for future use",
                    "default_value_int": "0x0",
                    "is_reserved": true
                },
                {
                    "id": "field030",
                    "offset_int": "0x30",
                    "reg_width": 32,
                    "name": "configCmdArgs_0",
                    "description": " [0x030-0x03b] Arguments/Parameters for device Configuration commands",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field034",
                    "offset_int": "0x34",
                    "reg_width": 32,
                    "name": "configCmdArgs_1",
                    "description": " [0x030-0x03b] Arguments/Parameters for device Configuration commands",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field038",
                    "offset_int": "0x38",
                    "reg_width": 32,
                    "name": "configCmdArgs_2",
                    "description": " [0x030-0x03b] Arguments/Parameters for device Configuration commands",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field03C",
                    "offset_int": "0x3c",
                    "reg_width": 32,
                    "name": "reserved2",
                    "description": " [0x03c-0x03f] Reserved for future use",
                    "default_value_int": "0x0",
                    "is_reserved": true
                },
                {
                    "id": "field040",
                    "offset_int": "0x40",
                    "reg_width": 32,
                    "name": "controllerMiscOption",
                    "description": " [0x040-0x043] Controller Misc Options, see Misc feature bit definitions for more details",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field044",
                    "offset_int": "0x44",
                    "reg_width": 8,
                    "name": "deviceType",
                    "description": " [0x044-0x044] Device Type:  See Flash Type Definition for more details",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field045",
                    "offset_int": "0x45",
                    "reg_width": 8,
                    "name": "sflashPadType",
                    "description": " [0x045-0x045] Serial Flash Pad Type: 1 - Single, 2 - Dual, 4 - Quad, 8 - Octal",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field046",
                    "offset_int": "0x46",
                    "reg_width": 8,
                    "name": "serialClkFreq",
                    "description": " [0x046-0x046] Serial Flash Frequency, device specific definitions, See System Boot Chapter for more details",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field047",
                    "offset_int": "0x47",
                    "reg_width": 8,
                    "name": "lutCustomSeqEnable",
                    "description": " [0x047-0x047] LUT customization Enable, it is required if the program/erase cannot be done using 1 LUT sequence, currently, only applicable to HyperFLASH",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field048",
                    "offset_int": "0x48",
                    "reg_width": 32,
                    "name": "reserved3_0",
                    "description": " [0x048-0x04f] Reserved for future use",
                    "default_value_int": "0x0",
                    "is_reserved": true
                },
                {
                    "id": "field04C",
                    "offset_int": "0x4c",
                    "reg_width": 32,
                    "name": "reserved3_1",
                    "description": " [0x048-0x04f] Reserved for future use",
                    "default_value_int": "0x0",
                    "is_reserved": true
                },
                {
                    "id": "field050",
                    "offset_int": "0x50",
                    "reg_width": 32,
                    "name": "sflashA1Size",
                    "description": " [0x050-0x053] Size of Flash connected to A1",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field054",
                    "offset_int": "0x54",
                    "reg_width": 32,
                    "name": "sflashA2Size",
                    "description": " [0x054-0x057] Size of Flash connected to A2",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field058",
                    "offset_int": "0x58",
                    "reg_width": 32,
                    "name": "sflashB1Size",
                    "description": " [0x058-0x05b] Size of Flash connected to B1",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field05C",
                    "offset_int": "0x5c",
                    "reg_width": 32,
                    "name": "sflashB2Size",
                    "description": " [0x05c-0x05f] Size of Flash connected to B2",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field060",
                    "offset_int": "0x60",
                    "reg_width": 32,
                    "name": "csPadSettingOverride",
                    "description": " [0x060-0x063] CS pad setting override value",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field064",
                    "offset_int": "0x64",
                    "reg_width": 32,
                    "name": "sclkPadSettingOverride",
                    "description": " [0x064-0x067] SCK pad setting override value",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field068",
                    "offset_int": "0x68",
                    "reg_width": 32,
                    "name": "dataPadSettingOverride",
                    "description": " [0x068-0x06b] data pad setting override value",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field06C",
                    "offset_int": "0x6c",
                    "reg_width": 32,
                    "name": "dqsPadSettingOverride",
                    "description": " [0x06c-0x06f] DQS pad setting override value",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field070",
                    "offset_int": "0x70",
                    "reg_width": 32,
                    "name": "timeoutInMs",
                    "description": " [0x070-0x073] Timeout threshold for read status command",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field074",
                    "offset_int": "0x74",
                    "reg_width": 32,
                    "name": "commandInterval",
                    "description": " [0x074-0x077] CS deselect interval between two commands",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field078",
                    "offset_int": "0x78",
                    "reg_width": 16,
                    "name": "dataValidTime_0",
                    "description": " [0x078-0x07b] CLK edge to data valid time for PORT A and PORT B, in terms of 0.1ns",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field07A",
                    "offset_int": "0x7a",
                    "reg_width": 16,
                    "name": "dataValidTime_1",
                    "description": " [0x078-0x07b] CLK edge to data valid time for PORT A and PORT B, in terms of 0.1ns",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field07C",
                    "offset_int": "0x7c",
                    "reg_width": 16,
                    "name": "busyOffset",
                    "description": " [0x07c-0x07d] Busy offset, valid value: 0-31",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field07E",
                    "offset_int": "0x7e",
                    "reg_width": 16,
                    "name": "busyBitPolarity",
                    "description": " [0x07e-0x07f] Busy flag polarity, 0 - busy flag is 1 when flash device is busy, 1 - busy flag is 0 when flash device is busy",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field080",
                    "offset_int": "0x80",
                    "reg_width": 16,
                    "name": "lookupTable_seq0_instr0",
                    "description": "Lookup table holds Flash command sequences 0, instruction 0",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field080-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field080-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field080-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field082",
                    "offset_int": "0x82",
                    "reg_width": 16,
                    "name": "lookupTable_seq0_instr1",
                    "description": "Lookup table holds Flash command sequences 0, instruction 1",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field082-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field082-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field082-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field084",
                    "offset_int": "0x84",
                    "reg_width": 16,
                    "name": "lookupTable_seq0_instr2",
                    "description": "Lookup table holds Flash command sequences 0, instruction 2",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field084-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field084-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field084-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field086",
                    "offset_int": "0x86",
                    "reg_width": 16,
                    "name": "lookupTable_seq0_instr3",
                    "description": "Lookup table holds Flash command sequences 0, instruction 3",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field086-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field086-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field086-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field088",
                    "offset_int": "0x88",
                    "reg_width": 16,
                    "name": "lookupTable_seq0_instr4",
                    "description": "Lookup table holds Flash command sequences 0, instruction 4",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field088-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field088-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field088-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field08A",
                    "offset_int": "0x8A",
                    "reg_width": 16,
                    "name": "lookupTable_seq0_instr5",
                    "description": "Lookup table holds Flash command sequences 0, instruction 5",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field08A-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field08A-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field08A-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field08C",
                    "offset_int": "0x8C",
                    "reg_width": 16,
                    "name": "lookupTable_seq0_instr6",
                    "description": "Lookup table holds Flash command sequences 0, instruction 6",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field08C-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field08C-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field08C-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field08E",
                    "offset_int": "0x8E",
                    "reg_width": 16,
                    "name": "lookupTable_seq0_instr7",
                    "description": "Lookup table holds Flash command sequences 0, instruction 7",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field08E-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field08E-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field08E-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field090",
                    "offset_int": "0x90",
                    "reg_width": 16,
                    "name": "lookupTable_seq1_instr0",
                    "description": "Lookup table holds Flash command sequences 1, instruction 0",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field090-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field090-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field090-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field092",
                    "offset_int": "0x92",
                    "reg_width": 16,
                    "name": "lookupTable_seq1_instr1",
                    "description": "Lookup table holds Flash command sequences 1, instruction 1",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field092-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field092-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field092-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field094",
                    "offset_int": "0x94",
                    "reg_width": 16,
                    "name": "lookupTable_seq1_instr2",
                    "description": "Lookup table holds Flash command sequences 1, instruction 2",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field094-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field094-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field094-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field096",
                    "offset_int": "0x96",
                    "reg_width": 16,
                    "name": "lookupTable_seq1_instr3",
                    "description": "Lookup table holds Flash command sequences 1, instruction 3",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field096-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field096-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field096-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field098",
                    "offset_int": "0x98",
                    "reg_width": 16,
                    "name": "lookupTable_seq1_instr4",
                    "description": "Lookup table holds Flash command sequences 1, instruction 4",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field098-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field098-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field098-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field09A",
                    "offset_int": "0x9A",
                    "reg_width": 16,
                    "name": "lookupTable_seq1_instr5",
                    "description": "Lookup table holds Flash command sequences 1, instruction 5",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field09A-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field09A-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field09A-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field09C",
                    "offset_int": "0x9C",
                    "reg_width": 16,
                    "name": "lookupTable_seq1_instr6",
                    "description": "Lookup table holds Flash command sequences 1, instruction 6",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field09C-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field09C-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field09C-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field09E",
                    "offset_int": "0x9E",
                    "reg_width": 16,
                    "name": "lookupTable_seq1_instr7",
                    "description": "Lookup table holds Flash command sequences 1, instruction 7",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field09E-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field09E-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field09E-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0A0",
                    "offset_int": "0xA0",
                    "reg_width": 16,
                    "name": "lookupTable_seq2_instr0",
                    "description": "Lookup table holds Flash command sequences 2, instruction 0",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0A0-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0A0-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0A0-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0A2",
                    "offset_int": "0xA2",
                    "reg_width": 16,
                    "name": "lookupTable_seq2_instr1",
                    "description": "Lookup table holds Flash command sequences 2, instruction 1",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0A2-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0A2-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0A2-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0A4",
                    "offset_int": "0xA4",
                    "reg_width": 16,
                    "name": "lookupTable_seq2_instr2",
                    "description": "Lookup table holds Flash command sequences 2, instruction 2",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0A4-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0A4-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0A4-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0A6",
                    "offset_int": "0xA6",
                    "reg_width": 16,
                    "name": "lookupTable_seq2_instr3",
                    "description": "Lookup table holds Flash command sequences 2, instruction 3",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0A6-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0A6-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0A6-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0A8",
                    "offset_int": "0xA8",
                    "reg_width": 16,
                    "name": "lookupTable_seq2_instr4",
                    "description": "Lookup table holds Flash command sequences 2, instruction 4",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0A8-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0A8-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0A8-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0AA",
                    "offset_int": "0xAA",
                    "reg_width": 16,
                    "name": "lookupTable_seq2_instr5",
                    "description": "Lookup table holds Flash command sequences 2, instruction 5",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0AA-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0AA-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0AA-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0AC",
                    "offset_int": "0xAC",
                    "reg_width": 16,
                    "name": "lookupTable_seq2_instr6",
                    "description": "Lookup table holds Flash command sequences 2, instruction 6",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0AC-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0AC-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0AC-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0AE",
                    "offset_int": "0xAE",
                    "reg_width": 16,
                    "name": "lookupTable_seq2_instr7",
                    "description": "Lookup table holds Flash command sequences 2, instruction 7",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0AE-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0AE-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0AE-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0B0",
                    "offset_int": "0xB0",
                    "reg_width": 16,
                    "name": "lookupTable_seq3_instr0",
                    "description": "Lookup table holds Flash command sequences 3, instruction 0",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0B0-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0B0-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0B0-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0B2",
                    "offset_int": "0xB2",
                    "reg_width": 16,
                    "name": "lookupTable_seq3_instr1",
                    "description": "Lookup table holds Flash command sequences 3, instruction 1",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0B2-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0B2-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0B2-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0B4",
                    "offset_int": "0xB4",
                    "reg_width": 16,
                    "name": "lookupTable_seq3_instr2",
                    "description": "Lookup table holds Flash command sequences 3, instruction 2",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0B4-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0B4-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0B4-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0B6",
                    "offset_int": "0xB6",
                    "reg_width": 16,
                    "name": "lookupTable_seq3_instr3",
                    "description": "Lookup table holds Flash command sequences 3, instruction 3",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0B6-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0B6-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0B6-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0B8",
                    "offset_int": "0xB8",
                    "reg_width": 16,
                    "name": "lookupTable_seq3_instr4",
                    "description": "Lookup table holds Flash command sequences 3, instruction 4",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0B8-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0B8-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0B8-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0BA",
                    "offset_int": "0xBA",
                    "reg_width": 16,
                    "name": "lookupTable_seq3_instr5",
                    "description": "Lookup table holds Flash command sequences 3, instruction 5",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0BA-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0BA-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0BA-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0BC",
                    "offset_int": "0xBC",
                    "reg_width": 16,
                    "name": "lookupTable_seq3_instr6",
                    "description": "Lookup table holds Flash command sequences 3, instruction 6",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0BC-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0BC-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0BC-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0BE",
                    "offset_int": "0xBE",
                    "reg_width": 16,
                    "name": "lookupTable_seq3_instr7",
                    "description": "Lookup table holds Flash command sequences 3, instruction 7",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0BE-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0BE-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0BE-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0C0",
                    "offset_int": "0xC0",
                    "reg_width": 16,
                    "name": "lookupTable_seq4_instr0",
                    "description": "Lookup table holds Flash command sequences 4, instruction 0",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0C0-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0C0-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0C0-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0C2",
                    "offset_int": "0xC2",
                    "reg_width": 16,
                    "name": "lookupTable_seq4_instr1",
                    "description": "Lookup table holds Flash command sequences 4, instruction 1",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0C2-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0C2-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0C2-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0C4",
                    "offset_int": "0xC4",
                    "reg_width": 16,
                    "name": "lookupTable_seq4_instr2",
                    "description": "Lookup table holds Flash command sequences 4, instruction 2",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0C4-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0C4-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0C4-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0C6",
                    "offset_int": "0xC6",
                    "reg_width": 16,
                    "name": "lookupTable_seq4_instr3",
                    "description": "Lookup table holds Flash command sequences 4, instruction 3",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0C6-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0C6-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0C6-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0C8",
                    "offset_int": "0xC8",
                    "reg_width": 16,
                    "name": "lookupTable_seq4_instr4",
                    "description": "Lookup table holds Flash command sequences 4, instruction 4",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0C8-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0C8-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0C8-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0CA",
                    "offset_int": "0xCA",
                    "reg_width": 16,
                    "name": "lookupTable_seq4_instr5",
                    "description": "Lookup table holds Flash command sequences 4, instruction 5",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0CA-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0CA-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0CA-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0CC",
                    "offset_int": "0xCC",
                    "reg_width": 16,
                    "name": "lookupTable_seq4_instr6",
                    "description": "Lookup table holds Flash command sequences 4, instruction 6",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0CC-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0CC-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0CC-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0CE",
                    "offset_int": "0xCE",
                    "reg_width": 16,
                    "name": "lookupTable_seq4_instr7",
                    "description": "Lookup table holds Flash command sequences 4, instruction 7",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0CE-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0CE-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0CE-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0D0",
                    "offset_int": "0xD0",
                    "reg_width": 16,
                    "name": "lookupTable_seq5_instr0",
                    "description": "Lookup table holds Flash command sequences 5, instruction 0",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0D0-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0D0-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0D0-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0D2",
                    "offset_int": "0xD2",
                    "reg_width": 16,
                    "name": "lookupTable_seq5_instr1",
                    "description": "Lookup table holds Flash command sequences 5, instruction 1",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0D2-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0D2-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0D2-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0D4",
                    "offset_int": "0xD4",
                    "reg_width": 16,
                    "name": "lookupTable_seq5_instr2",
                    "description": "Lookup table holds Flash command sequences 5, instruction 2",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0D4-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0D4-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0D4-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0D6",
                    "offset_int": "0xD6",
                    "reg_width": 16,
                    "name": "lookupTable_seq5_instr3",
                    "description": "Lookup table holds Flash command sequences 5, instruction 3",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0D6-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0D6-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0D6-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0D8",
                    "offset_int": "0xD8",
                    "reg_width": 16,
                    "name": "lookupTable_seq5_instr4",
                    "description": "Lookup table holds Flash command sequences 5, instruction 4",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0D8-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0D8-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0D8-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0DA",
                    "offset_int": "0xDA",
                    "reg_width": 16,
                    "name": "lookupTable_seq5_instr5",
                    "description": "Lookup table holds Flash command sequences 5, instruction 5",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0DA-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0DA-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0DA-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0DC",
                    "offset_int": "0xDC",
                    "reg_width": 16,
                    "name": "lookupTable_seq5_instr6",
                    "description": "Lookup table holds Flash command sequences 5, instruction 6",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0DC-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0DC-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0DC-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0DE",
                    "offset_int": "0xDE",
                    "reg_width": 16,
                    "name": "lookupTable_seq5_instr7",
                    "description": "Lookup table holds Flash command sequences 5, instruction 7",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0DE-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0DE-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0DE-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0E0",
                    "offset_int": "0xE0",
                    "reg_width": 16,
                    "name": "lookupTable_seq6_instr0",
                    "description": "Lookup table holds Flash command sequences 6, instruction 0",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0E0-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0E0-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0E0-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0E2",
                    "offset_int": "0xE2",
                    "reg_width": 16,
                    "name": "lookupTable_seq6_instr1",
                    "description": "Lookup table holds Flash command sequences 6, instruction 1",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0E2-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0E2-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0E2-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0E4",
                    "offset_int": "0xE4",
                    "reg_width": 16,
                    "name": "lookupTable_seq6_instr2",
                    "description": "Lookup table holds Flash command sequences 6, instruction 2",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0E4-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0E4-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0E4-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0E6",
                    "offset_int": "0xE6",
                    "reg_width": 16,
                    "name": "lookupTable_seq6_instr3",
                    "description": "Lookup table holds Flash command sequences 6, instruction 3",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0E6-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0E6-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0E6-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0E8",
                    "offset_int": "0xE8",
                    "reg_width": 16,
                    "name": "lookupTable_seq6_instr4",
                    "description": "Lookup table holds Flash command sequences 6, instruction 4",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0E8-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0E8-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0E8-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0EA",
                    "offset_int": "0xEA",
                    "reg_width": 16,
                    "name": "lookupTable_seq6_instr5",
                    "description": "Lookup table holds Flash command sequences 6, instruction 5",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0EA-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0EA-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0EA-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0EC",
                    "offset_int": "0xEC",
                    "reg_width": 16,
                    "name": "lookupTable_seq6_instr6",
                    "description": "Lookup table holds Flash command sequences 6, instruction 6",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0EC-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0EC-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0EC-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0EE",
                    "offset_int": "0xEE",
                    "reg_width": 16,
                    "name": "lookupTable_seq6_instr7",
                    "description": "Lookup table holds Flash command sequences 6, instruction 7",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0EE-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0EE-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0EE-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0F0",
                    "offset_int": "0xF0",
                    "reg_width": 16,
                    "name": "lookupTable_seq7_instr0",
                    "description": "Lookup table holds Flash command sequences 7, instruction 0",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0F0-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0F0-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0F0-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0F2",
                    "offset_int": "0xF2",
                    "reg_width": 16,
                    "name": "lookupTable_seq7_instr1",
                    "description": "Lookup table holds Flash command sequences 7, instruction 1",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0F2-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0F2-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0F2-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0F4",
                    "offset_int": "0xF4",
                    "reg_width": 16,
                    "name": "lookupTable_seq7_instr2",
                    "description": "Lookup table holds Flash command sequences 7, instruction 2",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0F4-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0F4-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0F4-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0F6",
                    "offset_int": "0xF6",
                    "reg_width": 16,
                    "name": "lookupTable_seq7_instr3",
                    "description": "Lookup table holds Flash command sequences 7, instruction 3",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0F6-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0F6-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0F6-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0F8",
                    "offset_int": "0xF8",
                    "reg_width": 16,
                    "name": "lookupTable_seq7_instr4",
                    "description": "Lookup table holds Flash command sequences 7, instruction 4",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0F8-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0F8-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0F8-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0FA",
                    "offset_int": "0xFA",
                    "reg_width": 16,
                    "name": "lookupTable_seq7_instr5",
                    "description": "Lookup table holds Flash command sequences 7, instruction 5",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0FA-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0FA-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0FA-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0FC",
                    "offset_int": "0xFC",
                    "reg_width": 16,
                    "name": "lookupTable_seq7_instr6",
                    "description": "Lookup table holds Flash command sequences 7, instruction 6",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0FC-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0FC-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0FC-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field0FE",
                    "offset_int": "0xFE",
                    "reg_width": 16,
                    "name": "lookupTable_seq7_instr7",
                    "description": "Lookup table holds Flash command sequences 7, instruction 7",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field0FE-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field0FE-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field0FE-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field100",
                    "offset_int": "0x100",
                    "reg_width": 16,
                    "name": "lookupTable_seq8_instr0",
                    "description": "Lookup table holds Flash command sequences 8, instruction 0",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field100-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field100-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field100-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field102",
                    "offset_int": "0x102",
                    "reg_width": 16,
                    "name": "lookupTable_seq8_instr1",
                    "description": "Lookup table holds Flash command sequences 8, instruction 1",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field102-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field102-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field102-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field104",
                    "offset_int": "0x104",
                    "reg_width": 16,
                    "name": "lookupTable_seq8_instr2",
                    "description": "Lookup table holds Flash command sequences 8, instruction 2",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field104-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field104-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field104-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field106",
                    "offset_int": "0x106",
                    "reg_width": 16,
                    "name": "lookupTable_seq8_instr3",
                    "description": "Lookup table holds Flash command sequences 8, instruction 3",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field106-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field106-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field106-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field108",
                    "offset_int": "0x108",
                    "reg_width": 16,
                    "name": "lookupTable_seq8_instr4",
                    "description": "Lookup table holds Flash command sequences 8, instruction 4",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field108-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field108-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field108-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field10A",
                    "offset_int": "0x10A",
                    "reg_width": 16,
                    "name": "lookupTable_seq8_instr5",
                    "description": "Lookup table holds Flash command sequences 8, instruction 5",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field10A-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field10A-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field10A-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field10C",
                    "offset_int": "0x10C",
                    "reg_width": 16,
                    "name": "lookupTable_seq8_instr6",
                    "description": "Lookup table holds Flash command sequences 8, instruction 6",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field10C-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field10C-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field10C-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field10E",
                    "offset_int": "0x10E",
                    "reg_width": 16,
                    "name": "lookupTable_seq8_instr7",
                    "description": "Lookup table holds Flash command sequences 8, instruction 7",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field10E-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field10E-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field10E-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field110",
                    "offset_int": "0x110",
                    "reg_width": 16,
                    "name": "lookupTable_seq9_instr0",
                    "description": "Lookup table holds Flash command sequences 9, instruction 0",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field110-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field110-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field110-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field112",
                    "offset_int": "0x112",
                    "reg_width": 16,
                    "name": "lookupTable_seq9_instr1",
                    "description": "Lookup table holds Flash command sequences 9, instruction 1",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field112-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field112-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field112-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field114",
                    "offset_int": "0x114",
                    "reg_width": 16,
                    "name": "lookupTable_seq9_instr2",
                    "description": "Lookup table holds Flash command sequences 9, instruction 2",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field114-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field114-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field114-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field116",
                    "offset_int": "0x116",
                    "reg_width": 16,
                    "name": "lookupTable_seq9_instr3",
                    "description": "Lookup table holds Flash command sequences 9, instruction 3",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field116-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field116-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field116-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field118",
                    "offset_int": "0x118",
                    "reg_width": 16,
                    "name": "lookupTable_seq9_instr4",
                    "description": "Lookup table holds Flash command sequences 9, instruction 4",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field118-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field118-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field118-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field11A",
                    "offset_int": "0x11A",
                    "reg_width": 16,
                    "name": "lookupTable_seq9_instr5",
                    "description": "Lookup table holds Flash command sequences 9, instruction 5",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field11A-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field11A-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field11A-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field11C",
                    "offset_int": "0x11C",
                    "reg_width": 16,
                    "name": "lookupTable_seq9_instr6",
                    "description": "Lookup table holds Flash command sequences 9, instruction 6",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field11C-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field11C-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field11C-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field11E",
                    "offset_int": "0x11E",
                    "reg_width": 16,
                    "name": "lookupTable_seq9_instr7",
                    "description": "Lookup table holds Flash command sequences 9, instruction 7",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field11E-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field11E-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field11E-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field120",
                    "offset_int": "0x120",
                    "reg_width": 16,
                    "name": "lookupTable_seq10_instr0",
                    "description": "Lookup table holds Flash command sequences 10, instruction 0",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field120-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field120-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field120-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field122",
                    "offset_int": "0x122",
                    "reg_width": 16,
                    "name": "lookupTable_seq10_instr1",
                    "description": "Lookup table holds Flash command sequences 10, instruction 1",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field122-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field122-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field122-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field124",
                    "offset_int": "0x124",
                    "reg_width": 16,
                    "name": "lookupTable_seq10_instr2",
                    "description": "Lookup table holds Flash command sequences 10, instruction 2",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field124-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field124-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field124-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field126",
                    "offset_int": "0x126",
                    "reg_width": 16,
                    "name": "lookupTable_seq10_instr3",
                    "description": "Lookup table holds Flash command sequences 10, instruction 3",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field126-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field126-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field126-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field128",
                    "offset_int": "0x128",
                    "reg_width": 16,
                    "name": "lookupTable_seq10_instr4",
                    "description": "Lookup table holds Flash command sequences 10, instruction 4",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field128-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field128-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field128-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field12A",
                    "offset_int": "0x12A",
                    "reg_width": 16,
                    "name": "lookupTable_seq10_instr5",
                    "description": "Lookup table holds Flash command sequences 10, instruction 5",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field12A-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field12A-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field12A-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field12C",
                    "offset_int": "0x12C",
                    "reg_width": 16,
                    "name": "lookupTable_seq10_instr6",
                    "description": "Lookup table holds Flash command sequences 10, instruction 6",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field12C-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field12C-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field12C-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field12E",
                    "offset_int": "0x12E",
                    "reg_width": 16,
                    "name": "lookupTable_seq10_instr7",
                    "description": "Lookup table holds Flash command sequences 10, instruction 7",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field12E-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field12E-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field12E-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field130",
                    "offset_int": "0x130",
                    "reg_width": 16,
                    "name": "lookupTable_seq11_instr0",
                    "description": "Lookup table holds Flash command sequences 11, instruction 0",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field130-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field130-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field130-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field132",
                    "offset_int": "0x132",
                    "reg_width": 16,
                    "name": "lookupTable_seq11_instr1",
                    "description": "Lookup table holds Flash command sequences 11, instruction 1",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field132-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field132-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field132-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field134",
                    "offset_int": "0x134",
                    "reg_width": 16,
                    "name": "lookupTable_seq11_instr2",
                    "description": "Lookup table holds Flash command sequences 11, instruction 2",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field134-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field134-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field134-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field136",
                    "offset_int": "0x136",
                    "reg_width": 16,
                    "name": "lookupTable_seq11_instr3",
                    "description": "Lookup table holds Flash command sequences 11, instruction 3",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field136-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field136-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field136-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field138",
                    "offset_int": "0x138",
                    "reg_width": 16,
                    "name": "lookupTable_seq11_instr4",
                    "description": "Lookup table holds Flash command sequences 11, instruction 4",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field138-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field138-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field138-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field13A",
                    "offset_int": "0x13A",
                    "reg_width": 16,
                    "name": "lookupTable_seq11_instr5",
                    "description": "Lookup table holds Flash command sequences 11, instruction 5",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field13A-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field13A-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field13A-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field13C",
                    "offset_int": "0x13C",
                    "reg_width": 16,
                    "name": "lookupTable_seq11_instr6",
                    "description": "Lookup table holds Flash command sequences 11, instruction 6",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field13C-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field13C-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field13C-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field13E",
                    "offset_int": "0x13E",
                    "reg_width": 16,
                    "name": "lookupTable_seq11_instr7",
                    "description": "Lookup table holds Flash command sequences 11, instruction 7",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field13E-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field13E-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field13E-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field140",
                    "offset_int": "0x140",
                    "reg_width": 16,
                    "name": "lookupTable_seq12_instr0",
                    "description": "Lookup table holds Flash command sequences 12, instruction 0",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field140-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field140-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field140-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field142",
                    "offset_int": "0x142",
                    "reg_width": 16,
                    "name": "lookupTable_seq12_instr1",
                    "description": "Lookup table holds Flash command sequences 12, instruction 1",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field142-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field142-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field142-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field144",
                    "offset_int": "0x144",
                    "reg_width": 16,
                    "name": "lookupTable_seq12_instr2",
                    "description": "Lookup table holds Flash command sequences 12, instruction 2",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field144-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field144-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field144-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field146",
                    "offset_int": "0x146",
                    "reg_width": 16,
                    "name": "lookupTable_seq12_instr3",
                    "description": "Lookup table holds Flash command sequences 12, instruction 3",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field146-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field146-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field146-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field148",
                    "offset_int": "0x148",
                    "reg_width": 16,
                    "name": "lookupTable_seq12_instr4",
                    "description": "Lookup table holds Flash command sequences 12, instruction 4",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field148-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field148-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field148-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field14A",
                    "offset_int": "0x14A",
                    "reg_width": 16,
                    "name": "lookupTable_seq12_instr5",
                    "description": "Lookup table holds Flash command sequences 12, instruction 5",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field14A-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field14A-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field14A-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field14C",
                    "offset_int": "0x14C",
                    "reg_width": 16,
                    "name": "lookupTable_seq12_instr6",
                    "description": "Lookup table holds Flash command sequences 12, instruction 6",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field14C-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field14C-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field14C-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field14E",
                    "offset_int": "0x14E",
                    "reg_width": 16,
                    "name": "lookupTable_seq12_instr7",
                    "description": "Lookup table holds Flash command sequences 12, instruction 7",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field14E-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field14E-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field14E-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field150",
                    "offset_int": "0x150",
                    "reg_width": 16,
                    "name": "lookupTable_seq13_instr0",
                    "description": "Lookup table holds Flash command sequences 13, instruction 0",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field150-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field150-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field150-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field152",
                    "offset_int": "0x152",
                    "reg_width": 16,
                    "name": "lookupTable_seq13_instr1",
                    "description": "Lookup table holds Flash command sequences 13, instruction 1",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field152-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field152-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field152-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field154",
                    "offset_int": "0x154",
                    "reg_width": 16,
                    "name": "lookupTable_seq13_instr2",
                    "description": "Lookup table holds Flash command sequences 13, instruction 2",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field154-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field154-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field154-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field156",
                    "offset_int": "0x156",
                    "reg_width": 16,
                    "name": "lookupTable_seq13_instr3",
                    "description": "Lookup table holds Flash command sequences 13, instruction 3",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field156-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field156-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field156-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field158",
                    "offset_int": "0x158",
                    "reg_width": 16,
                    "name": "lookupTable_seq13_instr4",
                    "description": "Lookup table holds Flash command sequences 13, instruction 4",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field158-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field158-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field158-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field15A",
                    "offset_int": "0x15A",
                    "reg_width": 16,
                    "name": "lookupTable_seq13_instr5",
                    "description": "Lookup table holds Flash command sequences 13, instruction 5",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field15A-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field15A-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field15A-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field15C",
                    "offset_int": "0x15C",
                    "reg_width": 16,
                    "name": "lookupTable_seq13_instr6",
                    "description": "Lookup table holds Flash command sequences 13, instruction 6",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field15C-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field15C-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field15C-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field15E",
                    "offset_int": "0x15E",
                    "reg_width": 16,
                    "name": "lookupTable_seq13_instr7",
                    "description": "Lookup table holds Flash command sequences 13, instruction 7",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field15E-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field15E-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field15E-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field160",
                    "offset_int": "0x160",
                    "reg_width": 16,
                    "name": "lookupTable_seq14_instr0",
                    "description": "Lookup table holds Flash command sequences 14, instruction 0",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field160-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field160-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field160-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field162",
                    "offset_int": "0x162",
                    "reg_width": 16,
                    "name": "lookupTable_seq14_instr1",
                    "description": "Lookup table holds Flash command sequences 14, instruction 1",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field162-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field162-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field162-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field164",
                    "offset_int": "0x164",
                    "reg_width": 16,
                    "name": "lookupTable_seq14_instr2",
                    "description": "Lookup table holds Flash command sequences 14, instruction 2",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field164-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field164-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field164-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field166",
                    "offset_int": "0x166",
                    "reg_width": 16,
                    "name": "lookupTable_seq14_instr3",
                    "description": "Lookup table holds Flash command sequences 14, instruction 3",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field166-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field166-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field166-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field168",
                    "offset_int": "0x168",
                    "reg_width": 16,
                    "name": "lookupTable_seq14_instr4",
                    "description": "Lookup table holds Flash command sequences 14, instruction 4",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field168-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field168-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field168-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field16A",
                    "offset_int": "0x16A",
                    "reg_width": 16,
                    "name": "lookupTable_seq14_instr5",
                    "description": "Lookup table holds Flash command sequences 14, instruction 5",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field16A-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field16A-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field16A-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field16C",
                    "offset_int": "0x16C",
                    "reg_width": 16,
                    "name": "lookupTable_seq14_instr6",
                    "description": "Lookup table holds Flash command sequences 14, instruction 6",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field16C-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field16C-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field16C-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field16E",
                    "offset_int": "0x16E",
                    "reg_width": 16,
                    "name": "lookupTable_seq14_instr7",
                    "description": "Lookup table holds Flash command sequences 14, instruction 7",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field16E-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field16E-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field16E-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field170",
                    "offset_int": "0x170",
                    "reg_width": 16,
                    "name": "lookupTable_seq15_instr0",
                    "description": "Lookup table holds Flash command sequences 15, instruction 0",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field170-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field170-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field170-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field172",
                    "offset_int": "0x172",
                    "reg_width": 16,
                    "name": "lookupTable_seq15_instr1",
                    "description": "Lookup table holds Flash command sequences 15, instruction 1",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field172-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field172-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field172-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field174",
                    "offset_int": "0x174",
                    "reg_width": 16,
                    "name": "lookupTable_seq15_instr2",
                    "description": "Lookup table holds Flash command sequences 15, instruction 2",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field174-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field174-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field174-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field176",
                    "offset_int": "0x176",
                    "reg_width": 16,
                    "name": "lookupTable_seq15_instr3",
                    "description": "Lookup table holds Flash command sequences 15, instruction 3",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field176-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field176-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field176-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field178",
                    "offset_int": "0x178",
                    "reg_width": 16,
                    "name": "lookupTable_seq15_instr4",
                    "description": "Lookup table holds Flash command sequences 15, instruction 4",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field178-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field178-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field178-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field17A",
                    "offset_int": "0x17A",
                    "reg_width": 16,
                    "name": "lookupTable_seq15_instr5",
                    "description": "Lookup table holds Flash command sequences 15, instruction 5",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field17A-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field17A-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field17A-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field17C",
                    "offset_int": "0x17C",
                    "reg_width": 16,
                    "name": "lookupTable_seq15_instr6",
                    "description": "Lookup table holds Flash command sequences 15, instruction 6",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field17C-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field17C-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field17C-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field17E",
                    "offset_int": "0x17E",
                    "reg_width": 16,
                    "name": "lookupTable_seq15_instr7",
                    "description": "Lookup table holds Flash command sequences 15, instruction 7",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "field17E-bits-0-7",
                            "name": "OPERAND",
                            "description": "Instruction operand. Its values depends on used instruction"
                        },
                        {
                            "width": 2,
                            "id": "field17E-bits-8-9",
                            "name": "NUM_PADS",
                            "description": "Number of pads used by instruction. Some instructions ignores this parameter.",
                            "values": [
                                {
                                    "name": "1PAD",
                                    "value": 0,
                                    "description": "Single mode. One pad is used."
                                },
                                {
                                    "name": "2PAD",
                                    "value": 1,
                                    "description": "Dual mode. Two pads are used."
                                },
                                {
                                    "name": "4PAD",
                                    "value": 2,
                                    "description": "Quad mode. Four pads are used."
                                },
                                {
                                    "name": "8PAD",
                                    "value": 3,
                                    "description": "Octal mode. Eight pads are used."
                                }
                            ]
                        },
                        {
                            "width": 6,
                            "id": "field17E-bits-10-15",
                            "name": "OPERATION_CODE",
                            "description": "Instruction operation code.",
                            "values": [
                                {
                                    "name": "STOP",
                                    "value": 0,
                                    "description": "Stop execution and de-assert CS. Then, the next command sequence (to the same flash device) starts from instruction pointer 0."
                                },
                                {
                                    "name": "CMD_SDR",
                                    "value": 1,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_SDR",
                                    "value": 2,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_SDR",
                                    "value": 3,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_SDR",
                                    "value": 4,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_SDR",
                                    "value": 5,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_SDR",
                                    "value": 6,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_SDR",
                                    "value": 7,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_SDR",
                                    "value": 8,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_SDR",
                                    "value": 9,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_SDR",
                                    "value": 10,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_SDR",
                                    "value": 11,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_SDR",
                                    "value": 12,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_SDR",
                                    "value": 13,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                },
                                {
                                    "name": "JMP_ON_CS",
                                    "value": 31,
                                    "description": "Stop execution, de-assert CS and save operand[7:0] as the instruction start pointer for next sequence.Normally this instruction is used to support Execute-In-Place enhanced mode. See XIP enhanced mode for more details.This instruction is only allowed for AHB read commands. There is interrupt status bit set (INTR[IPCMDERR] or INTR[AHBCMDERR]) when using this instruction in IP command or AHB write command."
                                },
                                {
                                    "name": "CMD_DDR",
                                    "value": 33,
                                    "description": "Transmit command code to Flash."
                                },
                                {
                                    "name": "RADDR_DDR",
                                    "value": 34,
                                    "description": "Transmit row address to Flash."
                                },
                                {
                                    "name": "CADDR_DDR",
                                    "value": 35,
                                    "description": "Transmit column address to Flash."
                                },
                                {
                                    "name": "MODE1_DDR",
                                    "value": 36,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE2_DDR",
                                    "value": 37,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE4_DDR",
                                    "value": 38,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "MODE8_DDR",
                                    "value": 39,
                                    "description": "Transmit mode bits to Flash."
                                },
                                {
                                    "name": "WRITE_DDR",
                                    "value": 40,
                                    "description": "Transmit program data to Flash device."
                                },
                                {
                                    "name": "READ_DDR",
                                    "value": 41,
                                    "description": "Receive read data from Flash device. Read data is put into AHB_RX_BUF or IP_RX_FIFO."
                                },
                                {
                                    "name": "LEARN_DDR",
                                    "value": 42,
                                    "description": "Receive read data or Preamble bit from Flash deviceThe FlexSPI controller will compare the data line bits with DLPR register to determine a correct sampling clock phase."
                                },
                                {
                                    "name": "DATSZ_DDR",
                                    "value": 43,
                                    "description": "Transmit read or program data size (byte number) to Flash device."
                                },
                                {
                                    "name": "DUMMY_DDR",
                                    "value": 44,
                                    "description": "Leave data lines undriven by the FlexSPI controller. Turnaround cycles are provided from host driving to device driving. num_pads determines the number of pads in input mode."
                                },
                                {
                                    "name": "DUMMY_RWDS_DDR",
                                    "value": 45,
                                    "description": "This instruction is similar to DUMMY_SDR/DUMMY_DDR instruction. The difference lies in the dummy cycle number.DQS pin is called RWDS in HyperBus specification. See Dummy instruction for more details.Set operand as 'Latency count' for HyperBus devices."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "field180",
                    "offset_int": "0x180",
                    "reg_width": 32,
                    "name": "lutCustomSeq_0",
                    "description": " [0x180-0x1af] Customizable LUT Sequences",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "id": "field180-bits0-7",
                            "width": 8,
                            "name": "seqNum",
                            "access": "RW",
                            "description": " Sequence Number, valid number: 1-16"
                        },
                        {
                            "id": "field180-bits8-15",
                            "width": 8,
                            "name": "seqId",
                            "access": "RW",
                            "description": " Sequence Index, valid number: 0-15"
                        },
                        {
                            "width": 16
                        }
                    ]
                },
                {
                    "id": "field184",
                    "offset_int": "0x184",
                    "reg_width": 32,
                    "name": "lutCustomSeq_1",
                    "description": " [0x180-0x1af] Customizable LUT Sequences",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "id": "field184-bits0-7",
                            "width": 8,
                            "name": "seqNum",
                            "access": "RW",
                            "description": " Sequence Number, valid number: 1-16"
                        },
                        {
                            "id": "field184-bits8-15",
                            "width": 8,
                            "name": "seqId",
                            "access": "RW",
                            "description": " Sequence Index, valid number: 0-15"
                        },
                        {
                            "width": 16
                        }
                    ]
                },
                {
                    "id": "field188",
                    "offset_int": "0x188",
                    "reg_width": 32,
                    "name": "lutCustomSeq_2",
                    "description": " [0x180-0x1af] Customizable LUT Sequences",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "id": "field188-bits0-7",
                            "width": 8,
                            "name": "seqNum",
                            "access": "RW",
                            "description": " Sequence Number, valid number: 1-16"
                        },
                        {
                            "id": "field188-bits8-15",
                            "width": 8,
                            "name": "seqId",
                            "access": "RW",
                            "description": " Sequence Index, valid number: 0-15"
                        },
                        {
                            "width": 16
                        }
                    ]
                },
                {
                    "id": "field18C",
                    "offset_int": "0x18c",
                    "reg_width": 32,
                    "name": "lutCustomSeq_3",
                    "description": " [0x180-0x1af] Customizable LUT Sequences",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "id": "field18C-bits0-7",
                            "width": 8,
                            "name": "seqNum",
                            "access": "RW",
                            "description": " Sequence Number, valid number: 1-16"
                        },
                        {
                            "id": "field18C-bits8-15",
                            "width": 8,
                            "name": "seqId",
                            "access": "RW",
                            "description": " Sequence Index, valid number: 0-15"
                        },
                        {
                            "width": 16
                        }
                    ]
                },
                {
                    "id": "field190",
                    "offset_int": "0x190",
                    "reg_width": 32,
                    "name": "lutCustomSeq_4",
                    "description": " [0x180-0x1af] Customizable LUT Sequences",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "id": "field190-bits0-7",
                            "width": 8,
                            "name": "seqNum",
                            "access": "RW",
                            "description": " Sequence Number, valid number: 1-16"
                        },
                        {
                            "id": "field190-bits8-15",
                            "width": 8,
                            "name": "seqId",
                            "access": "RW",
                            "description": " Sequence Index, valid number: 0-15"
                        },
                        {
                            "width": 16
                        }
                    ]
                },
                {
                    "id": "field194",
                    "offset_int": "0x194",
                    "reg_width": 32,
                    "name": "lutCustomSeq_5",
                    "description": " [0x180-0x1af] Customizable LUT Sequences",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "id": "field194-bits0-7",
                            "width": 8,
                            "name": "seqNum",
                            "access": "RW",
                            "description": " Sequence Number, valid number: 1-16"
                        },
                        {
                            "id": "field194-bits8-15",
                            "width": 8,
                            "name": "seqId",
                            "access": "RW",
                            "description": " Sequence Index, valid number: 0-15"
                        },
                        {
                            "width": 16
                        }
                    ]
                },
                {
                    "id": "field198",
                    "offset_int": "0x198",
                    "reg_width": 32,
                    "name": "lutCustomSeq_6",
                    "description": " [0x180-0x1af] Customizable LUT Sequences",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "id": "field198-bits0-7",
                            "width": 8,
                            "name": "seqNum",
                            "access": "RW",
                            "description": " Sequence Number, valid number: 1-16"
                        },
                        {
                            "id": "field198-bits8-15",
                            "width": 8,
                            "name": "seqId",
                            "access": "RW",
                            "description": " Sequence Index, valid number: 0-15"
                        },
                        {
                            "width": 16
                        }
                    ]
                },
                {
                    "id": "field19C",
                    "offset_int": "0x19c",
                    "reg_width": 32,
                    "name": "lutCustomSeq_7",
                    "description": " [0x180-0x1af] Customizable LUT Sequences",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "id": "field19C-bits0-7",
                            "width": 8,
                            "name": "seqNum",
                            "access": "RW",
                            "description": " Sequence Number, valid number: 1-16"
                        },
                        {
                            "id": "field19C-bits8-15",
                            "width": 8,
                            "name": "seqId",
                            "access": "RW",
                            "description": " Sequence Index, valid number: 0-15"
                        },
                        {
                            "width": 16
                        }
                    ]
                },
                {
                    "id": "field1A0",
                    "offset_int": "0x1a0",
                    "reg_width": 32,
                    "name": "lutCustomSeq_8",
                    "description": " [0x180-0x1af] Customizable LUT Sequences",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "id": "field1A0-bits0-7",
                            "width": 8,
                            "name": "seqNum",
                            "access": "RW",
                            "description": " Sequence Number, valid number: 1-16"
                        },
                        {
                            "id": "field1A0-bits8-15",
                            "width": 8,
                            "name": "seqId",
                            "access": "RW",
                            "description": " Sequence Index, valid number: 0-15"
                        },
                        {
                            "width": 16
                        }
                    ]
                },
                {
                    "id": "field1A4",
                    "offset_int": "0x1a4",
                    "reg_width": 32,
                    "name": "lutCustomSeq_9",
                    "description": " [0x180-0x1af] Customizable LUT Sequences",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "id": "field1A4-bits0-7",
                            "width": 8,
                            "name": "seqNum",
                            "access": "RW",
                            "description": " Sequence Number, valid number: 1-16"
                        },
                        {
                            "id": "field1A4-bits8-15",
                            "width": 8,
                            "name": "seqId",
                            "access": "RW",
                            "description": " Sequence Index, valid number: 0-15"
                        },
                        {
                            "width": 16
                        }
                    ]
                },
                {
                    "id": "field1A8",
                    "offset_int": "0x1a8",
                    "reg_width": 32,
                    "name": "lutCustomSeq_10",
                    "description": " [0x180-0x1af] Customizable LUT Sequences",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "id": "field1A8-bits0-7",
                            "width": 8,
                            "name": "seqNum",
                            "access": "RW",
                            "description": " Sequence Number, valid number: 1-16"
                        },
                        {
                            "id": "field1A8-bits8-15",
                            "width": 8,
                            "name": "seqId",
                            "access": "RW",
                            "description": " Sequence Index, valid number: 0-15"
                        },
                        {
                            "width": 16
                        }
                    ]
                },
                {
                    "id": "field1AC",
                    "offset_int": "0x1ac",
                    "reg_width": 32,
                    "name": "lutCustomSeq_11",
                    "description": " [0x180-0x1af] Customizable LUT Sequences",
                    "default_value_int": "0x0",
                    "bitfields": [
                        {
                            "id": "field1AC-bits0-7",
                            "width": 8,
                            "name": "seqNum",
                            "access": "RW",
                            "description": " Sequence Number, valid number: 1-16"
                        },
                        {
                            "id": "field1AC-bits8-15",
                            "width": 8,
                            "name": "seqId",
                            "access": "RW",
                            "description": " Sequence Index, valid number: 0-15"
                        },
                        {
                            "width": 16
                        }
                    ]
                },
                {
                    "id": "field1B0",
                    "offset_int": "0x1b0",
                    "reg_width": 32,
                    "name": "reserved4_0",
                    "description": " [0x1b0-0x1bf] Reserved for future use",
                    "default_value_int": "0x0",
                    "is_reserved": true
                },
                {
                    "id": "field1B4",
                    "offset_int": "0x1b4",
                    "reg_width": 32,
                    "name": "reserved4_1",
                    "description": " [0x1b0-0x1bf] Reserved for future use",
                    "default_value_int": "0x0",
                    "is_reserved": true
                },
                {
                    "id": "field1B8",
                    "offset_int": "0x1b8",
                    "reg_width": 32,
                    "name": "reserved4_2",
                    "description": " [0x1b0-0x1bf] Reserved for future use",
                    "default_value_int": "0x0",
                    "is_reserved": true
                },
                {
                    "id": "field1BC",
                    "offset_int": "0x1bc",
                    "reg_width": 32,
                    "name": "reserved4_3",
                    "description": " [0x1b0-0x1bf] Reserved for future use",
                    "default_value_int": "0x0",
                    "is_reserved": true
                },
                {
                    "id": "field1C0",
                    "offset_int": "0x1c0",
                    "reg_width": 32,
                    "name": "pageSize",
                    "description": " Page size of Serial NOR",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field1C4",
                    "offset_int": "0x1c4",
                    "reg_width": 32,
                    "name": "sectorSize",
                    "description": " Sector size of Serial NOR",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field1C8",
                    "offset_int": "0x1c8",
                    "reg_width": 8,
                    "name": "ipcmdSerialClkFreq",
                    "description": " Clock frequency for IP command",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field1C9",
                    "offset_int": "0x1c9",
                    "reg_width": 8,
                    "name": "isUniformBlockSize",
                    "description": " Sector/Block size is the same",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field1CA",
                    "offset_int": "0x1ca",
                    "reg_width": 8,
                    "name": "reserved0_0",
                    "description": " Reserved for future use",
                    "default_value_int": "0x0",
                    "is_reserved": true
                },
                {
                    "id": "field1CB",
                    "offset_int": "0x1cb",
                    "reg_width": 8,
                    "name": "reserved0_1",
                    "description": " Reserved for future use",
                    "default_value_int": "0x0",
                    "is_reserved": true
                },
                {
                    "id": "field1CC",
                    "offset_int": "0x1cc",
                    "reg_width": 8,
                    "name": "serialNorType",
                    "description": " Serial NOR Flash type: 0/1/2/3",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field1CD",
                    "offset_int": "0x1cd",
                    "reg_width": 8,
                    "name": "needExitNoCmdMode",
                    "description": " Need to exit NoCmd mode before other IP command",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field1CE",
                    "offset_int": "0x1ce",
                    "reg_width": 8,
                    "name": "halfClkForNonReadCmd",
                    "description": " Half the Serial Clock for non-read command: true/false",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field1CF",
                    "offset_int": "0x1cf",
                    "reg_width": 8,
                    "name": "needRestoreNoCmdMode",
                    "description": " Need to Restore NoCmd mode after IP command execution",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field1D0",
                    "offset_int": "0x1d0",
                    "reg_width": 32,
                    "name": "blockSize",
                    "description": " Block size",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field1D4",
                    "offset_int": "0x1d4",
                    "reg_width": 32,
                    "name": "reserve2_0",
                    "description": " Reserved for future use",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field1D8",
                    "offset_int": "0x1d8",
                    "reg_width": 32,
                    "name": "reserve2_1",
                    "description": " Reserved for future use",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field1DC",
                    "offset_int": "0x1dc",
                    "reg_width": 32,
                    "name": "reserve2_2",
                    "description": " Reserved for future use",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field1E0",
                    "offset_int": "0x1e0",
                    "reg_width": 32,
                    "name": "reserve2_3",
                    "description": " Reserved for future use",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field1E4",
                    "offset_int": "0x1e4",
                    "reg_width": 32,
                    "name": "reserve2_4",
                    "description": " Reserved for future use",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field1E8",
                    "offset_int": "0x1e8",
                    "reg_width": 32,
                    "name": "reserve2_5",
                    "description": " Reserved for future use",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field1EC",
                    "offset_int": "0x1ec",
                    "reg_width": 32,
                    "name": "reserve2_6",
                    "description": " Reserved for future use",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field1F0",
                    "offset_int": "0x1f0",
                    "reg_width": 32,
                    "name": "reserve2_7",
                    "description": " Reserved for future use",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field1F4",
                    "offset_int": "0x1f4",
                    "reg_width": 32,
                    "name": "reserve2_8",
                    "description": " Reserved for future use",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field1F8",
                    "offset_int": "0x1f8",
                    "reg_width": 32,
                    "name": "reserve2_9",
                    "description": " Reserved for future use",
                    "default_value_int": "0x0"
                },
                {
                    "id": "field1FC",
                    "offset_int": "0x1fc",
                    "reg_width": 32,
                    "name": "reserve2_10",
                    "description": " Reserved for future use",
                    "default_value_int": "0x0"
                }
            ]
        }
    ]
}
