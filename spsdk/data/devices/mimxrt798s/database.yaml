# Copyright 2023-2025 NXP
#
# SPDX-License-Identifier: BSD-3-Clause

revisions:
  a0:
    features:
      fuses:
        reg_spec: fuses_a0.json
  a1:
    features:
      mbi:
        mbi_classes:
          signed_xip:
            image_type: SIGNED_XIP_IMAGE
            mixins:
              - Mbi_MixinApp
              - Mbi_MixinIvt
              - Mbi_MixinLoadAddress
              - Mbi_MixinCertBlockV21
              - Mbi_MixinManifestDigest
              - Mbi_MixinImageSubType
              - Mbi_MixinImageVersion
              - Mbi_MixinFwVersion
              - Mbi_ExportMixinAppCertBlockManifest
              - Mbi_ExportMixinEccSign
          signed_ram:
            image_type: SIGNED_XIP_IMAGE
            mixins:
              - Mbi_MixinApp
              - Mbi_MixinIvt
              - Mbi_MixinLoadAddress
              - Mbi_MixinCertBlockV21
              - Mbi_MixinManifestDigest
              - Mbi_MixinImageSubType
              - Mbi_MixinImageVersion
              - Mbi_MixinFwVersion
              - Mbi_ExportMixinAppCertBlockManifest
              - Mbi_ExportMixinEccSign
        fuses:
          reg_spec: fuses_a0.json
  b0:
    features:
      fcb:
        mem_types:
          xspi_nor:
            reg_spec: fcb_xspi_nor_b0.json
      fuses:
        reg_spec: fuses_b0.json
latest: b0

# General MCU information
info:
  purpose: i.MX RT Crossover MCUs
  spsdk_predecessor_name: rt7xx
  # Web page of MCU representative
  web: https://www.nxp.com/products/processors-and-microcontrollers/arm-microcontrollers/i-mx-rt-crossover-mcus/i-mx-rt700-crossover-mcu-with-arm-cortex-m33-npu-dsp-and-gpu-cores:i.MX-RT700
  isp:
    rom:
      protocol: mboot
      usb:
        vid: 0x1FC9
        pid: 0x0026
  memory_map:
    # Memory map basic info
    xspi1:
      start_int: 0x08000000
      size_int: 0x08000000
      external: true
    xspi0:
      start_int: 0x28000000
      size_int: 0x08000000
      external: true
    sram:
      start_int: 0x2000_0000
      size_int: 0x0078_0000
      external: false
      non_xip_type: int_ram

features:
  # ======== Communication buffer section ========
  comm_buffer:
    address: 0x20070000
    size: 0x1000

  # ======== Fuses description section ========
  fuses:
    grouped_registers:
      - uid: rkth
        name: RKTH
        width: 384
        config_as_hexstring: true
        reversed: true
        alternative_widths: [256]
        description:
          ROTKH field is compounded by 12 32-bit fields and contains Root key
          table hash. For ECC P-256 keys RKTH is a 32-byte SHA-256 digest of four
          SHA-256 digests computed over four OEM public keys (OEM has four
          private-public key pairs in case one of its private keys becomes
          compromised) or in case that ECC P-384 keys are used, RKTH is 48-byte
          SHA-384 digest.
        sub_regs:
          - fuse88
          - fuse89
          - fuse90
          - fuse91
          - fuse92
          - fuse93
          - fuse94
          - fuse95
          - fuse96
          - fuse97
          - fuse98
          - fuse99
      - uid: cust_mk_sk
        name: CUST_MK_SK
        width: 384
        config_as_hexstring: true
        #reversed: true
        alternative_widths: [256]
        description: CUST_MK_SK
        sub_regs:
          - fuse100
          - fuse101
          - fuse102
          - fuse103
          - fuse104
          - fuse105
          - fuse106
          - fuse107
          - fuse108
          - fuse109
          - fuse110
          - fuse111

  # ======== DAT section ========
  dat:
    socc: 0x8 # SOCC identification
    dmbox_ap_ix: 2

  # ======== Certificate block section ========
  cert_block:
    sub_features: [based_on_cert21]
    rot_type: "cert_block_21"

  # ======== MBI section ========
  mbi:
    mbi_classes:
      plain_xip:
        image_type: PLAIN_IMAGE
        mixins:
          - Mbi_MixinApp
          - Mbi_MixinIvt
          - Mbi_MixinTrustZoneMandatory
          - Mbi_MixinLoadAddress
          - Mbi_MixinImageVersion
          - Mbi_ExportMixinAppTrustZone
      plain_ram:
        image_type: PLAIN_IMAGE
        mixins:
          - Mbi_MixinApp
          - Mbi_MixinIvt
          - Mbi_MixinTrustZoneMandatory
          - Mbi_MixinLoadAddress
          - Mbi_MixinImageVersion
          - Mbi_ExportMixinAppTrustZone
      crc_ram:
        image_type: CRC_RAM_IMAGE
        mixins:
          - Mbi_MixinApp
          - Mbi_MixinRelocTable
          - Mbi_MixinIvt
          - Mbi_MixinTrustZoneMandatory
          - Mbi_MixinLoadAddress
          - Mbi_MixinImageVersion
          - Mbi_ExportMixinAppTrustZone
          - Mbi_ExportMixinCrcSign
      crc_xip:
        image_type: CRC_XIP_IMAGE
        mixins:
          - Mbi_MixinApp
          - Mbi_MixinIvt
          - Mbi_MixinTrustZoneMandatory
          - Mbi_MixinLoadAddress
          - Mbi_MixinImageVersion
          - Mbi_ExportMixinAppTrustZone
          - Mbi_ExportMixinCrcSign
      signed_xip:
        image_type: SIGNED_XIP_IMAGE
        mixins:
          - Mbi_MixinApp
          - Mbi_MixinIvt
          - Mbi_MixinLoadAddress
          - Mbi_MixinCertBlockV21
          - Mbi_MixinManifestCrc
          - Mbi_MixinImageSubType
          - Mbi_MixinImageVersion
          - Mbi_MixinFwVersion
          - Mbi_ExportMixinAppCertBlockManifest
          - Mbi_ExportMixinEccSign
      signed_ram:
        image_type: SIGNED_XIP_IMAGE
        mixins:
          - Mbi_MixinApp
          - Mbi_MixinIvt
          - Mbi_MixinLoadAddress
          - Mbi_MixinCertBlockV21
          - Mbi_MixinManifestCrc
          - Mbi_MixinImageSubType
          - Mbi_MixinImageVersion
          - Mbi_MixinFwVersion
          - Mbi_ExportMixinAppCertBlockManifest
          - Mbi_ExportMixinEccSign
    images:
      xip:
        plain: plain_xip
        crc: crc_xip
        signed: signed_xip
      load_to_ram:
        plain: plain_ram
        crc: crc_ram
        signed: signed_ram

  # ======== Secure binary v3.1 section ========
  sb31:
    supported_commands:
      - erase
      - load
      - execute
      - programFuses
      - copy
      - loadKeyBlob
      - configureMemory
      - fillMemory
      - checkFwVersion
    key_wraps_version: 2

  # ======== FCB section ========
  fcb:
    mem_types:
      xspi_nor:
        reg_spec: fcb_xspi_nor_a0.json

  # ======== XMCD section ========
  xmcd:
    header:
      reg_spec: ../../common/xmcd/xspi_ram_header.json
    mem_types:
      xspi_ram:
        simplified:
          reg_spec: ../../common/xmcd/xspi_ram_simplified.json
  # ======== Bootable image section ========
  bootable_image:
    mem_types:
      xspi_nor:
        segments:
          fcb: 0x0000
          xmcd: 0x0300
          mbi: 0x4000
        remap_align: 0x40000 # 256 KB
      sd:
        segments:
          mbi: 0x1000
      emmc:
        segments:
          mbi: 0x1000

  # ======== Shadow registers section ========
  shadow_regs: {}

  # ======== Device Hardware Security Module (HSM) section ========
  devhsm:
    sub_features: [DevHsmSB31]
    key_blob_offset: 0
    key_blob_command_position: -1

  # ======== Trust Zone section ========
  tz:
    data_file: tz.json

  # ======== Memory configuration ========
  memcfg:
    peripherals:
      xspi_nor:
        instances: [0, 1]
      sd:
        instances: [0, 1]
        interfaces: [instance_0, instance_1]
      mmc:
        instances: [0, 1]
        interfaces: [instance_0, instance_1]
      spi_nor:
        reg_spec: ../../common/memcfg/opt_word_spi_nor_legacy.json
        instances: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
