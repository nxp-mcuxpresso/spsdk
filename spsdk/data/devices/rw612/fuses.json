{
    "cpu": "RW612",
    "shadow_reg_base_addr_int": "0x4000A000",
    "groups": [
        {
            "group": {
                "name": "Lock Settings",
                "description": "Lock settings configuration"
            },
            "registers": [
                {
                    "id": "fuse0",
                    "name": "LOCK_CFG0",
                    "description": "Lock configuration fuse word 0.",
                    "index_int": "0",
                    "shadow_reg_offset_int": "0",
                    "individual_write_lock": "none",
                    "lock": {
                        "register_id": "fuse0",
                        "write_lock_int": "0x1000",
                        "read_lock_int": "0x4000",
                        "operation_lock_int": "0x2000"
                    },
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 3,
                            "id": "fuse0-bits-0-2",
                            "name": "BOOT_CFG_LOCK",
                            "description": "When set, BOOT_CFG_LOCK[2:0] bits controls read/write/override protection to BOOT_CFG 0-6 fuse words.",
                            "values": [
                                {
                                    "name": "Unlocked",
                                    "value": 0,
                                    "description": "Unlocked"
                                },
                                {
                                    "name": "WR_LOCK",
                                    "value": 1,
                                    "description": "Write Lock"
                                },
                                {
                                    "name": "OP_LOCK",
                                    "value": 2,
                                    "description": "Operational Lock"
                                },
                                {
                                    "name": "OP+WP_LOCK",
                                    "value": 3,
                                    "description": "OP and WP_LOCK"
                                },
                                {
                                    "name": "RD_LOCK",
                                    "value": 4,
                                    "description": "Read Lock"
                                },
                                {
                                    "name": "RP+WP_LOCK",
                                    "value": 5,
                                    "description": "RP and WP_LOCK"
                                },
                                {
                                    "name": "RP+OP_LOCK",
                                    "value": 6,
                                    "description": "RP and OP_LOCK"
                                },
                                {
                                    "name": "All locks",
                                    "value": 7,
                                    "description": "All locks"
                                }
                            ]
                        },
                        {
                            "width": 3,
                            "id": "fuse0-bits-3-5",
                            "name": "SEC_BOOT_CFG_LOCK",
                            "description": "When set, SEC_BOOT_CFG_LOCK[2:0] bits controls read/write/override protection to SEC_BOOT_CFG 0-8 fuse words.",
                            "values": [
                                {
                                    "name": "Unlocked",
                                    "value": 0,
                                    "description": "Unlocked"
                                },
                                {
                                    "name": "WR_LOCK",
                                    "value": 1,
                                    "description": "Write Lock"
                                },
                                {
                                    "name": "OP_LOCK",
                                    "value": 2,
                                    "description": "Operational Lock"
                                },
                                {
                                    "name": "OP+WP_LOCK",
                                    "value": 3,
                                    "description": "OP and WP_LOCK"
                                },
                                {
                                    "name": "RD_LOCK",
                                    "value": 4,
                                    "description": "Read Lock"
                                },
                                {
                                    "name": "RP+WP_LOCK",
                                    "value": 5,
                                    "description": "RP and WP_LOCK"
                                },
                                {
                                    "name": "RP+OP_LOCK",
                                    "value": 6,
                                    "description": "RP and OP_LOCK"
                                },
                                {
                                    "name": "All locks",
                                    "value": 7,
                                    "description": "All locks"
                                }
                            ]
                        },
                        {
                            "width": 3
                        },
                        {
                            "width": 3,
                            "id": "fuse0-bits-9-11",
                            "name": "DCFG_CC_SOCU_NS_LOCK",
                            "description": "When set, DCFG_CC_SOCU_NS_LOCK[2:0] bits controls read/write/override protection to DCFG_CC_SOCU_NS fuse word.",
                            "values": [
                                {
                                    "name": "Unlocked",
                                    "value": 0,
                                    "description": "Unlocked"
                                },
                                {
                                    "name": "WR_LOCK",
                                    "value": 1,
                                    "description": "Write Lock"
                                },
                                {
                                    "name": "OP_LOCK",
                                    "value": 2,
                                    "description": "Operational Lock"
                                },
                                {
                                    "name": "OP+WP_LOCK",
                                    "value": 3,
                                    "description": "OP and WP_LOCK"
                                },
                                {
                                    "name": "RD_LOCK",
                                    "value": 4,
                                    "description": "Read Lock"
                                },
                                {
                                    "name": "RP+WP_LOCK",
                                    "value": 5,
                                    "description": "RP and WP_LOCK"
                                },
                                {
                                    "name": "RP+OP_LOCK",
                                    "value": 6,
                                    "description": "RP and OP_LOCK"
                                },
                                {
                                    "name": "All locks",
                                    "value": 7,
                                    "description": "All locks"
                                }
                            ]
                        },
                        {
                            "width": 3,
                            "id": "fuse0-bits-12-14",
                            "name": "LOCK_CFG_LOCK",
                            "description": "When set, LOCK_CFG_LOCK[2:0] bits controls read/write/override protection to LOCK_CFG 0-2 fuse words.",
                            "values": [
                                {
                                    "name": "Unlocked",
                                    "value": 0,
                                    "description": "Unlocked"
                                },
                                {
                                    "name": "WR_LOCK",
                                    "value": 1,
                                    "description": "Write Lock"
                                },
                                {
                                    "name": "OP_LOCK",
                                    "value": 2,
                                    "description": "Operational Lock"
                                },
                                {
                                    "name": "OP+WP_LOCK",
                                    "value": 3,
                                    "description": "OP and WP_LOCK"
                                },
                                {
                                    "name": "RD_LOCK",
                                    "value": 4,
                                    "description": "Read Lock"
                                },
                                {
                                    "name": "RP+WP_LOCK",
                                    "value": 5,
                                    "description": "RP and WP_LOCK"
                                },
                                {
                                    "name": "RP+OP_LOCK",
                                    "value": 6,
                                    "description": "RP and OP_LOCK"
                                },
                                {
                                    "name": "All locks",
                                    "value": 7,
                                    "description": "All locks"
                                }
                            ]
                        },
                        {
                            "width": 1
                        }
                    ]
                },
                {
                    "id": "fuse1",
                    "name": "LOCK_CFG1",
                    "description": "Lock configuration fuse word 1.",
                    "index_int": "0x0001",
                    "shadow_reg_offset_int": "0x0004",
                    "individual_write_lock": "none",
                    "lock": {
                        "register_id": "fuse0",
                        "write_lock_int": "0x1000",
                        "read_lock_int": "0x4000",
                        "operation_lock_int": "0x2000"
                    },
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 3,
                            "id": "fuse1-bits-0-2",
                            "name": "CUST_KEY_LOCK",
                            "description": "When set, CUST_KEY_LOCK[2:0] bits controls read/write/override protection to CUST_SK_MK and RKTH fuse words.",
                            "values": [
                                {
                                    "name": "Unlocked",
                                    "value": 0,
                                    "description": "Unlocked"
                                },
                                {
                                    "name": "WR_LOCK",
                                    "value": 1,
                                    "description": "Write Lock"
                                },
                                {
                                    "name": "OP_LOCK",
                                    "value": 2,
                                    "description": "Operational Lock"
                                },
                                {
                                    "name": "OP+WP_LOCK",
                                    "value": 3,
                                    "description": "OP and WP_LOCK"
                                },
                                {
                                    "name": "RD_LOCK",
                                    "value": 4,
                                    "description": "Read Lock"
                                },
                                {
                                    "name": "RP+WP_LOCK",
                                    "value": 5,
                                    "description": "RP and WP_LOCK"
                                },
                                {
                                    "name": "RP+OP_LOCK",
                                    "value": 6,
                                    "description": "RP and OP_LOCK"
                                },
                                {
                                    "name": "All locks",
                                    "value": 7,
                                    "description": "All locks"
                                }
                            ]
                        },
                        {
                            "width": 3
                        },
                        {
                            "width": 3,
                            "id": "fuse1-bits-6-8",
                            "name": "DCFG_CC_SOCU_LOCK",
                            "description": "When set, DCFG_CC_SOCU_LOCK[2:0] bits controls read/write/override protection to DCFG_CC_SOCU and DCFG_CC_SOCU_AP fuse words.",
                            "values": [
                                {
                                    "name": "Unlocked",
                                    "value": 0,
                                    "description": "Unlocked"
                                },
                                {
                                    "name": "WR_LOCK",
                                    "value": 1,
                                    "description": "Write Lock"
                                },
                                {
                                    "name": "OP_LOCK",
                                    "value": 2,
                                    "description": "Operational Lock"
                                },
                                {
                                    "name": "OP+WP_LOCK",
                                    "value": 3,
                                    "description": "OP and WP_LOCK"
                                },
                                {
                                    "name": "RD_LOCK",
                                    "value": 4,
                                    "description": "Read Lock"
                                },
                                {
                                    "name": "RP+WP_LOCK",
                                    "value": 5,
                                    "description": "RP and WP_LOCK"
                                },
                                {
                                    "name": "RP+OP_LOCK",
                                    "value": 6,
                                    "description": "RP and OP_LOCK"
                                },
                                {
                                    "name": "All locks",
                                    "value": 7,
                                    "description": "All locks"
                                }
                            ]
                        },
                        {
                            "width": 3,
                            "id": "fuse1-bits-9-11",
                            "name": "LIFECYCLE_LOCK",
                            "description": "When set, LIFECYCLE_LOCK[2:0] bits controls read/write/override protection to LIFE_CYCLE_STATE fuse word.",
                            "values": [
                                {
                                    "name": "Unlocked",
                                    "value": 0,
                                    "description": "Unlocked"
                                },
                                {
                                    "name": "WR_LOCK",
                                    "value": 1,
                                    "description": "Write Lock"
                                },
                                {
                                    "name": "OP_LOCK",
                                    "value": 2,
                                    "description": "Operational Lock"
                                },
                                {
                                    "name": "OP+WP_LOCK",
                                    "value": 3,
                                    "description": "OP and WP_LOCK"
                                },
                                {
                                    "name": "RD_LOCK",
                                    "value": 4,
                                    "description": "Read Lock"
                                },
                                {
                                    "name": "RP+WP_LOCK",
                                    "value": 5,
                                    "description": "RP and WP_LOCK"
                                },
                                {
                                    "name": "RP+OP_LOCK",
                                    "value": 6,
                                    "description": "RP and OP_LOCK"
                                },
                                {
                                    "name": "All locks",
                                    "value": 7,
                                    "description": "All locks"
                                }
                            ]
                        },
                        {
                            "width": 3,
                            "id": "fuse1-bits-12-14",
                            "name": "CRC_HI_LOCK",
                            "description": "When set, CRC_HI_LOCK[2:0] bits controls read/write/override protection to CRC 4-7 fuse words.",
                            "values": [
                                {
                                    "name": "Unlocked",
                                    "value": 0,
                                    "description": "Unlocked"
                                },
                                {
                                    "name": "WR_LOCK",
                                    "value": 1,
                                    "description": "Write Lock"
                                },
                                {
                                    "name": "OP_LOCK",
                                    "value": 2,
                                    "description": "Operational Lock"
                                },
                                {
                                    "name": "OP+WP_LOCK",
                                    "value": 3,
                                    "description": "OP and WP_LOCK"
                                },
                                {
                                    "name": "RD_LOCK",
                                    "value": 4,
                                    "description": "Read Lock"
                                },
                                {
                                    "name": "RP+WP_LOCK",
                                    "value": 5,
                                    "description": "RP and WP_LOCK"
                                },
                                {
                                    "name": "RP+OP_LOCK",
                                    "value": 6,
                                    "description": "RP and OP_LOCK"
                                },
                                {
                                    "name": "All locks",
                                    "value": 7,
                                    "description": "All locks"
                                }
                            ]
                        },
                        {
                            "width": 1
                        }
                    ]
                },
                {
                    "id": "fuse2",
                    "name": "LOCK_CFG2",
                    "description": "Lock configuration fuse word 2.",
                    "index_int": "0x0002",
                    "shadow_reg_offset_int": "0x0008",
                    "individual_write_lock": "none",
                    "lock": {
                        "register_id": "fuse0",
                        "write_lock_int": "0x1000",
                        "read_lock_int": "0x4000",
                        "operation_lock_int": "0x2000"
                    },
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 3
                        },
                        {
                            "width": 3
                        },
                        {
                            "width": 3
                        },
                        {
                            "width": 3,
                            "id": "fuse2-bits-9-11",
                            "name": "CRC_LO_LOCK",
                            "description": "When set, CRC_LO_LOCK[2:0] bits controls read/write/override protection to CRC 0-3 fuse words.",
                            "values": [
                                {
                                    "name": "Unlocked",
                                    "value": 0,
                                    "description": "Unlocked"
                                },
                                {
                                    "name": "WR_LOCK",
                                    "value": 1,
                                    "description": "Write Lock"
                                },
                                {
                                    "name": "OP_LOCK",
                                    "value": 2,
                                    "description": "Operational Lock"
                                },
                                {
                                    "name": "OP+WP_LOCK",
                                    "value": 3,
                                    "description": "OP and WP_LOCK"
                                },
                                {
                                    "name": "RD_LOCK",
                                    "value": 4,
                                    "description": "Read Lock"
                                },
                                {
                                    "name": "RP+WP_LOCK",
                                    "value": 5,
                                    "description": "RP and WP_LOCK"
                                },
                                {
                                    "name": "RP+OP_LOCK",
                                    "value": 6,
                                    "description": "RP and OP_LOCK"
                                },
                                {
                                    "name": "All locks",
                                    "value": 7,
                                    "description": "All locks"
                                }
                            ]
                        },
                        {
                            "width": 3
                        },
                        {
                            "width": 1
                        }
                    ]
                }
            ]
        },
        {
            "group": {
                "name": "OEM Configuration",
                "description": "OEM configuration"
            },
            "registers": [
                {
                    "id": "fuse15",
                    "name": "BOOT_CFG0",
                    "description": "Boot configuration fuse word 0.",
                    "index_int": "0x000F",
                    "shadow_reg_offset_int": "0x003C",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse0",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 4,
                            "id": "fuse15-bits-0-3",
                            "name": "PRIMARY_BOOT_SOURCE",
                            "description": "Primary boot source. (a.k.a. Master boot source)",
                            "values": [
                                {
                                    "name": "ISP_PIN_BOOT",
                                    "value": 0,
                                    "description": "ISP pins will determine boot source."
                                },
                                {
                                    "name": "FLEXSPI_BOOT",
                                    "value": 1,
                                    "description": "Boot from FlexSPI flash device using FlexSPI interface pins."
                                },
                                {
                                    "name": "SDIO_BOOT",
                                    "value": 3,
                                    "description": "Boot from SDIO (Serial) port."
                                },
                                {
                                    "name": "SPI_BOOT",
                                    "value": 4,
                                    "description": "Boot using SPI slave interface using master boot mode."
                                },
                                {
                                    "name": "I2C_BOOT",
                                    "value": 5,
                                    "description": "I2C boot mode."
                                },
                                {
                                    "name": "UART_BOOT",
                                    "value": 6,
                                    "description": "Boot using UART interface using master boot mode."
                                },
                                {
                                    "name": "USBHID_BOOT",
                                    "value": 8,
                                    "description": "USB-HID boot mode."
                                },
                                {
                                    "name": "ISP_MODE",
                                    "value": 9,
                                    "description": "Always enter ISP mode. DEFAULT_ISP_MODE field will determine the ISP interface."
                                },
                                {
                                    "name": "Test_MODE",
                                    "value": 10,
                                    "description": "Reserved"
                                },
                                {
                                    "name": "QSPI_FALLBACK_SPINOR_BOOT",
                                    "value": 12,
                                    "description": "Boot from Octal/Quad SPI flash device using FlexSPI channel A interface pins. If image is not found check recovery boot using SPI flash device through FlexComm."
                                }
                            ]
                        },
                        {
                            "width": 3,
                            "id": "fuse15-bits-4-6",
                            "name": "DEFAULT_ISP_MODE",
                            "description": "ISP boot mode",
                            "values": [
                                {
                                    "name": "AUTO_ISP",
                                    "value": 0,
                                    "description": "Auto detect ISP mode. The RW61x probes active peripheral from one of the below serial interfaces and download image from the probed peripherals: UART, I2C, SPI, USB-HID."
                                },
                                {
                                    "name": "USB_HID_ISP",
                                    "value": 1,
                                    "description": "The USB HID class is used to download the image of the USB0 port."
                                },
                                {
                                    "name": "UART_ISP",
                                    "value": 2,
                                    "description": "Support ISP command interface on UART port only."
                                },
                                {
                                    "name": "SPI_ISP",
                                    "value": 3,
                                    "description": "Support ISP command interface on SPI port only."
                                },
                                {
                                    "name": "I2C_ISP",
                                    "value": 4,
                                    "description": "Support ISP command interface on I2C port only."
                                },
                                {
                                    "name": "DISABLE_ISP",
                                    "value": 7,
                                    "description": "Disable ISP fall through when proper image is not found on primary boot device."
                                }
                            ]
                        },
                        {
                            "width": 1
                        },
                        {
                            "width": 2
                        },
                        {
                            "width": 1,
                            "id": "fuse15-bit-10",
                            "name": "STOP_ON_FAILURE",
                            "description": "If set, then enables GPIO Port and PIN information upon failure."
                        },
                        {
                            "width": 1
                        },
                        {
                            "width": 2,
                            "id": "fuse15-bits-12-13",
                            "name": "TZM_IMAGE_TYPE",
                            "description": "TrustZone-M mode",
                            "values": [
                                {
                                    "name": "IGNORED",
                                    "value": 0,
                                    "description": "Ignored"
                                },
                                {
                                    "name": "ENFORCE_PRESET_VALUE",
                                    "value": 1,
                                    "description": "Enforce preset TZM data in image manifest."
                                },
                                {
                                    "name": "ENFORCE_PRESET_VALUE_1",
                                    "value": 2,
                                    "description": "Enforce preset TZM data in image manifest."
                                },
                                {
                                    "name": "ENFORCE_PRESET_VALUE_2",
                                    "value": 3,
                                    "description": "Enforce preset TZM data in image manifest."
                                }
                            ]
                        },
                        {
                            "width": 2
                        },
                        {
                            "width": 3,
                            "id": "fuse15-bits-16-18",
                            "name": "REDUNDANT_SPI_PORT",
                            "description": "FlexComm port to use for redundant SPI flash boot.",
                            "values": [
                                {
                                    "name": "FC0",
                                    "value": 0,
                                    "description": "Use FlexCom0 pins P0_0 (SCK), P0_1 (MISO), P0_2 (MOSI), P0_3 (SEL)."
                                },
                                {
                                    "name": "FC1",
                                    "value": 1,
                                    "description": "Use FlexCom1 pins P0_7 (SCK), P0_8 (MISO), P0_9 (MOSI), P0_10 (SEL)."
                                },
                                {
                                    "name": "FC2",
                                    "value": 2,
                                    "description": "Use FlexCom2 pins P0_14 (SCK), P0_15 (MISO), P0_16 (MOSI), P0_17 (SEL)."
                                },
                                {
                                    "name": "FC3",
                                    "value": 3,
                                    "description": "Use FlexCom3 pins P0_21 (SCK), P0_22 (MISO), P0_23 (MOSI), P0_24 (SEL)."
                                },
                                {
                                    "name": "FC4",
                                    "value": 4,
                                    "description": "Use FlexCom4 pins P0_28 (SCK), P0_29 (MISO), P0_30 (MOSI), P0_31 (SEL)."
                                },
                                {
                                    "name": "FC5",
                                    "value": 5,
                                    "description": "Use FlexCom5 pins P1_3 (SCK), P1_4 (MISO), P1_5 (MOSI), P1_6 (SEL)."
                                },
                                {
                                    "name": "FC6",
                                    "value": 6,
                                    "description": "Use FlexCom6 pins P3_25 (SCK), P3_26 (MISO), P3_27 (MOSI), P3_28 (SEL)."
                                },
                                {
                                    "name": "FC7",
                                    "value": 7,
                                    "description": "Use FlexCom7 pins P4_0 (SCK), P4_1 (MISO), P4_2 (MOSI), P4_3 (SEL)."
                                }
                            ]
                        },
                        {
                            "width": 2,
                            "id": "fuse15-bits-19-20",
                            "name": "SECURE_BOOT_EN",
                            "description": "Secure boot enable config",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Allow non-secure images with and without CRC. Used during development."
                                },
                                {
                                    "name": "DISABLED_RFU",
                                    "value": 1,
                                    "description": "RFU"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 2,
                                    "description": "Secure boot is enabled. Do complete ECDSA checking of signed images. (ECDSA signed)"
                                },
                                {
                                    "name": "ENABLED_1",
                                    "value": 3,
                                    "description": "Secure boot is enabled. Do complete ECDSA checking of signed images. (ECDSA signed)"
                                }
                            ]
                        },
                        {
                            "width": 1
                        },
                        {
                            "width": 1,
                            "id": "fuse15-bit-22",
                            "name": "DICE_INC_OTP",
                            "description": "Include OTP fuse area in DICE computation",
                            "values": [
                                {
                                    "name": "NOT_INCLUDED",
                                    "value": 0,
                                    "description": "Not included"
                                },
                                {
                                    "name": "INCLUDED",
                                    "value": 1,
                                    "description": "Included"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse15-bit-23",
                            "name": "DICE_SKIP",
                            "description": "Skip DICE computation",
                            "values": [
                                {
                                    "name": "NO_SKIP",
                                    "value": 0,
                                    "description": "Enable DICE"
                                },
                                {
                                    "name": "SKIP",
                                    "value": 1,
                                    "description": "Disable DICE"
                                }
                            ]
                        },
                        {
                            "width": 3,
                            "id": "fuse15-bits-24-26",
                            "name": "BOOT_FAIL_PORT",
                            "description": "GPIO port number to use for indicating boot failure. Defines GPIO port number."
                        },
                        {
                            "width": 5,
                            "id": "fuse15-bits-27-31",
                            "name": "BOOT_FAIL_PIN",
                            "description": "Defines GPIO pin number.\nNote: Please note GPIO[22:27] can not be used as BOOT_FAIL pins."
                        }
                    ]
                },
                {
                    "id": "fuse16",
                    "name": "BOOT_CFG1",
                    "description": "Boot configuration word specifying FlexSPI flash devices settings.",
                    "index_int": "0x0010",
                    "shadow_reg_offset_int": "0x0040",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse0",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 1,
                            "id": "fuse16-bit-0",
                            "name": "FLEXSPI_AUTO_PROBE_EN",
                            "description": "Flash auto probe feature enable. Auto probing is enabled if the bit is 1.",
                            "values": [
                                {
                                    "name": "FLASH_AUTO_PROBE",
                                    "value": 0,
                                    "description": "The Boot ROM looks for a FCB on the flash. Boot ROM reads a 512 byte FCB into on-chip SRAM and configures the FlexSPI controller accordingly."
                                },
                                {
                                    "name": "FCB_FROM_FLASH",
                                    "value": 1,
                                    "description": "The Boot ROM will perform flash auto probe sequence using parameters from OTP fuse values for FLEXSPI_PROBE_TYPE, FLEXSPI_FLASH_TYPE, FLEXSPI_DUMMY_CYCLES, FLEXSPI_FREQUENCY."
                                }
                            ]
                        },
                        {
                            "width": 3,
                            "id": "fuse16-bits-1-3",
                            "name": "FLEXSPI_PROBE_TYPE",
                            "description": "Flash probe type",
                            "values": [
                                {
                                    "name": "QSPI_NOR",
                                    "value": 0,
                                    "description": "QuadSPI NOR"
                                }
                            ]
                        },
                        {
                            "width": 3,
                            "id": "fuse16-bits-4-6",
                            "name": "FLEXSPI_FLASH_TYPE",
                            "description": "Flash type. This field affects the default configuration of the Boot ROM Flash driver (before any input from flash itself is available).",
                            "values": [
                                {
                                    "name": "FLEXSPI_SDR_3B",
                                    "value": 0,
                                    "description": "Device supports SDR and uses 3 byte addresses for read. In case of autoprobing, when generating an FCB from the SFDP information, commands for SRD operation are generated. In case of configuration from FCB, for reading of flash memory, command 0x03 is used."
                                },
                                {
                                    "name": "FLEXSPI_DDR_4B",
                                    "value": 1,
                                    "description": "Device supports DDR and uses 4 byte addresses for read. In case of autoprobing, when generating an FCB from the SFDP information, the command set for DDR operation is used. In case of configuration from FCB, for reading of flash memory, command 0x13 is used."
                                }
                            ]
                        },
                        {
                            "width": 4,
                            "id": "fuse16-bits-7-10",
                            "name": "FLEXSPI_DUMMY_CYCLES",
                            "description": "Dummy cycles for read command.",
                            "values": [
                                {
                                    "name": "AUTO_PROB",
                                    "value": 0,
                                    "description": "The dummy cycles are probed automatically."
                                },
                                {
                                    "name": "1",
                                    "value": 1,
                                    "description": "The number of dummy cycles is 1."
                                },
                                {
                                    "name": "2",
                                    "value": 2,
                                    "description": "The number of dummy cycles is 2."
                                },
                                {
                                    "name": "3",
                                    "value": 3,
                                    "description": "The number of dummy cycles is 3."
                                },
                                {
                                    "name": "4",
                                    "value": 4,
                                    "description": "The number of dummy cycles is 4."
                                },
                                {
                                    "name": "5",
                                    "value": 5,
                                    "description": "The number of dummy cycles is 5."
                                },
                                {
                                    "name": "6",
                                    "value": 6,
                                    "description": "The number of dummy cycles is 6."
                                },
                                {
                                    "name": "7",
                                    "value": 7,
                                    "description": "The number of dummy cycles is 7."
                                },
                                {
                                    "name": "8",
                                    "value": 8,
                                    "description": "The number of dummy cycles is 8."
                                },
                                {
                                    "name": "9",
                                    "value": 9,
                                    "description": "The number of dummy cycles is 9."
                                },
                                {
                                    "name": "10",
                                    "value": 10,
                                    "description": "The number of dummy cycles is 10."
                                },
                                {
                                    "name": "11",
                                    "value": 11,
                                    "description": "The number of dummy cycles is 11."
                                },
                                {
                                    "name": "12",
                                    "value": 12,
                                    "description": "The number of dummy cycles is 12."
                                },
                                {
                                    "name": "13",
                                    "value": 13,
                                    "description": "The number of dummy cycles is 13."
                                },
                                {
                                    "name": "14",
                                    "value": 14,
                                    "description": "The number of dummy cycles is 14."
                                },
                                {
                                    "name": "15",
                                    "value": 15,
                                    "description": "The number of dummy cycles is 15."
                                }
                            ]
                        },
                        {
                            "width": 3,
                            "id": "fuse16-bits-11-13",
                            "name": "FLEXSPI_FREQUENCY",
                            "description": "Flash SPI clock frequency to use for auto probing.",
                            "values": [
                                {
                                    "name": "FLEXSPI_100MHZ",
                                    "value": 0,
                                    "description": "Use a clock frequency of 100 MHz."
                                },
                                {
                                    "name": "FLEXSPI_120MHZ",
                                    "value": 1,
                                    "description": "Use a clock frequency of 120 MHz."
                                },
                                {
                                    "name": "FLEXSPI_133MHZ",
                                    "value": 2,
                                    "description": "Use a clock frequency of 133 MHz."
                                },
                                {
                                    "name": "FLEXSPI_166MHZ",
                                    "value": 3,
                                    "description": "Use a clock frequency of 166 MHz."
                                },
                                {
                                    "name": "FLEXSPI_200MHZ",
                                    "value": 4,
                                    "description": "Use a clock frequency of 200 MHz."
                                },
                                {
                                    "name": "FLEXSPI_80MHZ",
                                    "value": 5,
                                    "description": "Use a clock frequency of 80 MHz."
                                },
                                {
                                    "name": "FLEXSPI_60MHZ",
                                    "value": 6,
                                    "description": "Use a clock frequency of 60 MHz."
                                },
                                {
                                    "name": "FLEXSPI_50MHZ",
                                    "value": 7,
                                    "description": "Use a clock frequency of 50 MHz."
                                }
                            ]
                        },
                        {
                            "width": 2,
                            "id": "fuse16-bits-14-15",
                            "name": "FLEXSPI_RST_SEQ",
                            "description": "Select the flash reset sequence to use for regular boot.",
                            "values": [
                                {
                                    "name": "NO_RESET_PERFORMED",
                                    "value": 0,
                                    "description": "Don't perform any reset."
                                },
                                {
                                    "name": "JEDEC_RESET",
                                    "value": 1,
                                    "description": "The Boot ROM performs a reset sequence according to the JEDEC specification."
                                },
                                {
                                    "name": "RESET_COMMAND",
                                    "value": 2,
                                    "description": "The Boot ROM sends commands for resetting the flash. The sequence is fixed command byte 0x66 (enable reset) followed by command byte 0x99 (reset device) using SPI (single wire)."
                                },
                                {
                                    "name": "WAKEUP_COMMAND",
                                    "value": 3,
                                    "description": "The Boot ROM sends a wakeup command to the flash. The sequence is fixed command byte 0xAB using SPI (single wire). As the wakeup command is using SPI, it has to be ensured that the flash is in a mode where it can accept SPI commands before the system is put to low-power mode."
                                }
                            ]
                        },
                        {
                            "width": 4,
                            "id": "fuse16-bits-16-19",
                            "name": "FLEXSPI_RST_HOLD_TIME",
                            "description": "Set the time to wait after reset sequence for regular boot.",
                            "values": [
                                {
                                    "name": "NO_DELAY",
                                    "value": 0,
                                    "description": "No additional delay."
                                },
                                {
                                    "name": "100US_DELAY",
                                    "value": 1,
                                    "description": "Wait for 100 us."
                                },
                                {
                                    "name": "500US_DELAY",
                                    "value": 2,
                                    "description": "Wait for 500 us."
                                },
                                {
                                    "name": "1MS_DELAY",
                                    "value": 3,
                                    "description": "Wait for 1 ms."
                                },
                                {
                                    "name": "10MS_DELAY",
                                    "value": 4,
                                    "description": "Wait for 10 ms."
                                },
                                {
                                    "name": "20MS_DELAY",
                                    "value": 5,
                                    "description": "Wait for 20 ms."
                                },
                                {
                                    "name": "40MS_DELAY",
                                    "value": 6,
                                    "description": "Wait for 40 ms."
                                },
                                {
                                    "name": "60MS_DELAY",
                                    "value": 7,
                                    "description": "Wait for 60 ms."
                                },
                                {
                                    "name": "80MS_DELAY",
                                    "value": 8,
                                    "description": "Wait for 80 ms."
                                },
                                {
                                    "name": "100MS_DELAY",
                                    "value": 9,
                                    "description": "Wait for 100 ms."
                                },
                                {
                                    "name": "120MS_DELAY",
                                    "value": 10,
                                    "description": "Wait for 120 ms."
                                },
                                {
                                    "name": "140MS_DELAY",
                                    "value": 11,
                                    "description": "Wait for 140 ms."
                                },
                                {
                                    "name": "160MS_DELAY",
                                    "value": 12,
                                    "description": "Wait for 160 ms."
                                },
                                {
                                    "name": "180MS_DELAY",
                                    "value": 13,
                                    "description": "Wait for 180 ms."
                                },
                                {
                                    "name": "200MS_DELAY",
                                    "value": 14,
                                    "description": "Wait for 200 ms."
                                },
                                {
                                    "name": "220MS_DELAY",
                                    "value": 15,
                                    "description": "Wait for 220 ms."
                                }
                            ]
                        },
                        {
                            "width": 2,
                            "id": "fuse16-bits-20-21",
                            "name": "FLEXSPI_WUP_SEQ",
                            "description": "Select the flash reset sequence to use for boot from low power mode.",
                            "values": [
                                {
                                    "name": "NO_RESET_PERFORMED",
                                    "value": 0,
                                    "description": "Don't perform any reset."
                                },
                                {
                                    "name": "JEDEC_RESET",
                                    "value": 1,
                                    "description": "The Boot ROM performs a reset sequence according to the JEDEC specification."
                                },
                                {
                                    "name": "RESET_COMMAND",
                                    "value": 2,
                                    "description": "The Boot ROM sends commands for resetting the flash. The sequence is fixed command byte 0x66 (enable reset) followed by command byte 0x99 (reset device) using SPI (single wire)."
                                },
                                {
                                    "name": "WAKEUP_COMMAND",
                                    "value": 3,
                                    "description": "The Boot ROM sends a wakeup command to the flash. The sequence is fixed command byte 0xAB using SPI (single wire). As the wakeup command is using SPI, it has to be ensured that the flash is in a mode where it can accept SPI commands before the system is put to low-power mode."
                                }
                            ]
                        },
                        {
                            "width": 4,
                            "id": "fuse16-bits-22-25",
                            "name": "FLEXSPI_WUP_HOLD_TIME",
                            "description": "Set the time to wait after reset sequence for boot from low power mode.",
                            "values": [
                                {
                                    "name": "NO_DELAY",
                                    "value": 0,
                                    "description": "No additional delay."
                                },
                                {
                                    "name": "100US_DELAY",
                                    "value": 1,
                                    "description": "Wait for 100 us."
                                },
                                {
                                    "name": "500US_DELAY",
                                    "value": 2,
                                    "description": "Wait for 500 us."
                                },
                                {
                                    "name": "1MS_DELAY",
                                    "value": 3,
                                    "description": "Wait for 1 ms."
                                },
                                {
                                    "name": "10MS_DELAY",
                                    "value": 4,
                                    "description": "Wait for 10 ms."
                                },
                                {
                                    "name": "20MS_DELAY",
                                    "value": 5,
                                    "description": "Wait for 20 ms."
                                },
                                {
                                    "name": "40MS_DELAY",
                                    "value": 6,
                                    "description": "Wait for 40 ms."
                                },
                                {
                                    "name": "60MS_DELAY",
                                    "value": 7,
                                    "description": "Wait for 60 ms."
                                },
                                {
                                    "name": "80MS_DELAY",
                                    "value": 8,
                                    "description": "Wait for 80 ms."
                                },
                                {
                                    "name": "100MS_DELAY",
                                    "value": 9,
                                    "description": "Wait for 100 ms."
                                },
                                {
                                    "name": "120MS_DELAY",
                                    "value": 10,
                                    "description": "Wait for 120 ms."
                                },
                                {
                                    "name": "140MS_DELAY",
                                    "value": 11,
                                    "description": "Wait for 140 ms."
                                },
                                {
                                    "name": "160MS_DELAY",
                                    "value": 12,
                                    "description": "Wait for 160 ms."
                                },
                                {
                                    "name": "180MS_DELAY",
                                    "value": 13,
                                    "description": "Wait for 180 ms."
                                },
                                {
                                    "name": "200MS_DELAY",
                                    "value": 14,
                                    "description": "Wait for 200 ms."
                                },
                                {
                                    "name": "220MS_DELAY",
                                    "value": 15,
                                    "description": "Wait for 220 ms."
                                }
                            ]
                        },
                        {
                            "width": 2,
                            "id": "fuse16-bits-26-27",
                            "name": "FLEXSPI_HOLD_TIME",
                            "description": "Wait time before access to Serial Flash.",
                            "values": [
                                {
                                    "name": "NO_DELAY",
                                    "value": 0,
                                    "description": "No additional delay"
                                },
                                {
                                    "name": "500US_DELAY",
                                    "value": 1,
                                    "description": "Wait for 500 us."
                                },
                                {
                                    "name": "3MS_DELAY",
                                    "value": 2,
                                    "description": "Wait for 3 ms."
                                },
                                {
                                    "name": "10MS_DELAY",
                                    "value": 3,
                                    "description": "Wait for 10 ms."
                                }
                            ]
                        },
                        {
                            "width": 4,
                            "id": "fuse16-bits-28-31",
                            "name": "FLEXSPI_PWR_HOLD_TIME",
                            "description": "Delay after POR before accessing Quad/Octal-SPI flash devices in addition to delay defined by QSPI_HOLD TIME field.",
                            "values": [
                                {
                                    "name": "NO_DELAY",
                                    "value": 0,
                                    "description": "No additional delay."
                                },
                                {
                                    "name": "100US_DELAY",
                                    "value": 1,
                                    "description": "Wait for 100 us."
                                },
                                {
                                    "name": "500US_DELAY",
                                    "value": 2,
                                    "description": "Wait for 500 us."
                                },
                                {
                                    "name": "1MS_DELAY",
                                    "value": 3,
                                    "description": "Wait for 1 ms."
                                },
                                {
                                    "name": "10MS_DELAY",
                                    "value": 4,
                                    "description": "Wait for 10 ms."
                                },
                                {
                                    "name": "20MS_DELAY",
                                    "value": 5,
                                    "description": "Wait for 20 ms."
                                },
                                {
                                    "name": "40MS_DELAY",
                                    "value": 6,
                                    "description": "Wait for 40 ms."
                                },
                                {
                                    "name": "60MS_DELAY",
                                    "value": 7,
                                    "description": "Wait for 60 ms."
                                },
                                {
                                    "name": "80MS_DELAY",
                                    "value": 8,
                                    "description": "Wait for 80 ms."
                                },
                                {
                                    "name": "100MS_DELAY",
                                    "value": 9,
                                    "description": "Wait for 100 ms."
                                },
                                {
                                    "name": "120MS_DELAY",
                                    "value": 10,
                                    "description": "Wait for 120 ms."
                                },
                                {
                                    "name": "140MS_DELAY",
                                    "value": 11,
                                    "description": "Wait for 140 ms."
                                },
                                {
                                    "name": "160MS_DELAY",
                                    "value": 12,
                                    "description": "Wait for 160 ms."
                                },
                                {
                                    "name": "180MS_DELAY",
                                    "value": 13,
                                    "description": "Wait for 180 ms."
                                },
                                {
                                    "name": "200MS_DELAY",
                                    "value": 14,
                                    "description": "Wait for 200 ms."
                                },
                                {
                                    "name": "220MS_DELAY",
                                    "value": 15,
                                    "description": "Wait for 220 ms."
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "fuse17",
                    "name": "BOOT_CFG2",
                    "description": "Boot configuration word specifying settings for FlexSPI image.",
                    "index_int": "0x0011",
                    "shadow_reg_offset_int": "0x0044",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse0",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 4,
                            "id": "fuse17-bits-0-3",
                            "name": "FLEXSPI_IMAGE_SIZE",
                            "description": "The size of the flash memory to use for a boot image.",
                            "values": [
                                {
                                    "name": "SIZE_OFFSET",
                                    "value": 0,
                                    "description": "The size of the boot image is considered to be equal to the offset of the second image."
                                },
                                {
                                    "name": "SIZE_1MB",
                                    "value": 1,
                                    "description": "Size of remapped area is 1MByte."
                                },
                                {
                                    "name": "SIZE_2MB",
                                    "value": 2,
                                    "description": "Size of remapped area is 2MByte."
                                },
                                {
                                    "name": "SIZE_3MB",
                                    "value": 3,
                                    "description": "Size of remapped area is 3MByte."
                                },
                                {
                                    "name": "SIZE_4MB",
                                    "value": 4,
                                    "description": "Size of remapped area is 4MByte."
                                },
                                {
                                    "name": "SIZE_5MB",
                                    "value": 5,
                                    "description": "Size of remapped area is 5MByte."
                                },
                                {
                                    "name": "SIZE_6MB",
                                    "value": 6,
                                    "description": "Size of remapped area is 6MByte."
                                },
                                {
                                    "name": "SIZE_7MB",
                                    "value": 7,
                                    "description": "Size of remapped area is 7MByte."
                                },
                                {
                                    "name": "SIZE_8MB",
                                    "value": 8,
                                    "description": "Size of remapped area is 8MByte."
                                },
                                {
                                    "name": "SIZE_9MB",
                                    "value": 9,
                                    "description": "Size of remapped area is 9MByte."
                                },
                                {
                                    "name": "SIZE_10MB",
                                    "value": 10,
                                    "description": "Size of remapped area is 10MByte."
                                },
                                {
                                    "name": "SIZE_11MB",
                                    "value": 11,
                                    "description": "Size of remapped area is 11MByte."
                                },
                                {
                                    "name": "SIZE_12MB",
                                    "value": 12,
                                    "description": "Size of remapped area is 12MByte."
                                },
                                {
                                    "name": "SIZE_256KB",
                                    "value": 13,
                                    "description": "Size of remapped area is 256KByte."
                                },
                                {
                                    "name": "SIZE_512KB",
                                    "value": 14,
                                    "description": "Size of remapped area is 512KByte."
                                },
                                {
                                    "name": "SIZE_768KB",
                                    "value": 15,
                                    "description": "Size of remapped area is 768KByte."
                                }
                            ]
                        },
                        {
                            "width": 7,
                            "id": "fuse17-bits-4-10",
                            "name": "FLEXSPI_DELAY_CELL_NUM",
                            "description": "Delay cell numbers for flash read sampling via DQS (either internal loopback or external DQS).\n\ndelay = 1600ps, if value = 0\ndelay = value * 100ps"
                        },
                        {
                            "width": 10,
                            "id": "fuse17-bits-11-20",
                            "name": "FLEXSPI_IMAGE_OFFSET",
                            "description": "The offset in flash memory where the second boot image starts. The offset to the second image is X * 256 KB."
                        },
                        {
                            "width": 11
                        }
                    ]
                },
                {
                    "id": "fuse18",
                    "name": "BOOT_CFG3",
                    "description": "Boot configuration fuse word 3.",
                    "index_int": "0x0012",
                    "shadow_reg_offset_int": "0x0048",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse0",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 3,
                            "id": "fuse18-bits-0-2",
                            "name": "ROTK0_USAGE",
                            "description": "RoT key 0 usage properties. ",
                            "values": [
                                {
                                    "name": "All_usage_key",
                                    "value": 0,
                                    "description": "Usable as debug CA, image CA, FW CA, image and FW key."
                                },
                                {
                                    "name": "DebugCA",
                                    "value": 1,
                                    "description": "Usable as debug CA only."
                                },
                                {
                                    "name": "ImageCA_FwCA",
                                    "value": 2,
                                    "description": "Usable as image (boot and FW) CA only."
                                },
                                {
                                    "name": "DebugCA_ImageCA_FwCA",
                                    "value": 3,
                                    "description": "Usable as debug, boot and FW image CA."
                                },
                                {
                                    "name": "ImageKey_FwKey",
                                    "value": 4,
                                    "description": "Usable as image key and FW update key only."
                                },
                                {
                                    "name": "ImageKey",
                                    "value": 5,
                                    "description": "Usable as boot image key only."
                                },
                                {
                                    "name": "FwKey",
                                    "value": 6,
                                    "description": "Usable as FW update image key only."
                                },
                                {
                                    "name": "Unused",
                                    "value": 7,
                                    "description": "Key slot is not used."
                                }
                            ]
                        },
                        {
                            "width": 3,
                            "id": "fuse18-bits-3-5",
                            "name": "ROTK1_USAGE",
                            "description": "RoT key 1 usage properties.",
                            "values": [
                                {
                                    "name": "All_usage_key",
                                    "value": 0,
                                    "description": "Usable as debug CA, image CA, FW CA, image and FW key."
                                },
                                {
                                    "name": "DebugCA",
                                    "value": 1,
                                    "description": "Usable as debug CA only."
                                },
                                {
                                    "name": "ImageCA_FwCA",
                                    "value": 2,
                                    "description": "Usable as image (boot and FW) CA only."
                                },
                                {
                                    "name": "DebugCA_ImageCA_FwCA",
                                    "value": 3,
                                    "description": "Usable as debug, boot and FW image CA."
                                },
                                {
                                    "name": "ImageKey_FwKey",
                                    "value": 4,
                                    "description": "Usable as image key and FW update key only."
                                },
                                {
                                    "name": "ImageKey",
                                    "value": 5,
                                    "description": "Usable as boot image key only."
                                },
                                {
                                    "name": "FwKey",
                                    "value": 6,
                                    "description": "Usable as FW update image key only."
                                },
                                {
                                    "name": "Unused",
                                    "value": 7,
                                    "description": "Key slot is not used."
                                }
                            ]
                        },
                        {
                            "width": 3,
                            "id": "fuse18-bits-6-8",
                            "name": "ROTK2_USAGE",
                            "description": "RoT key 2 usage properties.",
                            "values": [
                                {
                                    "name": "All_usage_key",
                                    "value": 0,
                                    "description": "Usable as debug CA, image CA, FW CA, image and FW key."
                                },
                                {
                                    "name": "DebugCA",
                                    "value": 1,
                                    "description": "Usable as debug CA only."
                                },
                                {
                                    "name": "ImageCA_FwCA",
                                    "value": 2,
                                    "description": "Usable as image (boot and FW) CA only."
                                },
                                {
                                    "name": "DebugCA_ImageCA_FwCA",
                                    "value": 3,
                                    "description": "Usable as debug, boot and FW image CA."
                                },
                                {
                                    "name": "ImageKey_FwKey",
                                    "value": 4,
                                    "description": "Usable as image key and FW update key only."
                                },
                                {
                                    "name": "ImageKey",
                                    "value": 5,
                                    "description": "Usable as boot image key only."
                                },
                                {
                                    "name": "FwKey",
                                    "value": 6,
                                    "description": "Usable as FW update image key only."
                                },
                                {
                                    "name": "Unused",
                                    "value": 7,
                                    "description": "Key slot is not used."
                                }
                            ]
                        },
                        {
                            "width": 3,
                            "id": "fuse18-bits-9-11",
                            "name": "ROTK3_USAGE",
                            "description": "RoT key 3 usage properties.",
                            "values": [
                                {
                                    "name": "All_usage_key",
                                    "value": 0,
                                    "description": "Usable as debug CA, image CA, FW CA, image and FW key."
                                },
                                {
                                    "name": "DebugCA",
                                    "value": 1,
                                    "description": "Usable as debug CA only."
                                },
                                {
                                    "name": "ImageCA_FwCA",
                                    "value": 2,
                                    "description": "Usable as image (boot and FW) CA only."
                                },
                                {
                                    "name": "DebugCA_ImageCA_FwCA",
                                    "value": 3,
                                    "description": "Usable as debug, boot and FW image CA."
                                },
                                {
                                    "name": "ImageKey_FwKey",
                                    "value": 4,
                                    "description": "Usable as image key and FW update key only."
                                },
                                {
                                    "name": "ImageKey",
                                    "value": 5,
                                    "description": "Usable as boot image key only."
                                },
                                {
                                    "name": "FwKey",
                                    "value": 6,
                                    "description": "Usable as FW update image key only."
                                },
                                {
                                    "name": "Unused",
                                    "value": 7,
                                    "description": "Key slot is not used."
                                }
                            ]
                        },
                        {
                            "width": 2,
                            "id": "fuse18-bits-12-13",
                            "name": "ENF_CNSA",
                            "description": "Enforce CNSA (Commercial National Security Algorithm) suite keys.",
                            "values": [
                                {
                                    "name": "P-256_KEY",
                                    "value": 0,
                                    "description": "ECC P-256 keys."
                                },
                                {
                                    "name": "P-384_KEY",
                                    "value": 1,
                                    "description": "ECC P-384 keys."
                                },
                                {
                                    "name": "P-384_KEY_1",
                                    "value": 2,
                                    "description": "ECC P-384 keys."
                                },
                                {
                                    "name": "P-384_KEY_2",
                                    "value": 3,
                                    "description": "ECC P-384 keys."
                                }
                            ]
                        },
                        {
                            "width": 2,
                            "id": "fuse18-bits-14-15",
                            "name": "ENABLE_CRC_CHECK",
                            "description": "Enable CRC checks over OTP words.\n\nCRC1 = CRC over OTP fuses from 15 - 21\nCRC2 = CRC over OTP fuses from 00 - 02\nCRC6 = CRC over OTP fuses from 92 - 115",
                            "values": [
                                {
                                    "name": "DISABLE",
                                    "value": 0,
                                    "description": "Disable CRC check over OTPs."
                                },
                                {
                                    "name": "ENABLE_NXP_OTP",
                                    "value": 1,
                                    "description": "Perform CRC check over NXP OTPs."
                                },
                                {
                                    "name": "ENABLE_ALL_OTP",
                                    "value": 2,
                                    "description": "Perform CRC check over NXP and OEM OTPs."
                                }
                            ]
                        },
                        {
                            "width": 2,
                            "id": "fuse18-bits-16-17",
                            "name": "FIPS_KDF_STEN",
                            "description": "Enable self-test for CKDF block on power-up. Needed for FIPS certification. If this field is non-zero run self-test and log result in BOOT_STATE register.",
                            "values": [
                                {
                                    "name": "SKIP_SELF_TEST_RUN",
                                    "value": 0,
                                    "description": "Self-tests run is skipped and results are not included."
                                },
                                {
                                    "name": "INCLUDE_SELF_TEST_RESULTS",
                                    "value": 1,
                                    "description": "On failure continue to boot."
                                },
                                {
                                    "name": "FALL_THROUGH_ISP_ON_FAIL",
                                    "value": 2,
                                    "description": "On failure fall through ISP."
                                },
                                {
                                    "name": "LOCK_DEVICE_ON_FAIL",
                                    "value": 3,
                                    "description": "Stop on execution on fail."
                                }
                            ]
                        },
                        {
                            "width": 2,
                            "id": "fuse18-bits-18-19",
                            "name": "FIPS_CMAC_STEN",
                            "description": "Enable self-test for CMAC block on power-up. Needed for FIPS certification. If this field is non-zero run self-test and log result in BOOT_STATE register.",
                            "values": [
                                {
                                    "name": "SKIP_SELF_TEST_RUN",
                                    "value": 0,
                                    "description": "Self-tests run is skipped and results are not included."
                                },
                                {
                                    "name": "INCLUDE_SELF_TEST_RESULTS",
                                    "value": 1,
                                    "description": "On failure continue to boot."
                                },
                                {
                                    "name": "FALL_THROUGH_ISP_ON_FAIL",
                                    "value": 2,
                                    "description": "On failure fall through ISP."
                                },
                                {
                                    "name": "LOCK_DEVICE_ON_FAIL",
                                    "value": 3,
                                    "description": "Stop on execution on fail."
                                }
                            ]
                        },
                        {
                            "width": 2,
                            "id": "fuse18-bits-20-21",
                            "name": "FIPS_DRBG_STEN",
                            "description": "Enable self-test for DRBG block on power-up. Needed for FIPS certification. If this field is non-zero run self-test and log result in BOOT_STATE register.",
                            "values": [
                                {
                                    "name": "SKIP_SELF_TEST_RUN",
                                    "value": 0,
                                    "description": "Self-tests run is skipped and results are not included."
                                },
                                {
                                    "name": "INCLUDE_SELF_TEST_RESULTS",
                                    "value": 1,
                                    "description": "On failure continue to boot."
                                },
                                {
                                    "name": "FALL_THROUGH_ISP_ON_FAIL",
                                    "value": 2,
                                    "description": "On failure fall through ISP."
                                },
                                {
                                    "name": "LOCK_DEVICE_ON_FAIL",
                                    "value": 3,
                                    "description": "Stop on execution on fail."
                                }
                            ]
                        },
                        {
                            "width": 2,
                            "id": "fuse18-bits-22-23",
                            "name": "FIPS_ECDSA_STEN",
                            "description": "Enable self-test for ECDSA block on power-up. Needed for FIPS certification. If this field is non-zero run self-test and log result in BOOT_STATE register.",
                            "values": [
                                {
                                    "name": "SKIP_SELF_TEST_RUN",
                                    "value": 0,
                                    "description": "Self-tests run is skipped and results are not included."
                                },
                                {
                                    "name": "INCLUDE_SELF_TEST_RESULTS",
                                    "value": 1,
                                    "description": "On failure continue to boot."
                                },
                                {
                                    "name": "FALL_THROUGH_ISP_ON_FAIL",
                                    "value": 2,
                                    "description": "On failure fall through ISP."
                                },
                                {
                                    "name": "LOCK_DEVICE_ON_FAIL",
                                    "value": 3,
                                    "description": "Stop on execution on fail."
                                }
                            ]
                        },
                        {
                            "width": 2,
                            "id": "fuse18-bits-24-25",
                            "name": "FIPS_AES_STEN",
                            "description": "Enable self-test for AES block on power-up. Needed for FIPS certification. If this field is non-zero run self-test and log result in BOOT_STATE register.",
                            "values": [
                                {
                                    "name": "SKIP_SELF_TEST_RUN",
                                    "value": 0,
                                    "description": "Self-tests run is skipped and results are not included."
                                },
                                {
                                    "name": "INCLUDE_SELF_TEST_RESULTS",
                                    "value": 1,
                                    "description": "On failure continue to boot."
                                },
                                {
                                    "name": "FALL_THROUGH_ISP_ON_FAIL",
                                    "value": 2,
                                    "description": "On failure fall through ISP."
                                },
                                {
                                    "name": "LOCK_DEVICE_ON_FAIL",
                                    "value": 3,
                                    "description": "Stop on execution on fail."
                                }
                            ]
                        },
                        {
                            "width": 2,
                            "id": "fuse18-bits-26-27",
                            "name": "FIPS_SHA_STEN",
                            "description": "Enable self-test for SHA2 block on power-up. Needed for FIPS certification. If this field is non-zero run self-test and log result in BOOT_STATE register.",
                            "values": [
                                {
                                    "name": "SKIP_SELF_TEST_RUN",
                                    "value": 0,
                                    "description": "Self-tests run is skipped and results are not included."
                                },
                                {
                                    "name": "INCLUDE_SELF_TEST_RESULTS",
                                    "value": 1,
                                    "description": "On failure continue to boot."
                                },
                                {
                                    "name": "FALL_THROUGH_ISP_ON_FAIL",
                                    "value": 2,
                                    "description": "On failure fall through ISP."
                                },
                                {
                                    "name": "LOCK_DEVICE_ON_FAIL",
                                    "value": 3,
                                    "description": "Stop on execution on fail."
                                }
                            ]
                        },
                        {
                            "width": 2,
                            "id": "fuse18-bits-28-29",
                            "name": "SKIP_PM_SIGN_VERIFICATION",
                            "description": "On boot-up from PM3/PM4, do not run through ECDSA signature verification of the image.",
                            "values": [
                                {
                                    "name": "NO_SKIP",
                                    "value": 0,
                                    "description": "Image verification is not skipped upon wake up from PM3 and PM4."
                                },
                                {
                                    "name": "NO_SKIP_1",
                                    "value": 1,
                                    "description": "Image verification is not skipped upon wake up from PM3 and PM4."
                                },
                                {
                                    "name": "NO_SKIP_2",
                                    "value": 2,
                                    "description": "Image verification is not skipped upon wake up from PM3 and PM4."
                                },
                                {
                                    "name": "SKIP",
                                    "value": 3,
                                    "description": "Image verification is skipped upon wake up from PM3 and PM4."
                                }
                            ]
                        },
                        {
                            "width": 2
                        }
                    ]
                },
                {
                    "id": "fuse19",
                    "name": "BOOT_CFG4",
                    "description": "Boot configuration word specifying settings for recovery image.",
                    "index_int": "0x0013",
                    "shadow_reg_offset_int": "0x004C",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse0",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 4,
                            "id": "fuse19-bits-0-3",
                            "name": "RECOVERY_IMAGE_SIZE",
                            "description": "Recovery image size",
                            "values": [
                                {
                                    "name": "SIZE_OFFSET",
                                    "value": 0,
                                    "description": "The size of the boot image is considered to be equal to the offset of the second image."
                                },
                                {
                                    "name": "SIZE_1MB",
                                    "value": 1,
                                    "description": "Size of remapped area is 1MByte."
                                },
                                {
                                    "name": "SIZE_2MB",
                                    "value": 2,
                                    "description": "Size of remapped area is 2MByte."
                                },
                                {
                                    "name": "SIZE_3MB",
                                    "value": 3,
                                    "description": "Size of remapped area is 3MByte."
                                },
                                {
                                    "name": "SIZE_4MB",
                                    "value": 4,
                                    "description": "Size of remapped area is 4MByte."
                                },
                                {
                                    "name": "SIZE_5MB",
                                    "value": 5,
                                    "description": "Size of remapped area is 5MByte."
                                },
                                {
                                    "name": "SIZE_6MB",
                                    "value": 6,
                                    "description": "Size of remapped area is 6MByte."
                                },
                                {
                                    "name": "SIZE_7MB",
                                    "value": 7,
                                    "description": "Size of remapped area is 7MByte."
                                },
                                {
                                    "name": "SIZE_8MB",
                                    "value": 8,
                                    "description": "Size of remapped area is 8MByte."
                                },
                                {
                                    "name": "SIZE_9MB",
                                    "value": 9,
                                    "description": "Size of remapped area is 9MByte."
                                },
                                {
                                    "name": "SIZE_10MB",
                                    "value": 10,
                                    "description": "Size of remapped area is 10MByte."
                                },
                                {
                                    "name": "SIZE_11MB",
                                    "value": 11,
                                    "description": "Size of remapped area is 11MByte."
                                },
                                {
                                    "name": "SIZE_12MB",
                                    "value": 12,
                                    "description": "Size of remapped area is 12MByte."
                                },
                                {
                                    "name": "SIZE_256KB",
                                    "value": 13,
                                    "description": "Size of remapped area is 256KByte."
                                },
                                {
                                    "name": "SIZE_512KB",
                                    "value": 14,
                                    "description": "Size of remapped area is 512KByte."
                                },
                                {
                                    "name": "SIZE_768KB",
                                    "value": 15,
                                    "description": "Size of remapped area is 768KByte."
                                }
                            ]
                        },
                        {
                            "width": 10,
                            "id": "fuse19-bits-4-13",
                            "name": "RECOVERY_IMAGE_OFFSET",
                            "description": "The offset in flash memory where the second boot image starts for recovery image. The offset to the second image is X * 256 kB."
                        },
                        {
                            "width": 1,
                            "id": "fuse19-bit-14",
                            "name": "RECOVERY_BOOT_EN",
                            "description": "Configures recovery boot flag",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Boot from recovery image is disabled."
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Boot from recovery image is enabled."
                                }
                            ]
                        },
                        {
                            "width": 17
                        }
                    ]
                },
                {
                    "id": "fuse20",
                    "name": "BOOT_CFG5",
                    "description": "The USB VID and PID can be customized by writing the new values to the USB_VID and USB_PID fields in this fuse word field.",
                    "index_int": "0x0014",
                    "shadow_reg_offset_int": "0x0050",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse0",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse20-bits-0-15",
                            "name": "USB_VID",
                            "description": "Value of USB VID"
                        },
                        {
                            "width": 16,
                            "id": "fuse20-bits-16-31",
                            "name": "USB_PID",
                            "description": "Value of USB PID"
                        }
                    ]
                },
                {
                    "id": "fuse21",
                    "name": "BOOT_CFG6",
                    "description": "The SDIO VID and PID can be customized by writing the new values to the SDIO_VID and SDIO_PID fields in this fuse word field.",
                    "index_int": "0x0015",
                    "shadow_reg_offset_int": "0x0054",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse0",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse21-bits-0-15",
                            "name": "SDIO_VID",
                            "description": "Value of SDIO VID"
                        },
                        {
                            "width": 16,
                            "id": "fuse21-bits-16-31",
                            "name": "SDIO_PID",
                            "description": "Value of SDIO PID"
                        }
                    ]
                },
                {
                    "id": "fuse22",
                    "name": "SEC_BOOT_CFG0",
                    "description": "Root key revocation fuse word.",
                    "index_int": "0x0016",
                    "shadow_reg_offset_int": "0x0058",
                    "individual_write_lock": "none",
                    "lock": {
                        "register_id": "fuse0",
                        "write_lock_int": "0x0008",
                        "read_lock_int": "0x0020",
                        "operation_lock_int": "0x0010"
                    },
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 1,
                            "id": "fuse22-bit-0",
                            "name": "REVOKE_ROOTKEY0",
                            "description": "RoT Key 0 enable",
                            "values": [
                                {
                                    "name": "ENABLED",
                                    "value": 0,
                                    "description": "RoT Key is enabled."
                                },
                                {
                                    "name": "REVOKED",
                                    "value": 1,
                                    "description": "RoT Key is revoked."
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse22-bit-1",
                            "name": "REVOKE_ROOTKEY1",
                            "description": "RoT Key 1 enable",
                            "values": [
                                {
                                    "name": "ENABLED",
                                    "value": 0,
                                    "description": "RoT Key is enabled."
                                },
                                {
                                    "name": "REVOKED",
                                    "value": 1,
                                    "description": "RoT Key is revoked."
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse22-bit-2",
                            "name": "REVOKE_ROOTKEY2",
                            "description": "RoT Key 2 enable ",
                            "values": [
                                {
                                    "name": "ENABLED",
                                    "value": 0,
                                    "description": "RoT Key is enabled."
                                },
                                {
                                    "name": "REVOKED",
                                    "value": 1,
                                    "description": "RoT Key is revoked."
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse22-bit-3",
                            "name": "REVOKE_ROOTKEY3",
                            "description": "RoT Key 3 enable ",
                            "values": [
                                {
                                    "name": "ENABLED",
                                    "value": 0,
                                    "description": "RoT Key is enabled."
                                },
                                {
                                    "name": "REVOKED",
                                    "value": 1,
                                    "description": "RoT Key is revoked."
                                }
                            ]
                        },
                        {
                            "width": 1
                        },
                        {
                            "width": 1,
                            "id": "fuse22-bit-5",
                            "name": "NXP_PROV_FW_EXEC_DIS",
                            "description": "Flag to disable execution of NXP signed provisioning Firmwares",
                            "values": [
                                {
                                    "name": "EXEC_NOT_DISABLED",
                                    "value": 0,
                                    "description": "Execution of NXP provisioning fw is not disabled."
                                },
                                {
                                    "name": "EXEC_DISABLED",
                                    "value": 1,
                                    "description": "Execution of NXP provisioning fw is disabled."
                                }
                            ]
                        },
                        {
                            "width": 10
                        }
                    ]
                },
                {
                    "id": "fuse23",
                    "name": "SEC_BOOT_CFG1",
                    "description": "DAP Vendor Usage configurations fuse word.",
                    "index_int": "0x0017",
                    "shadow_reg_offset_int": "0x005C",
                    "individual_write_lock": "none",
                    "lock": {
                        "register_id": "fuse0",
                        "write_lock_int": "0x0008",
                        "read_lock_int": "0x0020",
                        "operation_lock_int": "0x0010"
                    },
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse23-bits-0-15",
                            "name": "DAP_VENDOR_USAGE",
                            "description": "Lower 16-bits of Vendor Usage field in Debug Credentials defined in NXP's Debug Authentication Protocol specifications Version 1.0.  "
                        }
                    ]
                },
                {
                    "id": "fuse24",
                    "name": "SEC_BOOT_CFG2",
                    "description": "Lower 16-bits of revoke Image signing key configuration fuse word.",
                    "index_int": "0x0018",
                    "shadow_reg_offset_int": "0x0060",
                    "individual_write_lock": "none",
                    "lock": {
                        "register_id": "fuse0",
                        "write_lock_int": "0x0008",
                        "read_lock_int": "0x0020",
                        "operation_lock_int": "0x0010"
                    },
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse24-bits-0-15",
                            "name": "REVOKE_IMG_KEY",
                            "description": "Image key revocation bits."
                        }
                    ]
                },
                {
                    "id": "fuse25",
                    "name": "SEC_BOOT_CFG3",
                    "description": "Upper 16-bits of revoke Image signing key configuration fuse word.",
                    "index_int": "0x0019",
                    "shadow_reg_offset_int": "0x0064",
                    "individual_write_lock": "none",
                    "lock": {
                        "register_id": "fuse0",
                        "write_lock_int": "0x0008",
                        "read_lock_int": "0x0020",
                        "operation_lock_int": "0x0010"
                    },
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse25-bits-0-15",
                            "name": "REVOKE_IMG_KEY",
                            "description": "Image key revocation bits."
                        }
                    ]
                },
                {
                    "id": "fuse26",
                    "name": "SEC_BOOT_CFG4",
                    "description": "User defined",
                    "index_int": "0x001A",
                    "shadow_reg_offset_int": "0x0068",
                    "individual_write_lock": "none",
                    "lock": {
                        "register_id": "fuse0",
                        "write_lock_int": "0x0008",
                        "read_lock_int": "0x0020",
                        "operation_lock_int": "0x0010"
                    },
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse26-bits-0-15",
                            "name": "User",
                            "description": "User defined"
                        }
                    ]
                },
                {
                    "id": "fuse27",
                    "name": "SEC_BOOT_CFG5",
                    "description": "User defined",
                    "index_int": "0x001B",
                    "shadow_reg_offset_int": "0x006C",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse0",
                        "write_lock_int": "0x0008",
                        "read_lock_int": "0x0020",
                        "operation_lock_int": "0x0010"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse27-bits-0-31",
                            "name": "SEC_BOOT_CFG5",
                            "description": "User defined"
                        }
                    ]
                },
                {
                    "id": "fuse28",
                    "name": "SEC_BOOT_CFG6",
                    "description": "SDIO Block size settings fuse word.",
                    "index_int": "0x001C",
                    "shadow_reg_offset_int": "0x0070",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse0",
                        "write_lock_int": "0x0008",
                        "read_lock_int": "0x0020",
                        "operation_lock_int": "0x0010"
                    },
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse28-bits-0-15",
                            "name": "SDIO_F0_BLOCKSIZE",
                            "description": "SDIO Block F0 size\n`16b00` = SDIO_F0_BLOCKSIZE will be fixed `0x1`\n`SDIO_F0_BLOCKSIZE` = Fuse value"
                        },
                        {
                            "width": 16,
                            "id": "fuse28-bits-16-31",
                            "name": "SDIO_FN_BLOCKSIZE",
                            "description": "SDIO Block FN size\n`16b00` = SDIO_FN_BLOCKSIZE will be fixed `0x200`\n`SDIO_FN_BLOCKSIZE` = Fuse value"
                        }
                    ]
                },
                {
                    "id": "fuse29",
                    "name": "SEC_BOOT_CFG7",
                    "description": "SDIO configuration settings fuse word.",
                    "index_int": "0x001D",
                    "shadow_reg_offset_int": "0x0074",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse0",
                        "write_lock_int": "0x0008",
                        "read_lock_int": "0x0020",
                        "operation_lock_int": "0x0010"
                    },
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "fuse29-bits-0-7",
                            "name": "SDIO_REV",
                            "description": "Configure SDIO version revision.\n`8b00` = SDIO_REV will be fixed `0x30`\n`SDIO_REV ` = Fuse value"
                        },
                        {
                            "width": 8,
                            "id": "fuse29-bits-8-15",
                            "name": "SDIO_SPEED",
                            "description": "Configure SDIO Speed.\n`8b00` = SDIO_SPEED will be fixed `0xB`\n`SDIO_SPEED` = Fuse value"
                        },
                        {
                            "width": 16,
                            "id": "fuse29-bits-16-31",
                            "name": "SDIO_TIMEOUT",
                            "description": "Configure SDIO Timeout.\n`16b00` = SDIO_TIMEOUT will be fixed `0x14`\n`SDIO_TIMEOUT` = Fuse value"
                        }
                    ]
                },
                {
                    "id": "fuse30",
                    "name": "SEC_BOOT_CFG8",
                    "description": "User defined",
                    "index_int": "0x001E",
                    "shadow_reg_offset_int": "0x0078",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse0",
                        "write_lock_int": "0x0008",
                        "read_lock_int": "0x0020",
                        "operation_lock_int": "0x0010"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse30-bits-0-31",
                            "name": "SEC_BOOT_CFG8",
                            "description": "User defined"
                        }
                    ]
                },
                {
                    "id": "fuse31",
                    "name": "DCFG_CC_SOCU_NS",
                    "description": "The DCFG_CC_SOCU_NS configuration fields can be used to increase the restriction level specified in DCFG_CC_SOCU. With TZ-M, the part can be sold by level 1 customers (secure code developer) to level-2 customers who develops non-secure code only.\n    - In this scenario, or easy of development, Level-I customer releases the part to always allow non-secure debug.\n    - To allow level-2 customers to further seal the part DCFG_CC_SOCU_NS is used.\n    - ROM will use this word to further restrict the debug access.\n    - Layout of this word is same as DCFG_CC_SOCU.\n    - Combinations of PINNED_xxxEN and DFLT_xxxEN bits and resulting access restriction levels are:\n    \n1. PINNED_xxxEN=1,DFLT_xxxEN=1: Restriction level 0. Access to the sub-domain is always enabled. This setting is provided for module use case scenario where DCFG_CC_SOCU_NS would be used to define further access restrictions before final deployment of the product.\n2. PINNED_xxxEN=0,DFLT_xxxEN=0: Restriction level 1. Access to the sub-domain is disabled at startup. But the access can be enabled through the debug authentication process by providing an appropriate Debug Credential (DC) certificate.\n3. PINNED_xxxEN=0,DFLT_xxxEN=1: Illegal setting. Part will lock-up if this setting is selected.\n4. PINNED_xxxEN=1,DFLT_xxxEN=0: Restriction level 2. Access to the sub-domain is permanently disabled and cannot be reversed. This setting offers the highest level of restriction.",
                    "index_int": "0x001F",
                    "shadow_reg_offset_int": "0x007C",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse0",
                        "write_lock_int": "0x0200",
                        "read_lock_int": "0x0800",
                        "operation_lock_int": "0x0400"
                    },
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "fuse31-bits-0-7",
                            "name": "CRC8_NS",
                            "description": "CRC-8/ITU of upper 3 bytes (bits 8 to 31). Since these fields are security critical, they are constructed with built-in integrity protection to protect from side channel glitch attacks.\nThe lower byte (0 to 7 bits) of these OTP words should be written with CRC-8/ITU of upper 3 bytes (bits 8 to 31). \nThis construction makes the probability of a successful glitch attack to flip the exact control bits extremely difficult.\n The CRC8 calculation should be based on x8 + x2 + x + 1 polynomial. Polynomial=0x07, initial value= 0x00, XorOut=0x55",
                            "calculated": "CRC-8/ITU"
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-8",
                            "name": "DFLT_NIDEN_NS",
                            "description": "Controls non-Invasive debugging of TrustZone for Arm8-M defined non-secure domain of CPU0.",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Disabled"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-9",
                            "name": "DFLT_DBGEN_NS",
                            "description": "Controls invasive debugging of TrustZone for Arm8-M defined non-secure domain of CPU0.",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Disabled"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-10",
                            "name": "DFLT_SPNIDEN_NS",
                            "description": "Controls non-Invasive debugging of TrustZone for Arm8-M defined secure domain of CPU0",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Disabled"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-11",
                            "name": "DFLT_SPIDEN_NS",
                            "description": "Controls invasive debugging of TrustZone for Arm8-M defined secure domain of CPU0.",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Disabled"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-12",
                            "name": "DFLT_TAPEN_NS",
                            "description": "Controls TAP (Test Access Point) controller used for structural integrity testing of silicon by NXP as part of Return Material Analysis (RMA)",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Disabled"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-13",
                            "name": "DFLT_CPU1NIDEN_NS",
                            "description": "Controls non-Invasive debugging of CPU1.",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Disabled"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-14",
                            "name": "DFLT_CPU1DBGEN_NS",
                            "description": "Controls invasive debugging of CPU1.",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Disabled"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-15",
                            "name": "DFLT_CPU2NIDEN_NS",
                            "description": "Controls non-Invasive debugging of CPU2.",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Disabled"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-16",
                            "name": "DFLT_CPU2DBGEN_NS",
                            "description": "Controls invasive debugging of CPU2.",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Disabled"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-17",
                            "name": "DFLT_ISPCMDEN_NS",
                            "description": "Controls whether ISP boot flow DM-AP command (command code: 0x05) can be issued after authentication.",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Disabled"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-18",
                            "name": "DFLT_FACMDEN_NS",
                            "description": "Controls whether DM-AP Set FA Mode command (command code: 0x06) can be issued after authentication",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Disabled"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-19",
                            "name": "PINNED_NIDEN_NS",
                            "description": "Controls non-Invasive debugging of TrustZone for Arm8-M defined non-secure domain of CPU0",
                            "values": [
                                {
                                    "name": "DAR_CC",
                                    "value": 0,
                                    "description": "Debug Authentication Response determines the state."
                                },
                                {
                                    "name": "FIXED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-20",
                            "name": "PINNED_DBGEN_NS",
                            "description": "Controls invasive debugging of TrustZone for Arm8-M defined non-secure domain of CPU0",
                            "values": [
                                {
                                    "name": "DAR_CC",
                                    "value": 0,
                                    "description": "Debug Authentication Response determines the state."
                                },
                                {
                                    "name": "FIXED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-21",
                            "name": "PINNED_SPNIDEN_NS",
                            "description": "Controls non-Invasive debugging of TrustZone for Arm8-M defined secure domain of CPU0",
                            "values": [
                                {
                                    "name": "DAR_CC",
                                    "value": 0,
                                    "description": "Debug Authentication Response determines the state."
                                },
                                {
                                    "name": "FIXED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-22",
                            "name": "PINNED_SPIDEN_NS",
                            "description": "Controls invasive debugging of TrustZone for Arm8-M defined secure domain of CPU0",
                            "values": [
                                {
                                    "name": "DAR_CC",
                                    "value": 0,
                                    "description": "Debug Authentication Response determines the state."
                                },
                                {
                                    "name": "FIXED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-23",
                            "name": "PINNED_TAPEN_NS",
                            "description": "Controls TAP (Test Access Point) controller used for structural integrity testing of silicon by NXP as part of Return Material Analysis (RMA)",
                            "values": [
                                {
                                    "name": "DAR_CC",
                                    "value": 0,
                                    "description": "Debug Authentication Response determines the state."
                                },
                                {
                                    "name": "FIXED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-24",
                            "name": "PINNED_CPU1NIDEN_NS",
                            "description": "Controls non-Invasive debugging of CPU1",
                            "values": [
                                {
                                    "name": "DAR_CC",
                                    "value": 0,
                                    "description": "Debug Authentication Response determines the state."
                                },
                                {
                                    "name": "FIXED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-25",
                            "name": "PINNED_CPU1DBGEN_NS",
                            "description": "Controls invasive debugging of CPU1.",
                            "values": [
                                {
                                    "name": "DAR_CC",
                                    "value": 0,
                                    "description": "Debug Authentication Response determines the state."
                                },
                                {
                                    "name": "FIXED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-26",
                            "name": "PINNED_CPU2NIDEN_NS",
                            "description": "Controls non-Invasive debugging of CPU2.",
                            "values": [
                                {
                                    "name": "DAR_CC",
                                    "value": 0,
                                    "description": "Debug Authentication Response determines the state."
                                },
                                {
                                    "name": "FIXED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-27",
                            "name": "PINNED_CPU2DBGEN_NS",
                            "description": "Controls invasive debugging of CPU2.",
                            "values": [
                                {
                                    "name": "DAR_CC",
                                    "value": 0,
                                    "description": "Debug Authentication Response determines the state."
                                },
                                {
                                    "name": "FIXED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-28",
                            "name": "PINNED_ISPCMDEN_NS",
                            "description": "Controls whether ISP boot flow DM-AP command (command code: 0x05) can be issued after authentication.",
                            "values": [
                                {
                                    "name": "DAR_CC",
                                    "value": 0,
                                    "description": "Debug Authentication Response determines the state."
                                },
                                {
                                    "name": "FIXED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-29",
                            "name": "PINNED_FACMDEN_NS",
                            "description": "Controls whether DM-AP Set FA Mode command (command code: 0x06) can be issued after authentication",
                            "values": [
                                {
                                    "name": "DAR_CC",
                                    "value": 0,
                                    "description": "Debug Authentication Response determines the state."
                                },
                                {
                                    "name": "FIXED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse31-bit-30",
                            "name": "FORCE_UUID_MATCH_NS",
                            "description": "When set, debug authentication protocol only accepts Debug Credential certificates (DC) with matching UUID.",
                            "values": [
                                {
                                    "name": "NO_FORCE_UUID_MATCH",
                                    "value": 0,
                                    "description": "Accepts Debug Credential certificates (DC) with any UUID."
                                },
                                {
                                    "name": "FORCE_UUID_MATCH",
                                    "value": 1,
                                    "description": "Accepts Debug Credential certificates (DC) with matching UUID."
                                }
                            ]
                        },
                        {
                            "width": 1
                        }
                    ],
                    "default_value_int": "0x0"
                },
                {
                    "id": "fuse33",
                    "name": "DCFG_CC_SOCU",
                    "description": "The DCFG_CC_SOCU configuration field specifies the debug access restrictions per debug domain. The DCFG_CC_SOCU_NS fields can be used to increase the restriction level specified in DCFG_CC_SOCU but cannot be used to reduce the restriction level.\n    - Combinations of PINNED_xxxEN and DFLT_xxxEN bits and resulting access restriction levels are:\n\n 1. PINNED_xxxEN=1,DFLT_xxxEN=1: Restriction level 0. Access to the sub-domain is always enabled. This setting is provided for module use case scenario where DCFG_CC_SOCU_NS would be used to define further access restrictions before final deployment of the product. \n 2. PINNED_xxxEN=0,DFLT_xxxEN=0: Restriction level 1. Access to the sub-domain is disabled at startup. But the access can be enabled through the debug authentication process by providing an appropriate Debug Credential (DC) certificate. \n 3. PINNED_xxxEN=0,DFLT_xxxEN=1: Illegal setting. Part will lock-up if this setting is selected. \n 4. PINNED_xxxEN=1,DFLT_xxxEN=0: Restriction level 2. Access to the sub-domain is permanently disabled and cannot be reversed. This setting offers the highest level of restriction.",
                    "index_int": "0x0021",
                    "shadow_reg_offset_int": "0x0084",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0040",
                        "read_lock_int": "0x0100",
                        "operation_lock_int": "0x0080"
                    },
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "fuse33-bits-0-7",
                            "name": "CRC8",
                            "description": "CRC-8/ITU of upper 3 bytes (bits 8 to 31). Since these fields are security critical, they are constructed with built-in integrity protection to protect from side channel glitch attacks.\nThe lower byte (0 to 7 bits) of these OTP words should be written with CRC-8/ITU of upper 3 bytes (bits 8 to 31). \nThis construction makes the probability of a successful glitch attack to flip the exact control bits extremely difficult.\n The CRC8 calculation should be based on x8 + x2 + x + 1 polynomial. Polynomial=0x07, initial value= 0x00, XorOut=0x55",
                            "calculated": "CRC-8/ITU"
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-8",
                            "name": "DFLT_NIDEN",
                            "description": "Controls non-Invasive debugging of TrustZone for Arm8-M defined non-secure domain of CPU0.",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Disabled"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-9",
                            "name": "DFLT_DBGEN",
                            "description": "Controls invasive debugging of TrustZone for Arm8-M defined non-secure domain of CPU0.",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Disabled"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-10",
                            "name": "DFLT_SPNIDEN",
                            "description": "Controls non-Invasive debugging of TrustZone for Arm8-M defined secure domain of CPU0",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Disabled"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-11",
                            "name": "DFLT_SPIDEN",
                            "description": "Controls invasive debugging of TrustZone for Arm8-M defined secure domain of CPU0.",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Disabled"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-12",
                            "name": "DFLT_TAPEN",
                            "description": "Controls TAP (Test Access Point) controller used for structural integrity testing of silicon by NXP as part of Return Material Analysis (RMA)",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Disabled"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-13",
                            "name": "DFLT_CPU1NIDEN",
                            "description": "Controls non-Invasive debugging of CPU1.",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Disabled"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-14",
                            "name": "DFLT_CPU1DBGEN",
                            "description": "Controls invasive debugging of CPU1.",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Disabled"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-15",
                            "name": "DFLT_CPU2NIDEN",
                            "description": "Controls non-Invasive debugging of CPU2.",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Disabled"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-16",
                            "name": "DFLT_CPU2DBGEN",
                            "description": "Controls invasive debugging of CPU2.",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Disabled"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-17",
                            "name": "DFLT_ISPCMDEN",
                            "description": "Controls whether ISP boot flow DM-AP command (command code: 0x05) can be issued after authentication.",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Disabled"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-18",
                            "name": "DFLT_FACMDEN",
                            "description": "Controls whether DM-AP Set FA Mode command (command code: 0x06) can be issued after authentication",
                            "values": [
                                {
                                    "name": "DISABLED",
                                    "value": 0,
                                    "description": "Disabled"
                                },
                                {
                                    "name": "ENABLED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-19",
                            "name": "PINNED_NIDEN",
                            "description": "Controls non-Invasive debugging of TrustZone for Arm8-M defined non-secure domain of CPU0",
                            "values": [
                                {
                                    "name": "DAR_CC",
                                    "value": 0,
                                    "description": "Debug Authentication Response determines the state."
                                },
                                {
                                    "name": "FIXED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-20",
                            "name": "PINNED_DBGEN",
                            "description": "Controls invasive debugging of TrustZone for Arm8-M defined non-secure domain of CPU0",
                            "values": [
                                {
                                    "name": "DAR_CC",
                                    "value": 0,
                                    "description": "Debug Authentication Response determines the state."
                                },
                                {
                                    "name": "FIXED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-21",
                            "name": "PINNED_SPNIDEN",
                            "description": "Controls non-Invasive debugging of TrustZone for Arm8-M defined secure domain of CPU0",
                            "values": [
                                {
                                    "name": "DAR_CC",
                                    "value": 0,
                                    "description": "Debug Authentication Response determines the state."
                                },
                                {
                                    "name": "FIXED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-22",
                            "name": "PINNED_SPIDEN",
                            "description": "Controls invasive debugging of TrustZone for Arm8-M defined secure domain of CPU0",
                            "values": [
                                {
                                    "name": "DAR_CC",
                                    "value": 0,
                                    "description": "Debug Authentication Response determines the state."
                                },
                                {
                                    "name": "FIXED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-23",
                            "name": "PINNED_TAPEN",
                            "description": "Controls TAP (Test Access Point) controller used for structural integrity testing of silicon by NXP as part of Return Material Analysis (RMA)",
                            "values": [
                                {
                                    "name": "DAR_CC",
                                    "value": 0,
                                    "description": "Debug Authentication Response determines the state."
                                },
                                {
                                    "name": "FIXED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-24",
                            "name": "PINNED_CPU1NIDEN",
                            "description": "Controls non-Invasive debugging of CPU1",
                            "values": [
                                {
                                    "name": "DAR_CC",
                                    "value": 0,
                                    "description": "Debug Authentication Response determines the state."
                                },
                                {
                                    "name": "FIXED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-25",
                            "name": "PINNED_CPU1DBGEN",
                            "description": "Controls invasive debugging of CPU1.",
                            "values": [
                                {
                                    "name": "DAR_CC",
                                    "value": 0,
                                    "description": "Debug Authentication Response determines the state."
                                },
                                {
                                    "name": "FIXED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-26",
                            "name": "PINNED_CPU2NIDEN",
                            "description": "Controls non-Invasive debugging of CPU2.",
                            "values": [
                                {
                                    "name": "DAR_CC",
                                    "value": 0,
                                    "description": "Debug Authentication Response determines the state."
                                },
                                {
                                    "name": "FIXED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-27",
                            "name": "PINNED_CPU2DBGEN",
                            "description": "Controls invasive debugging of CPU2.",
                            "values": [
                                {
                                    "name": "DAR_CC",
                                    "value": 0,
                                    "description": "Debug Authentication Response determines the state."
                                },
                                {
                                    "name": "FIXED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-28",
                            "name": "PINNED_ISPCMDEN",
                            "description": "Controls whether ISP boot flow DM-AP command (command code: 0x05) can be issued after authentication.",
                            "values": [
                                {
                                    "name": "DAR_CC",
                                    "value": 0,
                                    "description": "Debug Authentication Response determines the state."
                                },
                                {
                                    "name": "FIXED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-29",
                            "name": "PINNED_FACMDEN",
                            "description": "Controls whether DM-AP Set FA Mode command (command code: 0x06) can be issued after authentication",
                            "values": [
                                {
                                    "name": "DAR_CC",
                                    "value": 0,
                                    "description": "Debug Authentication Response determines the state."
                                },
                                {
                                    "name": "FIXED",
                                    "value": 1,
                                    "description": "Enabled"
                                }
                            ]
                        },
                        {
                            "width": 1,
                            "id": "fuse33-bit-30",
                            "name": "FORCE_UUID_MATCH",
                            "description": "When set, debug authentication protocol only accepts Debug Credential certificates (DC) with matching UUID.",
                            "values": [
                                {
                                    "name": "NO_FORCE_UUID_MATCH",
                                    "value": 0,
                                    "description": "Accepts Debug Credential certificates (DC) with any UUID."
                                },
                                {
                                    "name": "FORCE_UUID_MATCH",
                                    "value": 1,
                                    "description": "Accepts Debug Credential certificates (DC) with matching UUID."
                                }
                            ]
                        },
                        {
                            "width": 1
                        }
                    ],
                    "default_value_int": "0x0"
                },
                {
                    "id": "fuse34",
                    "name": "DCFG_CC_SOCU_AP",
                    "description": "Anti-pole (inverse) value of Debug Configuration word (DCFG_CC_SOCU).  DCFG_CC_SOCU_AP should be programmed with the exact anti-pole (inverse value) value of DCFG_CC_SOCU. \nAny mismatch between DCFG_CC_SOCU and DCFG_CC_SOCU_AP is deemed as an attack and device is locked permanently.",
                    "index_int": "0x0022",
                    "shadow_reg_offset_int": "0x0088",
                    "individual_write_lock": "implicit",
                    "calculated": {
                        "method": "inverse",
                        "src_register_id": "fuse33"
                    },
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0040",
                        "read_lock_int": "0x0100",
                        "operation_lock_int": "0x0080"
                    }
                }
            ]
        },
        {
            "group": {
                "name": "Life Cycle Management",
                "description": "Life cycle management"
            },
            "registers": [
                {
                    "id": "fuse45",
                    "name": "LIFE_CYCLE_STATE",
                    "description": "Life cycle state of rw61x platform.",
                    "index_int": "0x002D",
                    "shadow_reg_offset_int": "0x00B4",
                    "default_value_int": "0x0303",
                    "individual_write_lock": "none",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0200",
                        "read_lock_int": "0x0800",
                        "operation_lock_int": "0x0400"
                    },
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 8,
                            "id": "fuse45-bits-0-7",
                            "name": "LCS",
                            "description": "Possible values of rw61x lifecycle states",
                            "values": [
                                {
                                    "name": "Blank",
                                    "value": 0,
                                    "description": "Initial state in NXP factory."
                                },
                                {
                                    "name": "Provisioned",
                                    "value": 1,
                                    "description": "NXP provisioned state."
                                },
                                {
                                    "name": "Develop",
                                    "value": 3,
                                    "description": "Initial customer development state after leaving NXP manufacturing."
                                },
                                {
                                    "name": "Develop2",
                                    "value": 7,
                                    "description": "Optional customer development state. Used for development of NS world code."
                                },
                                {
                                    "name": "In-Field",
                                    "value": 15,
                                    "description": "In-field application state for end-customer use."
                                },
                                {
                                    "name": "Field Return OEM",
                                    "value": 31,
                                    "description": "Field return state."
                                },
                                {
                                    "name": "Failure Analysis (FA)",
                                    "value": 63,
                                    "description": "NXP field return state (CQC)."
                                },
                                {
                                    "name": "In-Field Locked",
                                    "value": 207,
                                    "description": "Alternative in-field application state that disables debug capability and prevents use of field return/failure analysis states. The rest of the behavior of the device is same as the In-field state."
                                },
                                {
                                    "name": "Shredded",
                                    "value": 255,
                                    "description": "Bricked state to prevent device use."
                                }
                            ]
                        },
                        {
                            "width": 8,
                            "id": "fuse45-bits-8-15",
                            "name": "LCS_REDUNDANT",
                            "description": "Repeat values of lifecycle state due to a security",
                            "values": [
                                {
                                    "name": "Blank",
                                    "value": 0,
                                    "description": "Initial state in NXP factory."
                                },
                                {
                                    "name": "Provisioned",
                                    "value": 1,
                                    "description": "NXP provisioned state."
                                },
                                {
                                    "name": "Develop",
                                    "value": 3,
                                    "description": "Initial customer development state after leaving NXP manufacturing."
                                },
                                {
                                    "name": "Develop2",
                                    "value": 7,
                                    "description": "Optional customer development state. Used for development of NS world code."
                                },
                                {
                                    "name": "In-Field",
                                    "value": 15,
                                    "description": "In-field application state for end-customer use."
                                },
                                {
                                    "name": "Field Return OEM",
                                    "value": 31,
                                    "description": "Field return state."
                                },
                                {
                                    "name": "Failure Analysis (FA)",
                                    "value": 63,
                                    "description": "NXP field return state (CQC)."
                                },
                                {
                                    "name": "In-Field Locked",
                                    "value": 207,
                                    "description": "Alternative in-field application state that disables debug capability and prevents use of field return/failure analysis states. The rest of the behavior of the device is same as the In-field state."
                                },
                                {
                                    "name": "Shredded",
                                    "value": 255,
                                    "description": "Bricked state to prevent device use."
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "group": {
                "name": "UUID",
                "description": "UUID"
            },
            "registers": [
                {
                    "id": "fuse46",
                    "name": "UUID[31:0]",
                    "description": "Universally Unique Identifier 0",
                    "index_int": "0x002E",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse46-bits-0-31",
                            "name": "UUID[31:0]",
                            "description": "Universally Unique Identifier 0"
                        }
                    ]
                },
                {
                    "id": "fuse47",
                    "name": "UUID[63:32]",
                    "description": "Universally Unique Identifier 1",
                    "index_int": "0x002F",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse47-bits-0-31",
                            "name": "UUID[63:32]",
                            "description": "Universally Unique Identifier 1"
                        }
                    ]
                },
                {
                    "id": "fuse48",
                    "name": "UUID[95:64]",
                    "description": "Universally Unique Identifier 2",
                    "index_int": "0x0030",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse48-bits-0-31",
                            "name": "UUID[95:64]",
                            "description": "Universally Unique Identifier 2"
                        }
                    ]
                },
                {
                    "id": "fuse49",
                    "name": "UUID[127:96]",
                    "description": "Universally Unique Identifier 3",
                    "index_int": "0x0031",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse49-bits-0-31",
                            "name": "UUID[127:96]",
                            "description": "Universally Unique Identifier 3"
                        }
                    ]
                }
            ]
        },
        {
            "group": {
                "name": "Firmware Decryption Key",
                "description": "Firmware decryption key"
            },
            "registers": [
                {
                    "id": "fuse92",
                    "name": "CUST_SK_MK[31:0]",
                    "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption",
                    "index_int": "0x005C",
                    "shadow_reg_offset_int": "0x0170",
                    "access": "RO",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse92-bits-0-31",
                            "name": "CUST_SK_MK[31:0]",
                            "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption"
                        }
                    ]
                },
                {
                    "id": "fuse93",
                    "name": "CUST_SK_MK[63:32]",
                    "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption",
                    "index_int": "0x005D",
                    "shadow_reg_offset_int": "0x0174",
                    "access": "RO",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse93-bits-0-31",
                            "name": "CUST_SK_MK[63:32]",
                            "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption"
                        }
                    ]
                },
                {
                    "id": "fuse94",
                    "name": "CUST_SK_MK[95:64]",
                    "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption",
                    "index_int": "0x005E",
                    "shadow_reg_offset_int": "0x0178",
                    "access": "RO",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse94-bits-0-31",
                            "name": "CUST_SK_MK[95:64]",
                            "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption"
                        }
                    ]
                },
                {
                    "id": "fuse95",
                    "name": "CUST_SK_MK[127:96]",
                    "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption",
                    "index_int": "0x005F",
                    "shadow_reg_offset_int": "0x017C",
                    "access": "RO",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse95-bits-0-31",
                            "name": "CUST_SK_MK[127:96]",
                            "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption"
                        }
                    ]
                },
                {
                    "id": "fuse96",
                    "name": "CUST_SK_MK[159:128]",
                    "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption",
                    "index_int": "0x0060",
                    "shadow_reg_offset_int": "0x0180",
                    "access": "RO",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse96-bits-0-31",
                            "name": "CUST_SK_MK[159:128]",
                            "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption"
                        }
                    ]
                },
                {
                    "id": "fuse97",
                    "name": "CUST_SK_MK[191:160]",
                    "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption",
                    "index_int": "0x0061",
                    "shadow_reg_offset_int": "0x0184",
                    "access": "RO",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse97-bits-0-31",
                            "name": "CUST_SK_MK[191:160]",
                            "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption"
                        }
                    ]
                },
                {
                    "id": "fuse98",
                    "name": "CUST_SK_MK[223:192]",
                    "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption",
                    "index_int": "0x0062",
                    "shadow_reg_offset_int": "0x0188",
                    "access": "RO",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse98-bits-0-31",
                            "name": "CUST_SK_MK[223:192]",
                            "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption"
                        }
                    ]
                },
                {
                    "id": "fuse99",
                    "name": "CUST_SK_MK[255:224]",
                    "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption",
                    "index_int": "0x0063",
                    "shadow_reg_offset_int": "0x018C",
                    "access": "RO",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse99-bits-0-31",
                            "name": "CUST_SK_MK[255:224]",
                            "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption"
                        }
                    ]
                },
                {
                    "id": "fuse100",
                    "name": "CUST_SK_MK[287:256]",
                    "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption",
                    "index_int": "0x0064",
                    "shadow_reg_offset_int": "0x0190",
                    "access": "RO",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse100-bits-0-31",
                            "name": "CUST_SK_MK[287:256]",
                            "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption"
                        }
                    ]
                },
                {
                    "id": "fuse101",
                    "name": "CUST_SK_MK[319:288]",
                    "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption",
                    "index_int": "0x0065",
                    "shadow_reg_offset_int": "0x0194",
                    "access": "RO",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse101-bits-0-31",
                            "name": "CUST_SK_MK[319:288]",
                            "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption"
                        }
                    ]
                },
                {
                    "id": "fuse102",
                    "name": "CUST_SK_MK[351:320]",
                    "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption",
                    "index_int": "0x0066",
                    "shadow_reg_offset_int": "0x0198",
                    "access": "RO",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse102-bits-0-31",
                            "name": "CUST_SK_MK[351:320]",
                            "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption"
                        }
                    ]
                },
                {
                    "id": "fuse103",
                    "name": "CUST_SK_MK[383:352]",
                    "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption",
                    "index_int": "0x0067",
                    "shadow_reg_offset_int": "0x019C",
                    "access": "RO",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse103-bits-0-31",
                            "name": "CUST_SK_MK[383:352]",
                            "description": "FW encryption and decryption key wrapped by RFC3394, used for FW decryption"
                        }
                    ]
                }
            ]
        },
        {
            "group": {
                "name": "ROTKH",
                "description": "ROTKH"
            },
            "registers": [
                {
                    "id": "fuse104",
                    "name": "RKTH[383:352]",
                    "description": "SHA256 hash digest of hash of four Root Of Trust Keys",
                    "index_int": "0x0068",
                    "shadow_reg_offset_int": "0x01A0",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse104-bits-0-31",
                            "name": "RKTH[383:352]",
                            "description": "SHA256 hash digest of hash of four Root Of Trust Keys"
                        }
                    ]
                },
                {
                    "id": "fuse105",
                    "name": "RKTH[351:320]",
                    "description": "SHA256 hash digest of hash of four Root Of Trust Keys",
                    "index_int": "0x0069",
                    "shadow_reg_offset_int": "0x01A4",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse105-bits-0-31",
                            "name": "RKTH[351:320]",
                            "description": "SHA256 hash digest of hash of four Root Of Trust Keys"
                        }
                    ]
                },
                {
                    "id": "fuse106",
                    "name": "RKTH[319:288]",
                    "description": "SHA256 hash digest of hash of four Root Of Trust Keys",
                    "index_int": "0x006A",
                    "shadow_reg_offset_int": "0x01A8",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse106-bits-0-31",
                            "name": "RKTH[319:288]",
                            "description": "SHA256 hash digest of hash of four Root Of Trust Keys"
                        }
                    ]
                },
                {
                    "id": "fuse107",
                    "name": "RKTH[287:256]",
                    "description": "SHA256 hash digest of hash of four Root Of Trust Keys",
                    "index_int": "0x006B",
                    "shadow_reg_offset_int": "0x01AC",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse107-bits-0-31",
                            "name": "RKTH[287:256]",
                            "description": "SHA256 hash digest of hash of four Root Of Trust Keys"
                        }
                    ]
                },
                {
                    "id": "fuse108",
                    "name": "RKTH[255:224]",
                    "description": "SHA256 hash digest of hash of four Root Of Trust Keys",
                    "index_int": "0x006C",
                    "shadow_reg_offset_int": "0x01B0",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse108-bits-0-31",
                            "name": "RKTH[255:224]",
                            "description": "SHA256 hash digest of hash of four Root Of Trust Keys"
                        }
                    ]
                },
                {
                    "id": "fuse109",
                    "name": "RKTH[223:192]",
                    "description": "SHA256 hash digest of hash of four Root Of Trust Keys",
                    "index_int": "0x006D",
                    "shadow_reg_offset_int": "0x01B4",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse109-bits-0-31",
                            "name": "RKTH[223:192]",
                            "description": "SHA256 hash digest of hash of four Root Of Trust Keys"
                        }
                    ]
                },
                {
                    "id": "fuse110",
                    "name": "RKTH[191:160]",
                    "description": "SHA256 hash digest of hash of four Root Of Trust Keys",
                    "index_int": "0x006E",
                    "shadow_reg_offset_int": "0x01B8",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse110-bits-0-31",
                            "name": "RKTH[191:160]",
                            "description": "SHA256 hash digest of hash of four Root Of Trust Keys"
                        }
                    ]
                },
                {
                    "id": "fuse111",
                    "name": "RKTH[159:128]",
                    "description": "SHA256 hash digest of hash of four Root Of Trust Keys",
                    "index_int": "0x006F",
                    "shadow_reg_offset_int": "0x01BC",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse111-bits-0-31",
                            "name": "RKTH[159:128]",
                            "description": "SHA256 hash digest of hash of four Root Of Trust Keys"
                        }
                    ]
                },
                {
                    "id": "fuse112",
                    "name": "RKTH[127:96]",
                    "description": "SHA256 hash digest of hash of four Root Of Trust Keys",
                    "index_int": "0x0070",
                    "shadow_reg_offset_int": "0x01C0",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse112-bits-0-31",
                            "name": "RKTH[127:96]",
                            "description": "SHA256 hash digest of hash of four Root Of Trust Keys"
                        }
                    ]
                },
                {
                    "id": "fuse113",
                    "name": "RKTH[95:64]",
                    "description": "SHA256 hash digest of hash of four Root Of Trust Keys",
                    "index_int": "0x0071",
                    "shadow_reg_offset_int": "0x01C4",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse113-bits-0-31",
                            "name": "RKTH[95:64]",
                            "description": "SHA256 hash digest of hash of four Root Of Trust Keys"
                        }
                    ]
                },
                {
                    "id": "fuse114",
                    "name": "RKTH[63:32]",
                    "description": "SHA256 hash digest of hash of four Root Of Trust Keys",
                    "index_int": "0x0072",
                    "shadow_reg_offset_int": "0x01C8",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse114-bits-0-31",
                            "name": "RKTH[63:32]",
                            "description": "SHA256 hash digest of hash of four Root Of Trust Keys"
                        }
                    ]
                },
                {
                    "id": "fuse115",
                    "name": "RKTH[31:0]",
                    "description": "SHA256 hash digest of hash of four Root Of Trust Keys",
                    "index_int": "0x0073",
                    "shadow_reg_offset_int": "0x01CC",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x0001",
                        "read_lock_int": "0x0004",
                        "operation_lock_int": "0x0002"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse115-bits-0-31",
                            "name": "RKTH[31:0]",
                            "description": "SHA256 hash digest of hash of four Root Of Trust Keys"
                        }
                    ]
                }
            ]
        },
        {
            "group": {
                "name": "User Space ECC",
                "description": "User Space ECC"
            },
            "registers": [
                {
                    "id": "fuse156",
                    "name": "USER_ECC_0",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x009C",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse156-bits-0-31",
                            "name": "USER_ECC_0",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse157",
                    "name": "USER_ECC_1",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x009D",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse157-bits-0-31",
                            "name": "USER_ECC_1",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse158",
                    "name": "USER_ECC_2",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x009E",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse158-bits-0-31",
                            "name": "USER_ECC_2",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse159",
                    "name": "USER_ECC_3",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x009F",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse159-bits-0-31",
                            "name": "USER_ECC_3",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse160",
                    "name": "USER_ECC_4",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x00A0",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse160-bits-0-31",
                            "name": "USER_ECC_4",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse161",
                    "name": "USER_ECC_5",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x00A1",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse161-bits-0-31",
                            "name": "USER_ECC_5",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse162",
                    "name": "USER_ECC_6",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x00A2",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse162-bits-0-31",
                            "name": "USER_ECC_6",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse163",
                    "name": "USER_ECC_7",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x00A3",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse163-bits-0-31",
                            "name": "USER_ECC_7",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse315",
                    "name": "USER_ECC_8",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x013B",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse315-bits-0-31",
                            "name": "USER_ECC_8",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse316",
                    "name": "USER_ECC_9",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x013C",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse316-bits-0-31",
                            "name": "USER_ECC_9",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse317",
                    "name": "USER_ECC_10",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x013D",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse317-bits-0-31",
                            "name": "USER_ECC_10",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse318",
                    "name": "USER_ECC_11",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x013E",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse318-bits-0-31",
                            "name": "USER_ECC_11",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse319",
                    "name": "USER_ECC_12",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x013F",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse319-bits-0-31",
                            "name": "USER_ECC_12",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse320",
                    "name": "USER_ECC_13",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0140",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse320-bits-0-31",
                            "name": "USER_ECC_13",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse321",
                    "name": "USER_ECC_14",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0141",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse321-bits-0-31",
                            "name": "USER_ECC_14",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse322",
                    "name": "USER_ECC_15",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0142",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse322-bits-0-31",
                            "name": "USER_ECC_15",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse323",
                    "name": "USER_ECC_16",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0143",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse323-bits-0-31",
                            "name": "USER_ECC_16",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse324",
                    "name": "USER_ECC_17",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0144",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse324-bits-0-31",
                            "name": "USER_ECC_17",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse325",
                    "name": "USER_ECC_18",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0145",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse325-bits-0-31",
                            "name": "USER_ECC_18",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse326",
                    "name": "USER_ECC_19",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0146",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse326-bits-0-31",
                            "name": "USER_ECC_19",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse327",
                    "name": "USER_ECC_20",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0147",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse327-bits-0-31",
                            "name": "USER_ECC_20",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse328",
                    "name": "USER_ECC_21",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0148",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse328-bits-0-31",
                            "name": "USER_ECC_21",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse329",
                    "name": "USER_ECC_22",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0149",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse329-bits-0-31",
                            "name": "USER_ECC_22",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse330",
                    "name": "USER_ECC_23",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x014A",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse330-bits-0-31",
                            "name": "USER_ECC_23",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse331",
                    "name": "USER_ECC_24",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x014B",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse331-bits-0-31",
                            "name": "USER_ECC_24",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse332",
                    "name": "USER_ECC_25",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x014C",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse332-bits-0-31",
                            "name": "USER_ECC_25",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse333",
                    "name": "USER_ECC_26",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x014D",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse333-bits-0-31",
                            "name": "USER_ECC_26",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse334",
                    "name": "USER_ECC_27",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x014E",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse334-bits-0-31",
                            "name": "USER_ECC_27",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse335",
                    "name": "USER_ECC_28",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x014F",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse335-bits-0-31",
                            "name": "USER_ECC_28",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse336",
                    "name": "USER_ECC_29",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0150",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse336-bits-0-31",
                            "name": "USER_ECC_29",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse337",
                    "name": "USER_ECC_30",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0151",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse337-bits-0-31",
                            "name": "USER_ECC_30",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse338",
                    "name": "USER_ECC_31",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0152",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse338-bits-0-31",
                            "name": "USER_ECC_31",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse339",
                    "name": "USER_ECC_32",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0153",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse339-bits-0-31",
                            "name": "USER_ECC_32",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse340",
                    "name": "USER_ECC_33",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0154",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse340-bits-0-31",
                            "name": "USER_ECC_33",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse341",
                    "name": "USER_ECC_34",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0155",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse341-bits-0-31",
                            "name": "USER_ECC_34",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse342",
                    "name": "USER_ECC_35",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0156",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse342-bits-0-31",
                            "name": "USER_ECC_35",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse343",
                    "name": "USER_ECC_36",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0157",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse343-bits-0-31",
                            "name": "USER_ECC_36",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse344",
                    "name": "USER_ECC_37",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0158",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse344-bits-0-31",
                            "name": "USER_ECC_37",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse345",
                    "name": "USER_ECC_38",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0159",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse345-bits-0-31",
                            "name": "USER_ECC_38",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse346",
                    "name": "USER_ECC_39",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x015A",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse346-bits-0-31",
                            "name": "USER_ECC_39",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse347",
                    "name": "USER_ECC_40",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x015B",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse347-bits-0-31",
                            "name": "USER_ECC_40",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse348",
                    "name": "USER_ECC_41",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x015C",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse348-bits-0-31",
                            "name": "USER_ECC_41",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse349",
                    "name": "USER_ECC_42",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x015D",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse349-bits-0-31",
                            "name": "USER_ECC_42",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse350",
                    "name": "USER_ECC_43",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x015E",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse350-bits-0-31",
                            "name": "USER_ECC_43",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse351",
                    "name": "USER_ECC_44",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x015F",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse351-bits-0-31",
                            "name": "USER_ECC_44",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse352",
                    "name": "USER_ECC_45",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0160",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse352-bits-0-31",
                            "name": "USER_ECC_45",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse353",
                    "name": "USER_ECC_46",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0161",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse353-bits-0-31",
                            "name": "USER_ECC_46",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse354",
                    "name": "USER_ECC_47",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0162",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse354-bits-0-31",
                            "name": "USER_ECC_47",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse355",
                    "name": "USER_ECC_48",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0163",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse355-bits-0-31",
                            "name": "USER_ECC_48",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse356",
                    "name": "USER_ECC_49",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0164",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse356-bits-0-31",
                            "name": "USER_ECC_49",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse357",
                    "name": "USER_ECC_50",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0165",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse357-bits-0-31",
                            "name": "USER_ECC_50",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                },
                {
                    "id": "fuse358",
                    "name": "USER_ECC_51",
                    "description": "Customer programmable ECC fuse word",
                    "index_int": "0x0166",
                    "individual_write_lock": "implicit",
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse358-bits-0-31",
                            "name": "USER_ECC_51",
                            "description": "Customer programmable ECC fuse word"
                        }
                    ]
                }
            ]
        },
        {
            "group": {
                "name": "CRCx",
                "description": "CRCx"
            },
            "registers": [
                {
                    "id": "fuse360",
                    "name": "CRC0",
                    "description": "Reserved",
                    "index_int": "0x0168",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse2",
                        "write_lock_int": "0x0200",
                        "read_lock_int": "0x0800",
                        "operation_lock_int": "0x0400"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse360-bits-0-31",
                            "name": "CRC0",
                            "description": "Reserved"
                        }
                    ]
                },
                {
                    "id": "fuse361",
                    "name": "CRC1",
                    "description": "CRC32 of BOOT_CFG0-6 configuration data, fuse words 15 to 21.",
                    "index_int": "0x0169",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse2",
                        "write_lock_int": "0x0200",
                        "read_lock_int": "0x0800",
                        "operation_lock_int": "0x0400"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse361-bits-0-31",
                            "name": "CRC1",
                            "description": "CRC32 of BOOT_CFG0-6 configuration data, fuse words 15 to 21."
                        }
                    ]
                },
                {
                    "id": "fuse362",
                    "name": "CRC2",
                    "description": "CRC32 of LOCK configuration data, fuse words 0 to 2.",
                    "index_int": "0x016A",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse2",
                        "write_lock_int": "0x0200",
                        "read_lock_int": "0x0800",
                        "operation_lock_int": "0x0400"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse362-bits-0-31",
                            "name": "CRC2",
                            "description": "CRC32 of LOCK configuration data, fuse words 0 to 2."
                        }
                    ]
                },
                {
                    "id": "fuse363",
                    "name": "CRC3",
                    "description": "Reserved",
                    "index_int": "0x016B",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse2",
                        "write_lock_int": "0x0200",
                        "read_lock_int": "0x0800",
                        "operation_lock_int": "0x0400"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse363-bits-0-31",
                            "name": "CRC3",
                            "description": "Reserved"
                        }
                    ]
                },
                {
                    "id": "fuse364",
                    "name": "CRC4",
                    "description": "Reserved",
                    "index_int": "0x016C",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x1000",
                        "read_lock_int": "0x4000",
                        "operation_lock_int": "0x2000"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse364-bits-0-31",
                            "name": "CRC4",
                            "description": "Reserved"
                        }
                    ]
                },
                {
                    "id": "fuse365",
                    "name": "CRC5",
                    "description": "Reserved",
                    "index_int": "0x016D",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x1000",
                        "read_lock_int": "0x4000",
                        "operation_lock_int": "0x2000"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse365-bits-0-31",
                            "name": "CRC5",
                            "description": "Reserved"
                        }
                    ]
                },
                {
                    "id": "fuse366",
                    "name": "CRC6",
                    "description": "CRC32 of  OEM programmed keys, fuse words 92 to 115.",
                    "index_int": "0x016E",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x1000",
                        "read_lock_int": "0x4000",
                        "operation_lock_int": "0x2000"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse366-bits-0-31",
                            "name": "CRC6",
                            "description": "CRC32 of  OEM programmed keys, fuse words 92 to 115."
                        }
                    ]
                },
                {
                    "id": "fuse367",
                    "name": "CRC7",
                    "description": "Reserved",
                    "index_int": "0x016F",
                    "individual_write_lock": "implicit",
                    "lock": {
                        "register_id": "fuse1",
                        "write_lock_int": "0x1000",
                        "read_lock_int": "0x4000",
                        "operation_lock_int": "0x2000"
                    },
                    "bitfields": [
                        {
                            "width": 32,
                            "id": "fuse367-bits-0-31",
                            "name": "CRC7",
                            "description": "Reserved"
                        }
                    ]
                }
            ]
        },
        {
            "group": {
                "name": "TZ_NSW_Version",
                "description": "Non-Secure firmware version counter"
            },
            "registers": [
                {
                    "id": "fuse368",
                    "name": "NT_FW_VER0",
                    "description": "Non-Secure TrustZone Version. The version is represented by number of set fuse bits.",
                    "index_int": "0x0170",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse368-bits-0-15",
                            "name": "NT_FW_VER",
                            "description": "Non-Secure TrustZone firmware version counter, bits 0..15"
                        }
                    ]
                },
                {
                    "id": "fuse369",
                    "name": "NT_FW_VER1",
                    "description": "Non-Secure TrustZone Version. The version is represented by number of set fuse bits.",
                    "index_int": "0x0171",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse369-bits-0-15",
                            "name": "NT_FW_VER",
                            "description": "Non-Secure TrustZone firmware version counter, bits 16..31"
                        }
                    ]
                },
                {
                    "id": "fuse370",
                    "name": "NT_FW_VER2",
                    "description": "Non-Secure TrustZone Version. The version is represented by number of set fuse bits.",
                    "index_int": "0x0172",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse370-bits-0-15",
                            "name": "NT_FW_VER",
                            "description": "Non-Secure TrustZone firmware version counter, bits 32..47"
                        }
                    ]
                },
                {
                    "id": "fuse371",
                    "name": "NT_FW_VER3",
                    "description": "Non-Secure TrustZone Version. The version is represented by number of set fuse bits.",
                    "index_int": "0x0173",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse371-bits-0-15",
                            "name": "NT_FW_VER",
                            "description": "Non-Secure TrustZone firmware version counter, bits 48..63"
                        }
                    ]
                },
                {
                    "id": "fuse372",
                    "name": "NT_FW_VER4",
                    "description": "Non-Secure TrustZone Version. The version is represented by number of set fuse bits.",
                    "index_int": "0x0174",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse372-bits-0-15",
                            "name": "NT_FW_VER",
                            "description": "Non-Secure TrustZone firmware version counter, bits 64..79"
                        }
                    ]
                },
                {
                    "id": "fuse373",
                    "name": "NT_FW_VER5",
                    "description": "Non-Secure TrustZone Version. The version is represented by number of set fuse bits.",
                    "index_int": "0x0175",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse373-bits-0-15",
                            "name": "NT_FW_VER",
                            "description": "Non-Secure TrustZone firmware version counter, bits 80..95"
                        }
                    ]
                },
                {
                    "id": "fuse374",
                    "name": "NT_FW_VER6",
                    "description": "Non-Secure TrustZone Version. The version is represented by number of set fuse bits.",
                    "index_int": "0x0176",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse374-bits-0-15",
                            "name": "NT_FW_VER",
                            "description": "Non-Secure TrustZone firmware version counter, bits 96..111"
                        }
                    ]
                },
                {
                    "id": "fuse375",
                    "name": "NT_FW_VER7",
                    "description": "Non-Secure TrustZone Version. The version is represented by number of set fuse bits.",
                    "index_int": "0x0177",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse375-bits-0-15",
                            "name": "NT_FW_VER",
                            "description": "Non-Secure TrustZone firmware version counter, bits 112..127"
                        }
                    ]
                },
                {
                    "id": "fuse376",
                    "name": "NT_FW_VER8",
                    "description": "Non-Secure TrustZone Version. The version is represented by number of set fuse bits.",
                    "index_int": "0x0178",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse376-bits-0-15",
                            "name": "NT_FW_VER",
                            "description": "Non-Secure TrustZone firmware version counter, bits 128..143"
                        }
                    ]
                },
                {
                    "id": "fuse377",
                    "name": "NT_FW_VER9",
                    "description": "Non-Secure TrustZone Version. The version is represented by number of set fuse bits.",
                    "index_int": "0x0179",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse377-bits-0-15",
                            "name": "NT_FW_VER",
                            "description": "Non-Secure TrustZone firmware version counter, bits 144..159"
                        }
                    ]
                },
                {
                    "id": "fuse378",
                    "name": "NT_FW_VER10",
                    "description": "Non-Secure TrustZone Version. The version is represented by number of set fuse bits.",
                    "index_int": "0x017A",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse378-bits-0-15",
                            "name": "NT_FW_VER",
                            "description": "Non-Secure TrustZone firmware version counter, bits 160..175"
                        }
                    ]
                },
                {
                    "id": "fuse379",
                    "name": "NT_FW_VER11",
                    "description": "Non-Secure TrustZone Version. The version is represented by number of set fuse bits.",
                    "index_int": "0x017B",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse379-bits-0-15",
                            "name": "NT_FW_VER",
                            "description": "Non-Secure TrustZone firmware version counter, bits 176..191"
                        }
                    ]
                },
                {
                    "id": "fuse380",
                    "name": "NT_FW_VER12",
                    "description": "Non-Secure TrustZone Version. The version is represented by number of set fuse bits.",
                    "index_int": "0x017C",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse380-bits-0-15",
                            "name": "NT_FW_VER",
                            "description": "Non-Secure TrustZone firmware version counter, bits 192..207"
                        }
                    ]
                },
                {
                    "id": "fuse381",
                    "name": "NT_FW_VER13",
                    "description": "Non-Secure TrustZone Version. The version is represented by number of set fuse bits.",
                    "index_int": "0x017D",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse381-bits-0-15",
                            "name": "NT_FW_VER",
                            "description": "Non-Secure TrustZone firmware version counter, bits 208..223"
                        }
                    ]
                },
                {
                    "id": "fuse382",
                    "name": "NT_FW_VER14",
                    "description": "Non-Secure TrustZone Version. The version is represented by number of set fuse bits.",
                    "index_int": "0x017E",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse382-bits-0-15",
                            "name": "NT_FW_VER",
                            "description": "Non-Secure TrustZone firmware version counter, bits 224..239"
                        }
                    ]
                },
                {
                    "id": "fuse383",
                    "name": "NT_FW_VER15",
                    "description": "Non-Secure TrustZone Version. The version is represented by number of set fuse bits.",
                    "index_int": "0x017F",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse383-bits-0-15",
                            "name": "NT_FW_VER",
                            "description": "Non-Secure TrustZone firmware version counter, bits 240..255"
                        }
                    ]
                }
            ]
        },
        {
            "group": {
                "name": "TZ_SW_Version",
                "description": "Secure firmware version counter"
            },
            "registers": [
                {
                    "id": "fuse384",
                    "name": "TZ_FW_VER0",
                    "description": "Secure TrustZone Version. The version is represented by number of set fuse bits.",
                    "index_int": "0x0180",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse384-bits-0-15",
                            "name": "TZ_FW_VER",
                            "description": "Secure TrustZone firmware version counter, bits 0..15"
                        }
                    ]
                },
                {
                    "id": "fuse385",
                    "name": "TZ_FW_VER1",
                    "description": "Secure TrustZone Version. The version is represented by number of set fuse bits.",
                    "index_int": "0x0181",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse385-bits-0-15",
                            "name": "TZ_FW_VER",
                            "description": "Secure TrustZone firmware version counter, bits 16..31"
                        }
                    ]
                },
                {
                    "id": "fuse386",
                    "name": "TZ_FW_VER2",
                    "description": "Secure TrustZone Version. The version is represented by number of set fuse bits.",
                    "index_int": "0x0182",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse386-bits-0-15",
                            "name": "TZ_FW_VER",
                            "description": "Secure TrustZone firmware version counter, bits 32.47"
                        }
                    ]
                },
                {
                    "id": "fuse387",
                    "name": "TZ_FW_VER3",
                    "description": "Secure TrustZone Version. The version is represented by number of set fuse bits.",
                    "index_int": "0x0183",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse387-bits-0-15",
                            "name": "TZ_FW_VER",
                            "description": "Secure TrustZone firmware version counter, bits 48..63"
                        }
                    ]
                }
            ]
        },
        {
            "group": {
                "name": "User Space",
                "description": "User Space"
            },
            "registers": [
                {
                    "id": "fuse400",
                    "name": "USER_RED_0",
                    "description": "Customer Programmable Redundant Fuse Word",
                    "index_int": "0x0190",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse400-bits-0-15",
                            "name": "User",
                            "description": "Customer programmable fuse word 0"
                        }
                    ]
                },
                {
                    "id": "fuse401",
                    "name": "USER_RED_1",
                    "description": "Customer Programmable Redundant Fuse Word",
                    "index_int": "0x0191",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse401-bits-0-15",
                            "name": "User",
                            "description": "Customer programmable fuse word 1"
                        }
                    ]
                },
                {
                    "id": "fuse402",
                    "name": "USER_RED_2",
                    "description": "Customer Programmable Redundant Fuse Word",
                    "index_int": "0x0192",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse402-bits-0-15",
                            "name": "User",
                            "description": "Customer programmable fuse word 2"
                        }
                    ]
                },
                {
                    "id": "fuse403",
                    "name": "USER_RED_3",
                    "description": "Customer Programmable Redundant Fuse Word",
                    "index_int": "0x0193",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse403-bits-0-15",
                            "name": "User",
                            "description": "Customer programmable fuse word 3"
                        }
                    ]
                },
                {
                    "id": "fuse408",
                    "name": "USER_RED_4",
                    "description": "Customer Programmable Redundant Fuse Word",
                    "index_int": "0x0198",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse408-bits-0-15",
                            "name": "User",
                            "description": "Customer programmable fuse word 4"
                        }
                    ]
                },
                {
                    "id": "fuse409",
                    "name": "USER_RED_5",
                    "description": "Customer Programmable Redundant Fuse Word",
                    "index_int": "0x0199",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse409-bits-0-15",
                            "name": "User",
                            "description": "Customer programmable fuse word 5"
                        }
                    ]
                },
                {
                    "id": "fuse410",
                    "name": "USER_RED_6",
                    "description": "Customer Programmable Redundant Fuse Word",
                    "index_int": "0x019A",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse410-bits-0-15",
                            "name": "User",
                            "description": "Customer programmable fuse word 6"
                        }
                    ]
                },
                {
                    "id": "fuse411",
                    "name": "USER_RED_7",
                    "description": "Customer Programmable Redundant Fuse Word",
                    "index_int": "0x019B",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse411-bits-0-15",
                            "name": "User",
                            "description": "Customer programmable fuse word 7"
                        }
                    ]
                },
                {
                    "id": "fuse412",
                    "name": "USER_RED_8",
                    "description": "Customer Programmable Redundant Fuse Word",
                    "index_int": "0x019C",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse412-bits-0-15",
                            "name": "User",
                            "description": "Customer programmable fuse word 8"
                        }
                    ]
                },
                {
                    "id": "fuse413",
                    "name": "USER_RED_9",
                    "description": "Customer Programmable Redundant Fuse Word",
                    "index_int": "0x019D",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse413-bits-0-15",
                            "name": "User",
                            "description": "Customer programmable fuse word 9"
                        }
                    ]
                },
                {
                    "id": "fuse414",
                    "name": "USER_RED_10",
                    "description": "Customer Programmable Redundant Fuse Word",
                    "index_int": "0x019E",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse414-bits-0-15",
                            "name": "User",
                            "description": "Customer programmable fuse word 10"
                        }
                    ]
                },
                {
                    "id": "fuse415",
                    "name": "USER_RED_11",
                    "description": "Customer Programmable Redundant Fuse Word",
                    "index_int": "0x019F",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse415-bits-0-15",
                            "name": "User",
                            "description": "Customer programmable fuse word 11"
                        }
                    ]
                },
                {
                    "id": "fuse416",
                    "name": "USER_RED_12",
                    "description": "Customer Programmable Redundant Fuse Word",
                    "index_int": "0x01A0",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse416-bits-0-15",
                            "name": "User",
                            "description": "Customer programmable fuse word 12"
                        }
                    ]
                },
                {
                    "id": "fuse417",
                    "name": "USER_RED_13",
                    "description": "Customer Programmable Redundant Fuse Word",
                    "index_int": "0x01A1",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse417-bits-0-15",
                            "name": "User",
                            "description": "Customer programmable fuse word 13"
                        }
                    ]
                },
                {
                    "id": "fuse418",
                    "name": "USER_RED_14",
                    "description": "Customer Programmable Redundant Fuse Word",
                    "index_int": "0x01A2",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse418-bits-0-15",
                            "name": "User",
                            "description": "Customer programmable fuse word 14"
                        }
                    ]
                },
                {
                    "id": "fuse419",
                    "name": "USER_RED_15",
                    "description": "Customer Programmable Redundant Fuse Word",
                    "index_int": "0x01A3",
                    "individual_write_lock": "none",
                    "reg_width": 16,
                    "bitfields": [
                        {
                            "width": 16,
                            "id": "fuse419-bits-0-15",
                            "name": "User",
                            "description": "Customer programmable fuse word 15"
                        }
                    ]
                }
            ]
        }
    ]
}
