<?xml version="1.0"?>
<regs:peripheral xmlns:regs="http://swtools.freescale.net/XSD/registers/5.0/regsPeripheral.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://swtools.freescale.net/XSD/registers/5.0/regsPeripheral.xsd http://swtools.freescale.net/XSD/registers/5.0/regsPeripheral.xsd">
  <register offset="0" width="32" name="BOOT_CFG" description="Boot Configuration">
    <alias type="CMSIS" value="CMPA.BOOT_CFG"/>
    <bit_field offset="0" width="3" name="DEFAULT_BOOT_SOURCE" access="RO" reset_value="0" description="Default Boot Source">
      <alias type="CMSIS" value="FLASH_CMPA_BOOT_CFG_DEFAULT_BOOT_SOURCE(x)"/>
      <bit_field_value name="BOOT_CFG_DEFAULT_BOOT_SOURCE_ISP_PIN" value="0b000" description="ISP pin source"/>
      <bit_field_value name="BOOT_CFG_DEFAULT_BOOT_SOURCE_FLEXSPI_FLASH" value="0b001" description="FlexSPI flash"/>
      <bit_field_value name="BOOT_CFG_DEFAULT_BOOT_SOURCE_SERIAL_ISP_BOOT" value="0b010" description="Serial ISP boot"/>
      <bit_field_value name="BOOT_CFG_DEFAULT_BOOT_SOURCE_INTERNAL_FLASH" value="0b011" description="Internal Flash"/>
      <bit_field_value name="BOOT_CFG_DEFAULT_BOOT_SOURCE_AUTO_BOOT" value="0b100" description="Auto boot similar to ISP"/>
      <bit_field_value name="BOOT_CFG_DEFAULT_BOOT_SOURCE_RESERVED_0" value="0b101" description="Reserved."/>
      <bit_field_value name="BOOT_CFG_DEFAULT_BOOT_SOURCE_RESERVED_1" value="0b110" description="Reserved."/>
      <bit_field_value name="BOOT_CFG_DEFAULT_BOOT_SOURCE_RESERVED_2" value="0b111" description="Reserved."/>
    </bit_field>
    <reserved_bit_field offset="3" width="1" reset_value="0"/>
    <bit_field offset="4" width="3" name="DEFAULT_ISP_MODE" access="RO" reset_value="0" description="Default ISP mode">
      <alias type="CMSIS" value="FLASH_CMPA_BOOT_CFG_DEFAULT_ISP_MODE(x)"/>
      <bit_field_value name="BOOT_CFG_DEFAULT_ISP_MODE_AUTO_ISP" value="0b000" description="Auto ISP"/>
      <bit_field_value name="BOOT_CFG_DEFAULT_ISP_MODE_USB_HID_MSC" value="0b001" description="USB HID MSC"/>
      <bit_field_value name="BOOT_CFG_DEFAULT_ISP_MODE_UART_ISP" value="0b010" description="UART ISP"/>
      <bit_field_value name="BOOT_CFG_DEFAULT_ISP_MODE_SPI_ISP" value="0b011" description="SPI Slave ISP"/>
      <bit_field_value name="BOOT_CFG_DEFAULT_ISP_MODE_I2C_ISP" value="0b100" description="I2C Slave ISP"/>
      <bit_field_value name="BOOT_CFG_DEFAULT_ISP_MODE_CAN_ISP" value="0b101" description="CAN ISP"/>
      <bit_field_value name="BOOT_CFG_DEFAULT_ISP_MODE_RESERVED" value="0b110" description="Reserved."/>
      <bit_field_value name="BOOT_CFG_DEFAULT_ISP_MODE_DISABLE_ISP_FALL_THRU" value="0b111" description="Disable ISP fall through"/>
    </bit_field>
    <bit_field offset="7" width="2" name="BOOT_SPEED" access="RO" reset_value="0" description="Boot Speed Core Clock">
      <alias type="CMSIS" value="FLASH_CMPA_BOOT_CFG_BOOT_SPEED(x)"/>
      <bit_field_value name="BOOT_CFG_BOOT_SPEED_SYS_SPD_CODE" value="0b00" description="Defined by NMPA[SYSTEM_SPEED_CODE]"/>
      <bit_field_value name="BOOT_CFG_BOOT_SPEED_HHZ48_FRO" value="0b01" description="48MHz FRO"/>
      <bit_field_value name="BOOT_CFG_BOOT_SPEED_MHZ96_FRO" value="0b10" description="96MHz FRO"/>
      <bit_field_value name="BOOT_CFG_BOOT_SPEED_MHZ150_PLL" value="0b11" description="150MHz PLL"/>
    </bit_field>
    <reserved_bit_field offset="9" width="10" reset_value="0"/>
    <bit_field offset="19" width="2" name="ITRC_ZEROIZE" access="RO" reset_value="0" description="ITRC_ZEROIZE">
      <alias type="CMSIS" value="FLASH_CMPA_BOOT_CFG_ITRC_ZEROIZE(x)"/>
      <bit_field_value name="BOOT_CFG_ITRC_ZEROIZE_NO_ACTION" value="0b00" description="No action"/>
      <bit_field_value name="BOOT_CFG_ITRC_ZEROIZE_PKC_RAM" value="0b01" description="Zeroize PKC RAM"/>
      <bit_field_value name="BOOT_CFG_ITRC_ZEROIZE_A0_RAM" value="0b10" description="Zeroize low power RAM (AO_RAM)"/>
      <bit_field_value name="BOOT_CFG_ITRC_ZEROIZE_BOTH_A0_AND_PKC_RAM" value="0b11" description="Zeroize both AO_RAM and PKC_RAM"/>
    </bit_field>
    <bit_field offset="21" width="1" name="ASRT_FATAL" access="RO" reset_value="0" description="ASRT_FATAL">
      <alias type="CMSIS" value="FLASH_CMPA_BOOT_CFG_ASRT_FATAL(x)"/>
    </bit_field>
    <bit_field offset="22" width="1" name="ASRT_RBF" access="RO" reset_value="0" description="ASRT_RBF">
      <alias type="CMSIS" value="FLASH_CMPA_BOOT_CFG_ASRT_RBF(x)"/>
    </bit_field>
    <bit_field offset="23" width="1" name="ASRT_ISPF" access="RO" reset_value="0" description="ASRT_ISPF">
      <alias type="CMSIS" value="FLASH_CMPA_BOOT_CFG_ASRT_ISPF(x)"/>
    </bit_field>
    <bit_field offset="24" width="8" name="BOOT_FAILURE_PIN" access="RO" reset_value="0" description="Boot Failure Pin">
      <alias type="CMSIS" value="FLASH_CMPA_BOOT_CFG_BOOT_FAILURE_PIN(x)"/>
    </bit_field>
  </register>
  <register offset="0x4" width="32" name="SPI_CAN_CFG" description="SPI CAN Configuration">
    <alias type="CMSIS" value="CMPA.SPI_CAN_CFG"/>
    <bit_field offset="0" width="2" name="SPI_RECOVERY_BOOT_EN" access="RO" reset_value="0" description="SPI Recovery Boot Enable">
      <alias type="CMSIS" value="FLASH_CMPA_SPI_CAN_CFG_SPI_RECOVERY_BOOT_EN(x)"/>
    </bit_field>
    <bit_field offset="2" width="3" name="SPI_REC_IF" access="RO" reset_value="0" description="SPI Recovery Interface">
      <alias type="CMSIS" value="FLASH_CMPA_SPI_CAN_CFG_SPI_REC_IF(x)"/>
      <bit_field_value name="SPI_CAN_CFG_SPI_REC_IF_HSPI" value="0b000" description="HSPI P1_3-MISO, P0_26-MOSI, P1_1-SSEL1, P1_2-SCK"/>
      <bit_field_value name="SPI_CAN_CFG_SPI_REC_IF_FC0" value="0b001" description="FC0 P0_30-MISO, P0_24-MOSI, P0_31-SSEL0, P0_28-SCK"/>
      <bit_field_value name="SPI_CAN_CFG_SPI_REC_IF_FC3" value="0b010" description="FC3 P0_2-MISO, P0_3-MOSI, P0_4-SSEL0, P0_6-SCK"/>
      <bit_field_value name="SPI_CAN_CFG_SPI_REC_IF_FC1" value="0b011" description="FC1 P2_4-MISO, P2_3-MOSI, P2_5-SSEL0, P1_9-SCK"/>
      <bit_field_value name="SPI_CAN_CFG_SPI_REC_IF_RESERVED_0" value="0b100" description="Reserved."/>
      <bit_field_value name="SPI_CAN_CFG_SPI_REC_IF_RESERVED_1" value="0b101" description="Reserved."/>
      <bit_field_value name="SPI_CAN_CFG_SPI_REC_IF_RESERVED_2" value="0b110" description="Reserved."/>
      <bit_field_value name="SPI_CAN_CFG_SPI_REC_IF_RESERVED_3" value="0b111" description="Reserved."/>
    </bit_field>
    <reserved_bit_field offset="5" width="11" reset_value="0"/>
    <bit_field offset="16" width="4" name="CAN_BAUD_RATE" access="RO" reset_value="0" description="CAN Baud Rate">
      <alias type="CMSIS" value="FLASH_CMPA_SPI_CAN_CFG_CAN_BAUD_RATE(x)"/>
      <bit_field_value name="SPI_CAN_CFG_CAN_BAUD_RATE_AUTO_BAUD_DETECT" value="0b0000" description="Auto baud detection (125K, 250K, 500K, 1M). Default."/>
      <bit_field_value name="SPI_CAN_CFG_CAN_BAUD_RATE_KBPS_10" value="0b0001" description="10 kbp"/>
      <bit_field_value name="SPI_CAN_CFG_CAN_BAUD_RATE_KBPS_20" value="0b0010" description="20 kbp"/>
      <bit_field_value name="SPI_CAN_CFG_CAN_BAUD_RATE_KBPS_50" value="0b0011" description="50 kbps"/>
      <bit_field_value name="SPI_CAN_CFG_CAN_BAUD_RATE_KBPS_125" value="0b0100" description="125 kbps"/>
      <bit_field_value name="SPI_CAN_CFG_CAN_BAUD_RATE_KBPS_250" value="0b0101" description="250 kbps"/>
      <bit_field_value name="SPI_CAN_CFG_CAN_BAUD_RATE_KBPS_500" value="0b0110" description="500 kbps"/>
      <bit_field_value name="SPI_CAN_CFG_CAN_BAUD_RATE_KBPS_800" value="0b0111" description="800 kbps"/>
      <bit_field_value name="SPI_CAN_CFG_CAN_BAUD_RATE_KBPS_1000" value="0b1000" description="1,000 kbps"/>
      <bit_field_value name="SPI_CAN_CFG_CAN_BAUD_RATE_RESERVED_0" value="0b1001" description="Reserved."/>
      <bit_field_value name="SPI_CAN_CFG_CAN_BAUD_RATE_RESERVED_1" value="0b1010" description="Reserved."/>
      <bit_field_value name="SPI_CAN_CFG_CAN_BAUD_RATE_RESERVED_2" value="0b1011" description="Reserved."/>
      <bit_field_value name="SPI_CAN_CFG_CAN_BAUD_RATE_RESERVED_3" value="0b1100" description="Reserved."/>
      <bit_field_value name="SPI_CAN_CFG_CAN_BAUD_RATE_RESERVED_4" value="0b1101" description="Reserved."/>
      <bit_field_value name="SPI_CAN_CFG_CAN_BAUD_RATE_RESERVED_5" value="0b1110" description="Reserved."/>
      <bit_field_value name="SPI_CAN_CFG_CAN_BAUD_RATE_RESERVED_6" value="0b1111" description="Reserved."/>
    </bit_field>
    <reserved_bit_field offset="20" width="12" reset_value="0"/>
  </register>
  <register offset="0x8" width="32" name="USB_ID" description="USB Identifiers">
    <alias type="CMSIS" value="CMPA.USB_ID"/>
    <bit_field offset="0" width="16" name="USB_VENDOR_ID" access="RO" reset_value="0" description="USB Vendor ID">
      <alias type="CMSIS" value="FLASH_CMPA_USB_ID_USB_VENDOR_ID(x)"/>
    </bit_field>
    <bit_field offset="16" width="16" name="USB_PRODUCT_ID" access="RO" reset_value="0" description="USB Product ID">
      <alias type="CMSIS" value="FLASH_CMPA_USB_ID_USB_PRODUCT_ID(x)"/>
    </bit_field>
  </register>
  <register offset="0xC" width="32" name="BOOT_TIMEOUT" description="Boot Timeout">
    <alias type="CMSIS" value="CMPA.BOOT_TIMEOUT"/>
    <bit_field offset="0" width="16" name="POWERDOWN_TIMEOUT_SECS" access="RO" reset_value="0" description="Powerdown Timeout">
      <alias type="CMSIS" value="FLASH_CMPA_BOOT_TIMEOUT_POWERDOWN_TIMEOUT_SECS(x)"/>
    </bit_field>
    <bit_field offset="16" width="16" name="WDOG_TIMEOUT_SECS" access="RO" reset_value="0" description="WDOG Timeout">
      <alias type="CMSIS" value="FLASH_CMPA_BOOT_TIMEOUT_WDOG_TIMEOUT_SECS(x)"/>
    </bit_field>
  </register>
  <register offset="0x10" width="32" name="DCFG_CC_SOCU_PIN" description="Device Configuration Credential Constraints for SoC specific Use Pinned">
    <alias type="CMSIS" value="CMPA.DCFG_CC_SOCU_PIN"/>
    <bit_field offset="0" width="1" name="NIDEN" access="RO" reset_value="0" description="Non-secure Non-invasive Debug Enable">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_PIN_NIDEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_NIDEN_USE_DAP" value="0b0" description="Use DAP to enable"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_NIDEN_FIXED_STATE" value="0b1" description="Fixed state"/>
    </bit_field>
    <bit_field offset="1" width="1" name="DBGEN" access="RO" reset_value="0" description="Non-secure Debug Enable">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_PIN_DBGEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_DBGEN_USE_DAP" value="0b0" description="Use DAP to enable"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_DBGEN_FIXED_STATE" value="0b1" description="Fixed state"/>
    </bit_field>
    <bit_field offset="2" width="1" name="SPNIDEN" access="RO" reset_value="0" description="Secure Non-invasive Debug Enable">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_PIN_SPNIDEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_SPNIDEN_USE_DAP" value="0b0" description="Use DAP to enable"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_SPNIDEN_FIXED_STATE" value="0b1" description="Fixed state"/>
    </bit_field>
    <bit_field offset="3" width="1" name="SPIDEN" access="RO" reset_value="0" description="Secure Invasive Debug Enable">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_PIN_SPIDEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_SPIDEN_USE_DAP" value="0b0" description="Use DAP to enable"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_SPIDEN_FIXED_STATE" value="0b1" description="Fixed state"/>
    </bit_field>
    <reserved_bit_field offset="4" width="1" reset_value="0"/>
    <bit_field offset="5" width="1" name="DSP_DBGEN" access="RO" reset_value="0" description="DSP Debug Enable">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_PIN_DSP_DBGEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_DSP_DBGEN_USE_DAP" value="0b0" description="Use DAP to enable"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_DSP_DBGEN_FIXED_STATE" value="0b1" description="Fixed state"/>
    </bit_field>
    <bit_field offset="6" width="1" name="ISP_CMD_EN" access="RO" reset_value="0" description="ISP Boot Command Enable">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_PIN_ISP_CMD_EN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_ISP_CMD_EN_USE_DAP" value="0b0" description="Use DAP to enable"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_ISP_CMD_EN_FIXED_STATE" value="0b1" description="Fixed state"/>
    </bit_field>
    <bit_field offset="7" width="1" name="FA_CMD_EN" access="RO" reset_value="0" description="FA Command Enable">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_PIN_FA_CMD_EN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_FA_CMD_EN_USE_DAP" value="0b0" description="Use DAP to enable"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_FA_CMD_EN_FIXED_STATE" value="0b1" description="Fixed state"/>
    </bit_field>
    <bit_field offset="8" width="1" name="ME_CMD_EN" access="RO" reset_value="0" description="Flash Mass Erase Command Enable">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_PIN_ME_CMD_EN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_ME_CMD_EN_USE_DAP" value="0b0" description="Use DAP to enable"/>
      <bit_field_value name="DCFG_CC_SOCU_PIN_ME_CMD_EN_FIXED_STATE" value="0b1" description="Fixed state"/>
    </bit_field>
    <reserved_bit_field offset="9" width="6" reset_value="0"/>
    <bit_field offset="15" width="1" name="UUID_CHECK" access="RO" reset_value="0" description="UUID Check">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_PIN_UUID_CHECK(x)"/>
    </bit_field>
    <bit_field offset="16" width="16" name="INVERSE_VALUE" access="RO" reset_value="0" description="Inverse Value">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_PIN_INVERSE_VALUE(x)"/>
    </bit_field>
  </register>
  <register offset="0x14" width="32" name="DCFG_CC_SOCU_DFLT" description="Device Configuration Credential Constraints for SoC specific Use Debug Filter">
    <alias type="CMSIS" value="CMPA.DCFG_CC_SOCU_DFLT"/>
    <bit_field offset="0" width="1" name="NIDEN" access="RO" reset_value="0" description="Non Secure Non-invasive Debug Fixed State">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_DFLT_NIDEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_NIDEN_DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_NIDEN_ENABLED" value="0b1" description="Enabled"/>
    </bit_field>
    <bit_field offset="1" width="1" name="DBGEN" access="RO" reset_value="0" description="Non-secure Debug Fixed State">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_DFLT_DBGEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_DBGEN_DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_DBGEN_ENABLED" value="0b1" description="Enabled"/>
    </bit_field>
    <bit_field offset="2" width="1" name="SPNIDEN" access="RO" reset_value="0" description="Secure Non-invasive Debug Fixed State">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_DFLT_SPNIDEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_SPNIDEN_DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_SPNIDEN_ENABLED" value="0b1" description="Enabled"/>
    </bit_field>
    <bit_field offset="3" width="1" name="SPIDEN" access="RO" reset_value="0" description="Secure Invasive Debug Fixed State">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_DFLT_SPIDEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_SPIDEN_DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_SPIDEN_ENABLED" value="0b1" description="Enabled"/>
    </bit_field>
    <reserved_bit_field offset="4" width="1" reset_value="0"/>
    <bit_field offset="5" width="1" name="DSP_DBGEN" access="RO" reset_value="0" description="DSP Debug Fixed State">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_DFLT_DSP_DBGEN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_DSP_DBGEN_DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_DSP_DBGEN_ENABLED" value="0b1" description="Enabled"/>
    </bit_field>
    <bit_field offset="6" width="1" name="ISP_CMD_EN" access="RO" reset_value="0" description="ISP Command Fixed State">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_DFLT_ISP_CMD_EN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_ISP_CMD_EN_DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_ISP_CMD_EN_ENABLED" value="0b1" description="Enabled"/>
    </bit_field>
    <bit_field offset="7" width="1" name="FA_CMD_EN" access="RO" reset_value="0" description="FA Command Fixed State">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_DFLT_FA_CMD_EN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_FA_CMD_EN_DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_FA_CMD_EN_ENABLED" value="0b1" description="Enabled"/>
    </bit_field>
    <bit_field offset="8" width="1" name="ME_CMD_EN" access="RO" reset_value="0" description="Flash Mass Erase Command Fixed State">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_DFLT_ME_CMD_EN(x)"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_ME_CMD_EN_DISABLED" value="0b0" description="Disabled"/>
      <bit_field_value name="DCFG_CC_SOCU_DFLT_ME_CMD_EN_ENABLED" value="0b1" description="Enabled"/>
    </bit_field>
    <reserved_bit_field offset="9" width="7" reset_value="0"/>
    <bit_field offset="16" width="16" name="INVERSE_VALUE" access="RO" reset_value="0" description="Inverse Value">
      <alias type="CMSIS" value="FLASH_CMPA_DCFG_CC_SOCU_DFLT_INVERSE_VALUE(x)"/>
    </bit_field>
  </register>
  <register offset="0x18" width="32" name="VENDOR_USAGE" description="Vendor Usage">
    <alias type="CMSIS" value="CMPA.VENDOR_USAGE"/>
    <reserved_bit_field offset="0" width="16" reset_value="0"/>
    <bit_field offset="16" width="16" name="VENDOR_USAGE" access="RO" reset_value="0" description="Vendor Usage [31:16]">
      <alias type="CMSIS" value="FLASH_CMPA_VENDOR_USAGE_VENDOR_USAGE(x)"/>
    </bit_field>
  </register>
  <register offset="0x1C" width="32" name="SECURE_BOOT_CFG" description="Secure Boot Configuration">
    <alias type="CMSIS" value="CMPA.SECURE_BOOT_CFG"/>
    <bit_field offset="0" width="2" name="ENF_CNSA" access="RO" reset_value="0" description="Enforce CNSA">
      <alias type="CMSIS" value="FLASH_CMPA_SECURE_BOOT_CFG_ENF_CNSA(x)"/>
      <bit_field_value name="SECURE_BOOT_CFG_ENF_CNSA_ECC_P256" value="0b00" description="ECC P-256 keys"/>
      <bit_field_value name="SECURE_BOOT_CFG_ENF_CNSA_ECC_P384_0" value="0b01" description="ECC P-384 keys, SHA384 and AES256"/>
      <bit_field_value name="SECURE_BOOT_CFG_ENF_CNSA_ECC_P384_1" value="0b10" description="ECC P-384 keys, SHA384 and AES256"/>
      <bit_field_value name="SECURE_BOOT_CFG_ENF_CNSA_ECC_P384_2" value="0b11" description="ECC P-384 keys, SHA384 and AES256"/>
    </bit_field>
    <bit_field offset="2" width="2" name="DICE_INC_NXP_CFG" access="RO" reset_value="0" description="DICE Include NXP Configuration">
      <alias type="CMSIS" value="FLASH_CMPA_SECURE_BOOT_CFG_DICE_INC_NXP_CFG(x)"/>
      <bit_field_value name="SECURE_BOOT_CFG_DICE_INC_NXP_CFG_NOT_INCLUDE" value="0b00" description="Not included"/>
      <bit_field_value name="SECURE_BOOT_CFG_DICE_INC_NXP_CFG_INCLUDE_0" value="0b01" description="Included"/>
      <bit_field_value name="SECURE_BOOT_CFG_DICE_INC_NXP_CFG_INCLUDE_1" value="0b10" description="Included"/>
      <bit_field_value name="SECURE_BOOT_CFG_DICE_INC_NXP_CFG_INCLUDE_2" value="0b11" description="Included"/>
    </bit_field>
    <bit_field offset="4" width="2" name="DICE_CUST_CFG" access="RO" reset_value="0" description="DICE Customer Configuration">
      <alias type="CMSIS" value="FLASH_CMPA_SECURE_BOOT_CFG_DICE_CUST_CFG(x)"/>
      <bit_field_value name="SECURE_BOOT_CFG_DICE_CUST_CFG_NOT_INCLUDE" value="0b00" description="Not included"/>
      <bit_field_value name="SECURE_BOOT_CFG_DICE_CUST_CFG_INCLUDE_0" value="0b01" description="Included"/>
      <bit_field_value name="SECURE_BOOT_CFG_DICE_CUST_CFG_INCLUDE_1" value="0b10" description="Included"/>
      <bit_field_value name="SECURE_BOOT_CFG_DICE_CUST_CFG_INCLUDE_2" value="0b11" description="Included"/>
    </bit_field>
    <bit_field offset="6" width="2" name="SKIP_DICE" access="RO" reset_value="0" description="Skip DICE computation.">
      <alias type="CMSIS" value="FLASH_CMPA_SECURE_BOOT_CFG_SKIP_DICE(x)"/>
      <bit_field_value name="SECURE_BOOT_CFG_SKIP_DICE_ENABLE_DICE" value="0b00" description="Enable DICE"/>
      <bit_field_value name="SECURE_BOOT_CFG_SKIP_DICE_DISABLE_DICE_0" value="0b01" description="Disable DICE"/>
      <bit_field_value name="SECURE_BOOT_CFG_SKIP_DICE_DISABLE_DICE_1" value="0b10" description="Disable DICE"/>
      <bit_field_value name="SECURE_BOOT_CFG_SKIP_DICE_DISABLE_DICE_2" value="0b11" description="Disable DICE"/>
    </bit_field>
    <bit_field offset="8" width="2" name="ENF_TZM_PRESET" access="RO" reset_value="0" description="Enforce TrustZone-M Preset">
      <alias type="CMSIS" value="FLASH_CMPA_SECURE_BOOT_CFG_ENF_TZM_PRESET(x)"/>
      <bit_field_value name="SECURE_BOOT_CFG_ENF_TZM_PRESET_IGNORE" value="0b00" description="Ignored"/>
      <bit_field_value name="SECURE_BOOT_CFG_ENF_TZM_PRESET_ENFORCE_0" value="0b01" description="Enforce preset TZM data in image manifest."/>
      <bit_field_value name="SECURE_BOOT_CFG_ENF_TZM_PRESET_ENFORCE_1" value="0b10" description="Enforce preset TZM data in image manifest."/>
      <bit_field_value name="SECURE_BOOT_CFG_ENF_TZM_PRESET_ENFORCE_2" value="0b11" description="Enforce preset TZM data in image manifest."/>
    </bit_field>
    <bit_field offset="10" width="2" name="BLOCK_SET_KEY" access="RO" reset_value="0" description="Block Set Key">
      <alias type="CMSIS" value="FLASH_CMPA_SECURE_BOOT_CFG_BLOCK_SET_KEY(x)"/>
      <bit_field_value name="SECURE_BOOT_CFG_BLOCK_SET_KEY_ENABLE" value="0b00" description="Enable key code generation"/>
      <bit_field_value name="SECURE_BOOT_CFG_BLOCK_SET_KEY_DISABLE_0" value="0b01" description="Disable key code generation"/>
      <bit_field_value name="SECURE_BOOT_CFG_BLOCK_SET_KEY_DISABLE_1" value="0b10" description="Disable key code generation"/>
      <bit_field_value name="SECURE_BOOT_CFG_BLOCK_SET_KEY_DISABLE_2" value="0b11" description="Disable key code generation"/>
    </bit_field>
    <bit_field offset="12" width="2" name="BLOCK_ENROLL" access="RO" reset_value="0" description="Block Enroll">
      <alias type="CMSIS" value="FLASH_CMPA_SECURE_BOOT_CFG_BLOCK_ENROLL(x)"/>
      <bit_field_value name="SECURE_BOOT_CFG_BLOCK_ENROLL_ENABLE" value="0b00" description="Enable enrollment mode"/>
      <bit_field_value name="SECURE_BOOT_CFG_BLOCK_ENROLL_DISABLE_0" value="0b01" description="Disable further enrollment"/>
      <bit_field_value name="SECURE_BOOT_CFG_BLOCK_ENROLL_DISABLE_1" value="0b10" description="Disable further enrollment"/>
      <bit_field_value name="SECURE_BOOT_CFG_BLOCK_ENROLL_DISABLE_2" value="0b11" description="Disable further enrollment"/>
    </bit_field>
    <reserved_bit_field offset="14" width="2" reset_value="0"/>
    <bit_field offset="16" width="2" name="FIPS_SHA_STEN" access="RO" reset_value="0" description="FIPS_SHA_STEN">
      <alias type="CMSIS" value="FLASH_CMPA_SECURE_BOOT_CFG_FIPS_SHA_STEN(x)"/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_SHA_STEN_NOT_INCLUDE" value="0b00" description="Not included"/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_SHA_STEN_FAILURE_BOOT" value="0b01" description="On failure continue to boot."/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_SHA_STEN_FAILURE_ISP" value="0b10" description="On failure enter ISP mode for recovery."/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_SHA_STEN_FAILURE_ENF_POWER_CYC" value="0b11" description="On failure lock the device to enforce power-cycle."/>
    </bit_field>
    <bit_field offset="18" width="2" name="FIPS_AES_STEN" access="RO" reset_value="0" description="FIPS_AES_STEN">
      <alias type="CMSIS" value="FLASH_CMPA_SECURE_BOOT_CFG_FIPS_AES_STEN(x)"/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_AES_STEN_NOT_INCLUDE" value="0b00" description="Not included"/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_AES_STEN_FAILURE_BOOT" value="0b01" description="On failure continue to boot."/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_AES_STEN_FAILURE_ISP" value="0b10" description="On failure enter ISP mode for recovery."/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_AES_STEN_FAILURE_ENF_POWER_CYC" value="0b11" description="On failure lock the device to enforce power-cycle."/>
    </bit_field>
    <bit_field offset="20" width="2" name="FIPS_ECDSA_STEN" access="RO" reset_value="0" description="FIPS_ECDSA_STEN">
      <alias type="CMSIS" value="FLASH_CMPA_SECURE_BOOT_CFG_FIPS_ECDSA_STEN(x)"/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_ECDSA_STEN_NOT_INCLUDE" value="0b00" description="Not included"/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_ECDSA_STEN_FAILURE_BOOT" value="0b01" description="On failure continue to boot."/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_ECDSA_STEN_FAILURE_ISP" value="0b10" description="On failure enter ISP mode for recovery."/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_ECDSA_STEN_FAILURE_ENF_POWER_CYC" value="0b11" description="On failure lock the device to enforce power-cycle."/>
    </bit_field>
    <bit_field offset="22" width="2" name="FIPS_DRBG_STEN" access="RO" reset_value="0" description="FIPS_DRBG_STEN">
      <alias type="CMSIS" value="FLASH_CMPA_SECURE_BOOT_CFG_FIPS_DRBG_STEN(x)"/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_DRBG_STEN_NOT_INCLUDE" value="0b00" description="Not included"/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_DRBG_STEN_FAILURE_BOOT" value="0b01" description="On failure continue to boot."/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_DRBG_STEN_FAILURE_ISP" value="0b10" description="On failure enter ISP mode for recovery."/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_DRBG_STEN_FAILURE_ENF_POWER_CYC" value="0b11" description="On failure lock the device to enforce power-cycle."/>
    </bit_field>
    <bit_field offset="24" width="2" name="FIPS_CMAC_STEN" access="RO" reset_value="0" description="FIPS_CMAC_STEN">
      <alias type="CMSIS" value="FLASH_CMPA_SECURE_BOOT_CFG_FIPS_CMAC_STEN(x)"/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_CMAC_STEN_NOT_INCLUDE" value="0b00" description="Not included"/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_CMAC_STEN_FAILURE_BOOT" value="0b01" description="On failure continue to boot."/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_CMAC_STEN_FAILURE_ISP" value="0b10" description="On failure enter ISP mode for recovery."/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_CMAC_STEN_FAILURE_ENF_POWER_CYC" value="0b11" description="On failure lock the device to enforce power-cycle."/>
    </bit_field>
    <bit_field offset="26" width="2" name="FIPS_KDF_STEN" access="RO" reset_value="0" description="FIPS_KDF_STEN">
      <alias type="CMSIS" value="FLASH_CMPA_SECURE_BOOT_CFG_FIPS_KDF_STEN(x)"/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_KDF_STEN_NOT_INCLUDE" value="0b00" description="Not included"/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_KDF_STEN_FAILURE_BOOT" value="0b01" description="On failure continue to boot."/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_KDF_STEN_FAILURE_ISP" value="0b10" description="On failure enter ISP mode for recovery."/>
      <bit_field_value name="SECURE_BOOT_CFG_FIPS_KDF_STEN_FAILURE_ENF_POWER_CYC" value="0b11" description="On failure lock the device to enforce power-cycle."/>
    </bit_field>
    <reserved_bit_field offset="28" width="2" reset_value="0"/>
    <bit_field offset="30" width="2" name="SEC_BOOT_EN" access="RO" reset_value="0" description="Secure Boot Enable">
      <alias type="CMSIS" value="FLASH_CMPA_SECURE_BOOT_CFG_SEC_BOOT_EN(x)"/>
      <bit_field_value name="SECURE_BOOT_CFG_SEC_BOOT_EN_PLAIN_IMAGE" value="0b00" description="Plain image (internal flash with or without CRC)"/>
      <bit_field_value name="SECURE_BOOT_CFG_SEC_BOOT_EN_CMAC_CHECK_IMAGE" value="0b01" description="Do CMAC checking of image."/>
      <bit_field_value name="SECURE_BOOT_CFG_SEC_BOOT_EN_ECDSA_CHECK_IMAGE_0" value="0b10" description="Do complete ECDSA checking of signed images. (internal flash, ECDSA signed)"/>
      <bit_field_value name="SECURE_BOOT_CFG_SEC_BOOT_EN_ECDSA_CHECK_IMAGE_1" value="0b11" description="Do complete ECDSA checking of signed images. (internal flash, ECDSA signed)"/>
    </bit_field>
  </register>
  <register offset="0x20" width="32" name="PRINCE_CONFIG" description="Prince Configuration">
    <alias type="CMSIS" value="CMPA.PRINCE_CONFIG"/>
    <reserved_bit_field offset="0" width="16" reset_value="0"/>
    <bit_field offset="16" width="2" name="LOCK_REG0" access="RO" reset_value="0" description="Lock Region 0">
      <alias type="CMSIS" value="FLASH_CMPA_PRINCE_CONFIG_LOCK_REG0(x)"/>
      <bit_field_value name="PRINCE_CONFIG_LOCK_REG0_NOT_LOCKED" value="0b00" description="Region is not locked."/>
      <bit_field_value name="PRINCE_CONFIG_LOCK_REG0_LOCKED_0" value="0b01" description="Region is locked."/>
      <bit_field_value name="PRINCE_CONFIG_LOCK_REG0_LOCKED_1" value="0b10" description="Region is locked."/>
      <bit_field_value name="PRINCE_CONFIG_LOCK_REG0_LOCKED_2" value="0b11" description="Region is locked."/>
    </bit_field>
    <bit_field offset="18" width="2" name="LOCK_REG1" access="RO" reset_value="0" description="Lock Region 1">
      <alias type="CMSIS" value="FLASH_CMPA_PRINCE_CONFIG_LOCK_REG1(x)"/>
      <bit_field_value name="PRINCE_CONFIG_LOCK_REG1_NOT_LOCKED" value="0b00" description="Region is not locked."/>
      <bit_field_value name="PRINCE_CONFIG_LOCK_REG1_LOCKED_0" value="0b01" description="Region is locked."/>
      <bit_field_value name="PRINCE_CONFIG_LOCK_REG1_LOCKED_1" value="0b10" description="Region is locked."/>
      <bit_field_value name="PRINCE_CONFIG_LOCK_REG1_LOCKED_2" value="0b11" description="Region is locked."/>
    </bit_field>
    <bit_field offset="20" width="2" name="LOCK_REG2" access="RO" reset_value="0" description="Lock Region 2">
      <alias type="CMSIS" value="FLASH_CMPA_PRINCE_CONFIG_LOCK_REG2(x)"/>
      <bit_field_value name="PRINCE_CONFIG_LOCK_REG2_NOT_LOCKED" value="0b00" description="Region is not locked."/>
      <bit_field_value name="PRINCE_CONFIG_LOCK_REG2_LOCKED_0" value="0b01" description="Region is locked."/>
      <bit_field_value name="PRINCE_CONFIG_LOCK_REG2_LOCKED_1" value="0b10" description="Region is locked."/>
      <bit_field_value name="PRINCE_CONFIG_LOCK_REG2_LOCKED_2" value="0b11" description="Region is locked."/>
    </bit_field>
    <reserved_bit_field offset="22" width="2" reset_value="0"/>
    <bit_field offset="24" width="2" name="REG0_ERASE_CHECK_EN" access="RO" reset_value="0" description="Region 0 Erase Check Enable">
      <alias type="CMSIS" value="FLASH_CMPA_PRINCE_CONFIG_REG0_ERASE_CHECK_EN(x)"/>
      <bit_field_value name="PRINCE_CONFIG_REG0_ERASE_CHECK_EN_DISABLE" value="0b00" description="Check is disabled"/>
      <bit_field_value name="PRINCE_CONFIG_REG0_ERASE_CHECK_EN_ENABLE_0" value="0b01" description="Check is enabled"/>
      <bit_field_value name="PRINCE_CONFIG_REG0_ERASE_CHECK_EN_ENABLE_1" value="0b10" description="Check is enabled"/>
      <bit_field_value name="PRINCE_CONFIG_REG0_ERASE_CHECK_EN_ENABLE_2" value="0b11" description="Check is enabled"/>
    </bit_field>
    <bit_field offset="26" width="2" name="REG1_ERASE_CHECK_EN" access="RO" reset_value="0" description="Region 1 Erase Check Enable">
      <alias type="CMSIS" value="FLASH_CMPA_PRINCE_CONFIG_REG1_ERASE_CHECK_EN(x)"/>
      <bit_field_value name="PRINCE_CONFIG_REG1_ERASE_CHECK_EN_DISABLE" value="0b00" description="Check is disabled"/>
      <bit_field_value name="PRINCE_CONFIG_REG1_ERASE_CHECK_EN_ENABLE_0" value="0b01" description="Check is enabled"/>
      <bit_field_value name="PRINCE_CONFIG_REG1_ERASE_CHECK_EN_ENABLE_1" value="0b10" description="Check is enabled"/>
      <bit_field_value name="PRINCE_CONFIG_REG1_ERASE_CHECK_EN_ENABLE_2" value="0b11" description="Check is enabled"/>
    </bit_field>
    <bit_field offset="28" width="2" name="REG2_ERASE_CHECK_EN" access="RO" reset_value="0" description="Region 2 Erase Check Enable">
      <alias type="CMSIS" value="FLASH_CMPA_PRINCE_CONFIG_REG2_ERASE_CHECK_EN(x)"/>
      <bit_field_value name="PRINCE_CONFIG_REG2_ERASE_CHECK_EN_DISABLE" value="0b00" description="Check is disabled"/>
      <bit_field_value name="PRINCE_CONFIG_REG2_ERASE_CHECK_EN_ENABLE_0" value="0b01" description="Check is enabled"/>
      <bit_field_value name="PRINCE_CONFIG_REG2_ERASE_CHECK_EN_ENABLE_1" value="0b10" description="Check is enabled"/>
      <bit_field_value name="PRINCE_CONFIG_REG2_ERASE_CHECK_EN_ENABLE_2" value="0b11" description="Check is enabled"/>
    </bit_field>
    <reserved_bit_field offset="30" width="2" reset_value="0"/>
  </register>
  <register offset="0x24" width="32" name="PRINCE_SR_0" description="Region 0, Sub-region Enable">
    <alias type="CMSIS" value="CMPA.PRINCE_SR_0"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Region 0, sub-region enable">
      <alias type="CMSIS" value="FLASH_CMPA_PRINCE_SR_0_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x28" width="32" name="PRINCE_SR_1" description="Region 1, Sub-region Enable">
    <alias type="CMSIS" value="CMPA.PRINCE_SR_1"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Region 1, sub-region enable">
      <alias type="CMSIS" value="FLASH_CMPA_PRINCE_SR_1_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x2C" width="32" name="PRINCE_SR_2" description="Region 2, Sub-region Enable">
    <alias type="CMSIS" value="CMPA.PRINCE_SR_2"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Region 2, sub-region enable">
      <alias type="CMSIS" value="FLASH_CMPA_PRINCE_SR_2_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x30" width="32" name="XTAL_32KHZ_CAPABANK_TRIM" description="Xtal 32kHz Capabank Triming">
    <alias type="CMSIS" value="CMPA.XTAL_32KHZ_CAPABANK_TRIM"/>
    <bit_field offset="0" width="1" name="TRIM_VALID" access="RO" reset_value="0" description="Trim Valid">
      <alias type="CMSIS" value="FLASH_CMPA_XTAL_32KHZ_CAPABANK_TRIM_TRIM_VALID(x)"/>
      <bit_field_value name="XTAL_32KHZ_CAPABANK_TRIM_TRIM_VALID_NOT_VALID" value="0b0" description="Capa Bank trimmings not valid. Default trimmings value are used."/>
      <bit_field_value name="XTAL_32KHZ_CAPABANK_TRIM_TRIM_VALID_VALID" value="0b1" description="Capa Bank trimmings valid."/>
    </bit_field>
    <bit_field offset="1" width="10" name="XTAL_LOAD_CAP_IEC_PF_X100" access="RO" reset_value="0" description="XTAL LOAD CAP IEC PF X100">
      <alias type="CMSIS" value="FLASH_CMPA_XTAL_32KHZ_CAPABANK_TRIM_XTAL_LOAD_CAP_IEC_PF_X100(x)"/>
    </bit_field>
    <bit_field offset="11" width="10" name="PCB_XIN_PARA_CAP_PF_X100" access="RO" reset_value="0" description="PCB XIN PARA CAP PF X100">
      <alias type="CMSIS" value="FLASH_CMPA_XTAL_32KHZ_CAPABANK_TRIM_PCB_XIN_PARA_CAP_PF_X100(x)"/>
    </bit_field>
    <bit_field offset="21" width="10" name="PCB_XOUT_PARA_CAP_PF_X100" access="RO" reset_value="0" description="PCB XOUT PARA CAP PF X100">
      <alias type="CMSIS" value="FLASH_CMPA_XTAL_32KHZ_CAPABANK_TRIM_PCB_XOUT_PARA_CAP_PF_X100(x)"/>
    </bit_field>
    <reserved_bit_field offset="31" width="1" reset_value="0"/>
  </register>
  <register offset="0x34" width="32" name="XTAL_16MHZ_CAPABANK_TRIM" description="Xtal 16MHz Capabank Trimming">
    <alias type="CMSIS" value="CMPA.XTAL_16MHZ_CAPABANK_TRIM"/>
    <bit_field offset="0" width="1" name="TRIM_VALID" access="RO" reset_value="0" description="Trim Valid">
      <alias type="CMSIS" value="FLASH_CMPA_XTAL_16MHZ_CAPABANK_TRIM_TRIM_VALID(x)"/>
      <bit_field_value name="XTAL_16MHZ_CAPABANK_TRIM_TRIM_VALID_NOT_VALID" value="0b0" description="Capa Bank trimmings not valid. Default trimmings value are used."/>
      <bit_field_value name="XTAL_16MHZ_CAPABANK_TRIM_TRIM_VALID_VALID" value="0b1" description="Capa Bank trimmings valid."/>
    </bit_field>
    <bit_field offset="1" width="10" name="XTAL_LOAD_CAP_IEC_PF_X100" access="RO" reset_value="0" description="XTAL LOAD CAP IEC PF X100">
      <alias type="CMSIS" value="FLASH_CMPA_XTAL_16MHZ_CAPABANK_TRIM_XTAL_LOAD_CAP_IEC_PF_X100(x)"/>
    </bit_field>
    <bit_field offset="11" width="10" name="PCB_XIN_PARA_CAP_PF_X100" access="RO" reset_value="0" description="PCB XIN PARA CAP PF X100">
      <alias type="CMSIS" value="FLASH_CMPA_XTAL_16MHZ_CAPABANK_TRIM_PCB_XIN_PARA_CAP_PF_X100(x)"/>
    </bit_field>
    <bit_field offset="21" width="10" name="PCB_XOUT_PARA_CAP_PF_X100" access="RO" reset_value="0" description="PCB XOUT PARA CAP PF X100">
      <alias type="CMSIS" value="FLASH_CMPA_XTAL_16MHZ_CAPABANK_TRIM_PCB_XOUT_PARA_CAP_PF_X100(x)"/>
    </bit_field>
    <reserved_bit_field offset="31" width="1" reset_value="0"/>
  </register>
  <register offset="0x38" width="32" name="FLASH_REMAP_SIZE" description="Flash Remap Size">
    <alias type="CMSIS" value="CMPA.FLASH_REMAP_SIZE"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Flash Remap Size">
      <alias type="CMSIS" value="FLASH_CMPA_FLASH_REMAP_SIZE_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x3C" width="32" name="FLASH_REMAP_OFFSET" description="Flash Remap Offset">
    <alias type="CMSIS" value="CMPA.FLASH_REMAP_OFFSET"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Flash Remap Offset">
      <alias type="CMSIS" value="FLASH_CMPA_FLASH_REMAP_OFFSET_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x40" width="32" name="PRINCE_XOM_0" description="Prince eXecute-Only-Memory (XOM) 0">
    <alias type="CMSIS" value="CMPA.PRINCE_XOM_0"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_PRINCE_XOM_0_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x44" width="32" name="PRINCE_XOM_1" description="Prince eXecute-Only-Memory (XOM) 1">
    <alias type="CMSIS" value="CMPA.PRINCE_XOM_1"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_PRINCE_XOM_1_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x48" width="32" name="PRINCE_XOM_2" description="Prince eXecute-Only-Memory (XOM) 2">
    <alias type="CMSIS" value="CMPA.PRINCE_XOM_2"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_PRINCE_XOM_2_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x4C" width="32" name="RoTK_USAGE" description="Root of Trust Key Usage">
    <alias type="CMSIS" value="CMPA.ROTK_USAGE"/>
    <bit_field offset="0" width="3" name="RoTK0_Usage" access="RO" reset_value="0" description="RoTK0_Usage">
      <alias type="CMSIS" value="FLASH_CMPA_ROTK_USAGE_RoTK0_Usage(x)"/>
      <bit_field_value name="RoTK_USAGE_RoTK0_Usage_USABLE" value="0b000" description="Usable as debug CA, image CA, FW CA, image and FW key."/>
      <bit_field_value name="RoTK_USAGE_RoTK0_Usage_DEBUG" value="0b001" description="Usable as debug CA only."/>
      <bit_field_value name="RoTK_USAGE_RoTK0_Usage_IMG_BOOT_AND_FW" value="0b010" description="Usable as image (boot and FW) CA only."/>
      <bit_field_value name="RoTK_USAGE_RoTK0_Usage_DEBUG_BOOT_FW_IMG" value="0b011" description="Usable as debug, boot and FW image CA."/>
      <bit_field_value name="RoTK_USAGE_RoTK0_Usage_IMG_KEY_AND_FW_UPDATE_KEY" value="0b100" description="Usable as image key and FW update key only."/>
      <bit_field_value name="RoTK_USAGE_RoTK0_Usage_BOOT_IMAGE_KEY" value="0b101" description="Usable as boot image key only."/>
      <bit_field_value name="RoTK_USAGE_RoTK0_Usage_FW_UPDATE_IMG_KEY" value="0b110" description="Usable as FW update image key only."/>
      <bit_field_value name="RoTK_USAGE_RoTK0_Usage_KEY_SLOT_NOT_USED" value="0b111" description="Key slot is not used."/>
    </bit_field>
    <bit_field offset="3" width="3" name="RoTK1_Usage" access="RO" reset_value="0" description="RoTK1_Usage">
      <alias type="CMSIS" value="FLASH_CMPA_ROTK_USAGE_RoTK1_Usage(x)"/>
    </bit_field>
    <bit_field offset="6" width="3" name="RoTK2_Usage" access="RO" reset_value="0" description="RoTK2_Usage">
      <alias type="CMSIS" value="FLASH_CMPA_ROTK_USAGE_RoTK2_Usage(x)"/>
    </bit_field>
    <bit_field offset="9" width="3" name="RoTK3_Usage" access="RO" reset_value="0" description="RoTK3_Usage">
      <alias type="CMSIS" value="FLASH_CMPA_ROTK_USAGE_RoTK3_Usage(x)"/>
    </bit_field>
    <reserved_bit_field offset="12" width="20" reset_value="0"/>
  </register>
  <register offset="0x50" width="32" name="ROTKH0" description="Root of Trust Key Hash 0">
    <alias type="CMSIS" value="CMPA.ROTKH[0]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_ROTKH_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x54" width="32" name="ROTKH1" description="Root of Trust Key Hash 1">
    <alias type="CMSIS" value="CMPA.ROTKH[1]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_ROTKH_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x58" width="32" name="ROTKH2" description="Root of Trust Key Hash 2">
    <alias type="CMSIS" value="CMPA.ROTKH[2]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_ROTKH_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x5C" width="32" name="ROTKH3" description="Root of Trust Key Hash 3">
    <alias type="CMSIS" value="CMPA.ROTKH[3]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_ROTKH_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x60" width="32" name="ROTKH4" description="Root of Trust Key Hash 4">
    <alias type="CMSIS" value="CMPA.ROTKH[4]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_ROTKH_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x64" width="32" name="ROTKH5" description="Root of Trust Key Hash 5">
    <alias type="CMSIS" value="CMPA.ROTKH[5]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_ROTKH_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x68" width="32" name="ROTKH6" description="Root of Trust Key Hash 6">
    <alias type="CMSIS" value="CMPA.ROTKH[6]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_ROTKH_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x6C" width="32" name="ROTKH7" description="Root of Trust Key Hash 7">
    <alias type="CMSIS" value="CMPA.ROTKH[7]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_ROTKH_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x70" width="32" name="ROTKH8" description="Root of Trust Key Hash 8">
    <alias type="CMSIS" value="CMPA.ROTKH[8]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_ROTKH_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x74" width="32" name="ROTKH9" description="Root of Trust Key Hash 9">
    <alias type="CMSIS" value="CMPA.ROTKH[9]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_ROTKH_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x78" width="32" name="ROTKH10" description="Root of Trust Key Hash 10">
    <alias type="CMSIS" value="CMPA.ROTKH[10]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_ROTKH_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x7C" width="32" name="ROTKH11" description="Root of Trust Key Hash 11">
    <alias type="CMSIS" value="CMPA.ROTKH[11]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_ROTKH_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x80" width="32" name="FLEXSPI_BOOT_CFG0" description="FlexSPI Boot Configuration 0">
    <alias type="CMSIS" value="CMPA.FLEXSPI_BOOT_CFG0"/>
    <bit_field offset="0" width="1" name="FLEXSPI_AUTO_PROBE_EN" access="RO" reset_value="0" description="FLEXSPI_AUTO_PROBE_EN">
      <alias type="CMSIS" value="FLASH_CMPA_FLEXSPI_BOOT_CFG0_FLEXSPI_AUTO_PROBE_EN(x)"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_AUTO_PROBE_EN_DISABLE" value="0b0" description="Disable"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_AUTO_PROBE_EN_ENABLE" value="0b1" description="Enable"/>
    </bit_field>
    <bit_field offset="1" width="3" name="FLEXSPI_PROBE_TYPE" access="RO" reset_value="0" description="FLEXSPI_PROBE_TYPE">
      <alias type="CMSIS" value="FLASH_CMPA_FLEXSPI_BOOT_CFG0_FLEXSPI_PROBE_TYPE(x)"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PROBE_TYPE_QUADSPI_NOR" value="0b000" description="QuadSPI NOR"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PROBE_TYPE_MACRONIX_OCTAL_FLASH" value="0b001" description="Macronix Octal FLASH"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PROBE_TYPE_MICRON_OCTAL_FLASH" value="0b010" description="Micron Octal FLASH"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PROBE_TYPE_ADESTO_OCTAL_FLASH" value="0b011" description="Adesto Octal FLASH"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PROBE_TYPE_RESERVED_0" value="0b100" description="Reserved."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PROBE_TYPE_RESERVED_1" value="0b101" description="Reserved."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PROBE_TYPE_RESERVED_2" value="0b110" description="Reserved."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PROBE_TYPE_RESERVED_3" value="0b111" description="Reserved."/>
    </bit_field>
    <bit_field offset="4" width="3" name="FLEXSPI_FLASH_TYPE" access="RO" reset_value="0" description="FLEXSPI_FLASH_TYPE">
      <alias type="CMSIS" value="FLASH_CMPA_FLEXSPI_BOOT_CFG0_FLEXSPI_FLASH_TYPE(x)"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_FLASH_TYPE_QSPI_ADDR_3B" value="0b000" description="QSPI_ADDR_3B"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_FLASH_TYPE_RESERVED_0" value="0b001" description="Reserved."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_FLASH_TYPE_HYPER_1V8" value="0b010" description="HYPER_1V8"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_FLASH_TYPE_HYPER_3V3" value="0b011" description="HYPER_3V3"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_FLASH_TYPE_FlexSPI_DDR_MXIC" value="0b100" description="FlexSPI_DDR_MXIC"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_FLASH_TYPE_FlexSPI_DDR_MICRON" value="0b101" description="FlexSPI_DDR_MICRON"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_FLASH_TYPE_RESERVED_1" value="0b110" description="Reserved."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_FLASH_TYPE_RESERVED_2" value="0b111" description="Reserved."/>
    </bit_field>
    <bit_field offset="7" width="4" name="FLEXSPI_DUMMY_CYCLES" access="RO" reset_value="0" description="FLEXSPI_DUMMY_CYCLES">
      <alias type="CMSIS" value="FLASH_CMPA_FLEXSPI_BOOT_CFG0_FLEXSPI_DUMMY_CYCLES(x)"/>
    </bit_field>
    <bit_field offset="11" width="3" name="FLEXSPI_FREQUENCY" access="RO" reset_value="0" description="FLEXSPI_FREQUENCY">
      <alias type="CMSIS" value="FLASH_CMPA_FLEXSPI_BOOT_CFG0_FLEXSPI_FREQUENCY(x)"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_FREQUENCY_MHZ_50" value="0b000" description="50 Mhz"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_FREQUENCY_MHZ_60" value="0b001" description="60 Mhz"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_FREQUENCY_MHZ_80" value="0b010" description="80 Mhz"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_FREQUENCY_MHZ_100" value="0b011" description="100 Mhz"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_FREQUENCY_MHZ_120" value="0b100" description="120 Mhz"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_FREQUENCY_MHZ_133" value="0b101" description="133 Mhz"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_FREQUENCY_MHZ_166" value="0b110" description="166 Mhz"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_FREQUENCY_MHZ_200" value="0b111" description="200 Mhz"/>
    </bit_field>
    <bit_field offset="14" width="1" name="FLEXSPI_RESET_ENABLE" access="RO" reset_value="0" description="FLEXSPI_RESET_ENABLE">
      <alias type="CMSIS" value="FLASH_CMPA_FLEXSPI_BOOT_CFG0_FLEXSPI_RESET_ENABLE(x)"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_RESET_ENABLE_NO_RESET" value="0b0" description="No Reset(O/QSPI device reset pin is not connected or available.)"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_RESET_ENABLE_ENABLE_RESET" value="0b1" description="Enable Reset(O/QSPI device reset pin is connected to a GPIO (QSPI_RESET_PIN).)"/>
    </bit_field>
    <bit_field offset="15" width="3" name="FLEXSPI_RESET_GPIO_PORT" access="RO" reset_value="0" description="FLEXSPI_RESET_ENABLE">
      <alias type="CMSIS" value="FLASH_CMPA_FLEXSPI_BOOT_CFG0_FLEXSPI_RESET_GPIO_PORT(x)"/>
    </bit_field>
    <bit_field offset="18" width="5" name="FLEXSPI_RESET_GPIO_PIN" access="RO" reset_value="0" description="FLEXSPI_RESET_GPIO_PIN">
      <alias type="CMSIS" value="FLASH_CMPA_FLEXSPI_BOOT_CFG0_FLEXSPI_RESET_GPIO_PIN(x)"/>
    </bit_field>
    <bit_field offset="23" width="2" name="FLEXSPI_HOLD_TIME" access="RO" reset_value="0" description="FLEXSPI_HOLD TIME">
      <alias type="CMSIS" value="FLASH_CMPA_FLEXSPI_BOOT_CFG0_FLEXSPI_HOLD_TIME(x)"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_HOLD_TIME_WAIT_500_MICROSECS" value="0b00" description="Wait for 500 micro seconds"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_HOLD_TIME_WAIT_1_MILISECS" value="0b01" description="Wait for 1 mili seconds"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_HOLD_TIME_WAIT_3_MILISECS" value="0b10" description="Wait for 3 mili seconds"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_HOLD_TIME_WAIT_10_MILISECS" value="0b11" description="Wait for 10 mili seconds"/>
    </bit_field>
    <bit_field offset="25" width="4" name="FLEXSPI_PWR_HOLD_TIME" access="RO" reset_value="0" description="FLEXSPI_PWR_HOLD_TIME">
      <alias type="CMSIS" value="FLASH_CMPA_FLEXSPI_BOOT_CFG0_FLEXSPI_PWR_HOLD_TIME(x)"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PWR_HOLD_TIME_NO_DELAY" value="0b0000" description="No delay"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PWR_HOLD_TIME_WAIT_100_MICROSECS" value="0b0001" description="Waits additional 100 micro-seconds."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PWR_HOLD_TIME_WAIT_500_MICROSECS" value="0b0010" description="Waits additional 500 micro-seconds."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PWR_HOLD_TIME_WAIT_1_MILISECS" value="0b0011" description="Waits additional 1 mili-seconds."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PWR_HOLD_TIME_WAIT_10_MILISECS" value="0b0100" description="Waits additional 10 mili-seconds."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PWR_HOLD_TIME_WAIT_20_MILISECS" value="0b0101" description="Waits additional 20 mili-seconds."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PWR_HOLD_TIME_WAIT_40_MILISECS" value="0b0110" description="Waits additional 40 mili-seconds."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PWR_HOLD_TIME_WAIT_60_MILISECS" value="0b0111" description="Waits additional 60 mili-seconds."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PWR_HOLD_TIME_WAIT_80_MILISECS" value="0b1000" description="Waits additional 80 mili-seconds."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PWR_HOLD_TIME_WAIT_100_MILISECS" value="0b1001" description="Waits additional 100 mili-seconds."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PWR_HOLD_TIME_WAIT_120_MILISECS" value="0b1010" description="Waits additional 120 mili-seconds."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PWR_HOLD_TIME_WAIT_140_MILISECS" value="0b1011" description="Waits additional 140 mili-seconds."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PWR_HOLD_TIME_WAIT_160_MILISECS" value="0b1100" description="Waits additional 160 mili-seconds."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PWR_HOLD_TIME_WAIT_180_MILISECS" value="0b1101" description="Waits additional 180 mili-seconds."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PWR_HOLD_TIME_WAIT_200_MILISECS" value="0b1110" description="Waits additional 200 mili-seconds."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG0_FLEXSPI_PWR_HOLD_TIME_WAIT_220_MILISECS" value="0b1111" description="Waits additional 220 mili-seconds."/>
    </bit_field>
    <reserved_bit_field offset="29" width="3" reset_value="0"/>
  </register>
  <register offset="0x84" width="32" name="FLEXSPI_BOOT_CFG1" description="FlexSPI Boot Configuration 1">
    <alias type="CMSIS" value="CMPA.FLEXSPI_BOOT_CFG1"/>
    <bit_field offset="0" width="7" name="FLEXSPI_DELAY_CELL_NUM" access="RO" reset_value="0" description="FLEXSPI_DELAY_CELL_NUM">
      <alias type="CMSIS" value="FLASH_CMPA_FLEXSPI_BOOT_CFG1_FLEXSPI_DELAY_CELL_NUM(x)"/>
    </bit_field>
    <bit_field offset="7" width="10" name="FLEXSPI_IMAGE_OFFSET" access="RO" reset_value="0" description="FLEXSPI_IMAGE_OFFSET">
      <alias type="CMSIS" value="FLASH_CMPA_FLEXSPI_BOOT_CFG1_FLEXSPI_IMAGE_OFFSET(x)"/>
    </bit_field>
    <bit_field offset="17" width="4" name="FLEXSPI_REMAP_IMAGE_SIZE" access="RO" reset_value="0" description="FLEXSPI_REMAP_IMAGE_SIZE">
      <alias type="CMSIS" value="FLASH_CMPA_FLEXSPI_BOOT_CFG1_FLEXSPI_REMAP_IMAGE_SIZE(x)"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG1_FLEXSPI_REMAP_IMAGE_SIZE_SIZE" value="0b0000" description="SIZE"/>
      <bit_field_value name="FLEXSPI_BOOT_CFG1_FLEXSPI_REMAP_IMAGE_SIZE_SIZE_1MB" value="0b0001" description="SIZE_1MB Size of remapped area is 1MByte."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG1_FLEXSPI_REMAP_IMAGE_SIZE_SIZE_2MB" value="0b0010" description="SIZE_2MB Size of remapped area is 2MByte."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG1_FLEXSPI_REMAP_IMAGE_SIZE_SIZE_3MB" value="0b0011" description="SIZE_3MB Size of remapped area is 3MByte."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG1_FLEXSPI_REMAP_IMAGE_SIZE_SIZE_4MB" value="0b0100" description="SIZE_4MB Size of remapped area is 4MByte."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG1_FLEXSPI_REMAP_IMAGE_SIZE_SIZE_5MB" value="0b0101" description="SIZE_5MB Size of remapped area is 5MByte."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG1_FLEXSPI_REMAP_IMAGE_SIZE_SIZE_6MB" value="0b0110" description="SIZE_6MB Size of remapped area is 6MByte."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG1_FLEXSPI_REMAP_IMAGE_SIZE_SIZE_7MB" value="0b0111" description="SIZE_7MB Size of remapped area is 7MByte."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG1_FLEXSPI_REMAP_IMAGE_SIZE_SIZE_8MB" value="0b1000" description="SIZE_8MB Size of remapped area is 8MByte."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG1_FLEXSPI_REMAP_IMAGE_SIZE_SIZE_9MB" value="0b1001" description="SIZE_9MB Size of remapped area is 9MByte."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG1_FLEXSPI_REMAP_IMAGE_SIZE_SIZE_10MB" value="0b1010" description="SIZE_10MB Size of remapped area is 10MByte."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG1_FLEXSPI_REMAP_IMAGE_SIZE_SIZE_11MB" value="0b1011" description="SIZE_11MB Size of remapped area is 11MByte."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG1_FLEXSPI_REMAP_IMAGE_SIZE_SIZE_12MB" value="0b1100" description="SIZE_12MB Size of remapped area is 12MByte."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG1_FLEXSPI_REMAP_IMAGE_SIZE_SIZE_256KB" value="0b1101" description="SIZE_256KB Size of remapped area is 256KByte."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG1_FLEXSPI_REMAP_IMAGE_SIZE_SIZE_512KB" value="0b1110" description="SIZE_512KB Size of remapped area is 512KByte."/>
      <bit_field_value name="FLEXSPI_BOOT_CFG1_FLEXSPI_REMAP_IMAGE_SIZE_SIZE_768KB" value="0b1111" description="SIZE_768KB Size of remapped area is 768KByte."/>
    </bit_field>
    <reserved_bit_field offset="21" width="11" reset_value="0"/>
  </register>
  <register offset="0x90" width="32" name="IPED0_START" description="IPED region 0 Start">
    <alias type="CMSIS" value="CMPA.IPED0_START"/>
    <bit_field offset="0" width="2" name="ENABLE_REG0" access="RO" reset_value="0" description="ENABLE_REG0">
      <alias type="CMSIS" value="FLASH_CMPA_IPED0_START_ENABLE_REG0(x)"/>
      <bit_field_value name="IPED0_START_ENABLE_REG0_DISABLED" value="0b00" description="Region is disabled"/>
      <bit_field_value name="IPED0_START_ENABLE_REG0_ENABLED" value="0b01" description="Region is enabled"/>
      <bit_field_value name="IPED0_START_ENABLE_REG0_ENABLED_AND_LOCKED_0" value="0b10" description="Region is enabled and locked"/>
      <bit_field_value name="IPED0_START_ENABLE_REG0_ENABLED_AND_LOCKED_1" value="0b11" description="Region is enabled and locked"/>
    </bit_field>
    <reserved_bit_field offset="2" width="6" reset_value="0"/>
    <bit_field offset="8" width="24" name="IPED_REG0_START_ADDR" access="RO" reset_value="0" description="IPED_REG0_START_ADDR">
      <alias type="CMSIS" value="FLASH_CMPA_IPED0_START_IPED_REG0_START_ADDR(x)"/>
    </bit_field>
  </register>
  <register offset="0x94" width="32" name="IPED0_END" description="IPED region 0 End">
    <alias type="CMSIS" value="CMPA.IPED0_END"/>
    <reserved_bit_field offset="0" width="8" reset_value="0"/>
    <bit_field offset="8" width="24" name="IPED_REG0_END_ADDR" access="RO" reset_value="0" description="IPED_REG0_END_ADDR">
      <alias type="CMSIS" value="FLASH_CMPA_IPED0_END_IPED_REG0_END_ADDR(x)"/>
    </bit_field>
  </register>
  <register offset="0x98" width="32" name="IPED1_START" description="IPED region 1 Start">
    <alias type="CMSIS" value="CMPA.IPED1_START"/>
    <bit_field offset="0" width="2" name="ENABLE_REG1" access="RO" reset_value="0" description="ENABLE_REG1">
      <alias type="CMSIS" value="FLASH_CMPA_IPED1_START_ENABLE_REG1(x)"/>
      <bit_field_value name="IPED1_START_ENABLE_REG1_DISABLED" value="0b00" description="Region is disabled"/>
      <bit_field_value name="IPED1_START_ENABLE_REG1_ENABLED" value="0b01" description="Region is enabled"/>
      <bit_field_value name="IPED1_START_ENABLE_REG1_ENABLED_AND_LOCKED_0" value="0b10" description="Region is enabled and locked"/>
      <bit_field_value name="IPED1_START_ENABLE_REG1_ENABLED_AND_LOCKED_1" value="0b11" description="Region is enabled and locked"/>
    </bit_field>
    <reserved_bit_field offset="2" width="6" reset_value="0"/>
    <bit_field offset="8" width="24" name="IPED_REG1_START_ADDR" access="RO" reset_value="0" description="IPED_REG1_START_ADDR">
      <alias type="CMSIS" value="FLASH_CMPA_IPED1_START_IPED_REG1_START_ADDR(x)"/>
    </bit_field>
  </register>
  <register offset="0x9C" width="32" name="IPED1_END" description="IPED region 1 End">
    <alias type="CMSIS" value="CMPA.IPED1_END"/>
    <reserved_bit_field offset="0" width="8" reset_value="0"/>
    <bit_field offset="8" width="24" name="IPED_REG1_END_ADDR" access="RO" reset_value="0" description="IPED_REG1_END_ADDR">
      <alias type="CMSIS" value="FLASH_CMPA_IPED1_END_IPED_REG1_END_ADDR(x)"/>
      <alias type="id" value="IPED_REG01_END_ADDR"/>
    </bit_field>
  </register>
  <register offset="0xA0" width="32" name="IPED2_START" description="IPED region 2 Start">
    <alias type="CMSIS" value="CMPA.IPED2_START"/>
    <bit_field offset="0" width="2" name="ENABLE_REG2" access="RO" reset_value="0" description="ENABLE_REG2">
      <alias type="CMSIS" value="FLASH_CMPA_IPED2_START_ENABLE_REG2(x)"/>
      <bit_field_value name="IPED2_START_ENABLE_REG2_DISABLED" value="0b00" description="Region is disabled"/>
      <bit_field_value name="IPED2_START_ENABLE_REG2_ENABLED" value="0b01" description="Region is enabled"/>
      <bit_field_value name="IPED2_START_ENABLE_REG2_ENABLED_AND_LOCKED_0" value="0b10" description="Region is enabled and locked"/>
      <bit_field_value name="IPED2_START_ENABLE_REG2_ENABLED_AND_LOCKED_1" value="0b11" description="Region is enabled and locked"/>
    </bit_field>
    <reserved_bit_field offset="2" width="6" reset_value="0"/>
    <bit_field offset="8" width="24" name="IPED_REG2_START_ADDR" access="RO" reset_value="0" description="IPED_REG2_START_ADDR">
      <alias type="CMSIS" value="FLASH_CMPA_IPED2_START_IPED_REG2_START_ADDR(x)"/>
    </bit_field>
  </register>
  <register offset="0xA4" width="32" name="IPED2_END" description="IPED region 2 End">
    <alias type="CMSIS" value="CMPA.IPED2_END"/>
    <reserved_bit_field offset="0" width="8" reset_value="0"/>
    <bit_field offset="8" width="24" name="IPED_REG2_END_ADDR" access="RO" reset_value="0" description="IPED_REG2_END_ADDR">
      <alias type="CMSIS" value="FLASH_CMPA_IPED2_END_IPED_REG2_END_ADDR(x)"/>
    </bit_field>
  </register>
  <register offset="0xA8" width="32" name="IPED3_START" description="IPED region 3 Start">
    <alias type="CMSIS" value="CMPA.IPED3_START"/>
    <bit_field offset="0" width="2" name="ENABLE_REG3" access="RO" reset_value="0" description="ENABLE_REG3">
      <alias type="CMSIS" value="FLASH_CMPA_IPED3_START_ENABLE_REG3(x)"/>
      <bit_field_value name="IPED3_START_ENABLE_REG3_DISABLED" value="0b00" description="Region is disabled"/>
      <bit_field_value name="IPED3_START_ENABLE_REG3_ENABLED" value="0b01" description="Region is enabled"/>
      <bit_field_value name="IPED3_START_ENABLE_REG3_ENABLED_AND_LOCKED_0" value="0b10" description="Region is enabled and locked"/>
      <bit_field_value name="IPED3_START_ENABLE_REG3_ENABLED_AND_LOCKED_1" value="0b11" description="Region is enabled and locked"/>
    </bit_field>
    <reserved_bit_field offset="2" width="6" reset_value="0"/>
    <bit_field offset="8" width="24" name="IPED_REG3_START_ADDR" access="RO" reset_value="0" description="IPED_REG3_START_ADDR">
      <alias type="CMSIS" value="FLASH_CMPA_IPED3_START_IPED_REG3_START_ADDR(x)"/>
    </bit_field>
  </register>
  <register offset="0xAC" width="32" name="IPED3_END" description="IPED region 3 End">
    <alias type="CMSIS" value="CMPA.IPED3_END"/>
    <reserved_bit_field offset="0" width="8" reset_value="0"/>
    <bit_field offset="8" width="24" name="IPED_REG3_END_ADDR" access="RO" reset_value="0" description="IPED_REG3_END_ADDR">
      <alias type="CMSIS" value="FLASH_CMPA_IPED3_END_IPED_REG3_END_ADDR(x)"/>
    </bit_field>
  </register>
  <register offset="0xB0" width="32" name="QUICK_SET_GPIO_0" description="Quick Set to Drive GPIO 0 port pins high">
    <alias type="CMSIS" value="CMPA.QUICK_SET_GPIO_0"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="QUICK_SET_GPIO_0[31:0]">
      <alias type="CMSIS" value="FLASH_CMPA_QUICK_SET_GPIO_0_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xB4" width="32" name="QUICK_CLR_GPIO_0" description="Quick Clear to Drive GPIO 0 port pins low">
    <alias type="CMSIS" value="CMPA.QUICK_CLR_GPIO_0"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="QUICK_CLR_GPIO_0[31:0]">
      <alias type="CMSIS" value="FLASH_CMPA_QUICK_CLR_GPIO_0_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xB8" width="32" name="QUICK_SET_GPIO_1" description="Quick Set to Drive GPIO 1 port pins high">
    <alias type="CMSIS" value="CMPA.QUICK_SET_GPIO_1"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="QUICK_SET_GPIO_1[31:0]">
      <alias type="CMSIS" value="FLASH_CMPA_QUICK_SET_GPIO_1_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0xBC" width="32" name="QUICK_CLR_GPIO_1" description="Quick Clear to Drive GPIO 1 port pins low">
    <alias type="CMSIS" value="CMPA.QUICK_CLR_GPIO_1"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="QUICK_CLR_GPIO_1[31:0]">
      <alias type="CMSIS" value="FLASH_CMPA_QUICK_CLR_GPIO_1_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x100" width="32" name="CUSTOMER_DEFINED0" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[0]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x104" width="32" name="CUSTOMER_DEFINED1" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[1]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x108" width="32" name="CUSTOMER_DEFINED2" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[2]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x10C" width="32" name="CUSTOMER_DEFINED3" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[3]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x110" width="32" name="CUSTOMER_DEFINED4" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[4]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x114" width="32" name="CUSTOMER_DEFINED5" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[5]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x118" width="32" name="CUSTOMER_DEFINED6" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[6]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x11C" width="32" name="CUSTOMER_DEFINED7" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[7]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x120" width="32" name="CUSTOMER_DEFINED8" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[8]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x124" width="32" name="CUSTOMER_DEFINED9" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[9]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x128" width="32" name="CUSTOMER_DEFINED10" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[10]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x12C" width="32" name="CUSTOMER_DEFINED11" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[11]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x130" width="32" name="CUSTOMER_DEFINED12" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[12]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x134" width="32" name="CUSTOMER_DEFINED13" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[13]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x138" width="32" name="CUSTOMER_DEFINED14" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[14]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x13C" width="32" name="CUSTOMER_DEFINED15" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[15]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x140" width="32" name="CUSTOMER_DEFINED16" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[16]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x144" width="32" name="CUSTOMER_DEFINED17" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[17]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x148" width="32" name="CUSTOMER_DEFINED18" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[18]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x14C" width="32" name="CUSTOMER_DEFINED19" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[19]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x150" width="32" name="CUSTOMER_DEFINED20" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[20]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x154" width="32" name="CUSTOMER_DEFINED21" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[21]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x158" width="32" name="CUSTOMER_DEFINED22" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[22]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x15C" width="32" name="CUSTOMER_DEFINED23" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[23]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x160" width="32" name="CUSTOMER_DEFINED24" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[24]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x164" width="32" name="CUSTOMER_DEFINED25" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[25]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x168" width="32" name="CUSTOMER_DEFINED26" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[26]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x16C" width="32" name="CUSTOMER_DEFINED27" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[27]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x170" width="32" name="CUSTOMER_DEFINED28" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[28]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x174" width="32" name="CUSTOMER_DEFINED29" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[29]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x178" width="32" name="CUSTOMER_DEFINED30" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[30]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x17C" width="32" name="CUSTOMER_DEFINED31" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[31]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x180" width="32" name="CUSTOMER_DEFINED32" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[32]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x184" width="32" name="CUSTOMER_DEFINED33" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[33]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x188" width="32" name="CUSTOMER_DEFINED34" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[34]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x18C" width="32" name="CUSTOMER_DEFINED35" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[35]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x190" width="32" name="CUSTOMER_DEFINED36" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[36]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x194" width="32" name="CUSTOMER_DEFINED37" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[37]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x198" width="32" name="CUSTOMER_DEFINED38" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[38]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x19C" width="32" name="CUSTOMER_DEFINED39" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[39]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1A0" width="32" name="CUSTOMER_DEFINED40" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[40]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1A4" width="32" name="CUSTOMER_DEFINED41" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[41]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1A8" width="32" name="CUSTOMER_DEFINED42" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[42]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1AC" width="32" name="CUSTOMER_DEFINED43" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[43]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1B0" width="32" name="CUSTOMER_DEFINED44" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[44]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1B4" width="32" name="CUSTOMER_DEFINED45" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[45]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1B8" width="32" name="CUSTOMER_DEFINED46" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[46]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1BC" width="32" name="CUSTOMER_DEFINED47" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[47]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1C0" width="32" name="CUSTOMER_DEFINED48" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[48]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1C4" width="32" name="CUSTOMER_DEFINED49" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[49]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1C8" width="32" name="CUSTOMER_DEFINED50" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[50]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1CC" width="32" name="CUSTOMER_DEFINED51" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[51]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1D0" width="32" name="CUSTOMER_DEFINED52" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[52]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1D4" width="32" name="CUSTOMER_DEFINED53" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[53]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1D8" width="32" name="CUSTOMER_DEFINED54" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[54]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1DC" width="32" name="CUSTOMER_DEFINED55" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[55]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1E0" width="32" name="CUSTOMER_DEFINED56" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[56]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1E4" width="32" name="CUSTOMER_DEFINED57" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[57]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1E8" width="32" name="CUSTOMER_DEFINED58" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[58]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1EC" width="32" name="CUSTOMER_DEFINED59" description="Customer Defined (Programable through ROM API)">
    <alias type="CMSIS" value="CMPA.CUSTOMER_DEFINED[59]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="Field">
      <alias type="CMSIS" value="FLASH_CMPA_CUSTOMER_DEFINED_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1F0" width="32" name="CMPA_CMAC0" description="CMPA CMAC 0">
    <alias type="CMSIS" value="CMPA.CMPA_CMAC[0]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="CMPA_CMAC0">
      <alias type="CMSIS" value="FLASH_CMPA_CMPA_CMAC_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1F4" width="32" name="CMPA_CMAC1" description="CMPA CMAC 1">
    <alias type="CMSIS" value="CMPA.CMPA_CMAC[1]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="CMPA_CMAC1">
      <alias type="CMSIS" value="FLASH_CMPA_CMPA_CMAC_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1F8" width="32" name="CMPA_CMAC2" description="CMPA CMAC 2">
    <alias type="CMSIS" value="CMPA.CMPA_CMAC[2]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="CMPA_CMAC2">
      <alias type="CMSIS" value="FLASH_CMPA_CMPA_CMAC_FIELD(x)"/>
    </bit_field>
  </register>
  <register offset="0x1FC" width="32" name="CMPA_CMAC3" description="CMPA CMAC 3">
    <alias type="CMSIS" value="CMPA.CMPA_CMAC[3]"/>
    <bit_field offset="0" width="32" name="FIELD" access="RO" reset_value="0" description="CMPA_CMAC3">
      <alias type="CMSIS" value="FLASH_CMPA_CMPA_CMAC_FIELD(x)"/>
    </bit_field>
  </register>
</regs:peripheral>