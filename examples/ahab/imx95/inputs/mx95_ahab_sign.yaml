# Copyright 2025 NXP
#
# SPDX-License-Identifier: BSD-3-Clause
# ============================  ahab Configuration template for mimx9596, Revision: latest.  ============================

# ======================================================================================================================
#                                                 == General Options ==                                                 
# ======================================================================================================================
# -------------------------------------===== The chip family name [Required] =====--------------------------------------
# Description: NXP chip family identifier.
family: mimx9596
# -----------------------------------------===== MCU revision [Optional] =====------------------------------------------
# Description: Revision of silicon. The 'latest' name, means most current revision.
# Possible options: <a0, a1, b0, latest>
revision: latest
# ======================================================================================================================
#                                                  == AHAB Container ==                                                 
#     Configurable Container format to add to AHAB image. This allow to configure all aspects of the AHAB container.    
# ======================================================================================================================
# -----------------------------------===== Super Root Key (SRK) set [Required] =====------------------------------------
# Description: Defines which set is used to authenticate the container.
# Possible options: <none, oem, nxp>
srk_set: oem
# ------------------------------------===== Used SRK [Conditionally required] =====-------------------------------------
# Description: Which key from SRK set is being used.
used_srk_id: 0
# ----------------------------------------===== SRK revoke mask [Optional] =====----------------------------------------
# Description: Bit-mask to indicate which SRKs to revoke. Bit set to 1 means revoke key. Bit 0 = revoke SRK_0, bit 1 =
# revoke SRK_1 etc. Example of revocation SRK_0 and SRK_1 - the value should be 0x03
srk_revoke_mask: '0x00'
# -------------------------------------===== GDET runtime behavior [Optional] =====-------------------------------------
# Description: This option defines runtime behavior of Glitch detector. Not supported by all devices and their ELE
# firmware.
#  - disabled:       GDET is disabled after the first OEM container has been authenticated (default behavior)
#  - enabled_eleapi: Automatically enable GDET during all ELE API calls
#  - enabled:        Leave GDET enabled
# Possible options: <disabled, enabled_eleapi, enabled>
gdet_runtime_behavior: disabled
# -------------------------------------===== Check all signatures [Optional] =====--------------------------------------
# Description: This option overrides a fuse to select verification mode.
#  - default: Apply default fuse policy.
#  - check_all_signatures: Force verification of all present signatures.
# Possible options: <default, check_all_signatures>
check_all_signatures: check_all_signatures
# -------------------------------------------===== Fast boot [Optional] =====-------------------------------------------
# Description: This option enables fast boot mode.
#  - disabled: Fast boot disabled.
#  - hash_and_copy: ELE will do the hash and copy (when disabled, BootROM will do the copy).
#  - external_accelerator: Use external accelerator for authentication (e.g. V2X on i.MX95B0, i.MX943 and i.MX952).
#  - hash_and_copy_with_external_accelerator:ELE will do hash and copy, and use external accelerator for authentication.
# Possible options: <disabled, hash_and_copy, external_accelerator, hash_and_copy_with_external_accelerator>
fast_boot: disabled
# -----------------------------------------===== Fuse version [Optional] =====------------------------------------------
# Description: The value must be equal or greater than the version stored in fuses to allow loading this container.
fuse_version: 0
# ---------------------------------------===== Software version [Optional] =====----------------------------------------
# Description: Number used by Privileged Host Boot Companion (PHBC) to select between multiple images with same Fuse
# version field.
sw_version: 0
# -------------------------------------===== AHAB container signer [Optional] =====-------------------------------------
# Description: Signature provider configuration in format 'type=<identifier>;<key1>=<value1>;<key2>=<value2>' or a
# private key used for sign the container header. Header can be signed by SRK. The referenced SRK must not have been
# revoked.
signer: ../../../_data/keys/ecc384/srk0_ecc384.pem
# ---------------------===== AHAB container signer for second signature (PQC only) [Optional] =====---------------------
# Description: Signature provider configuration in format 'type=<identifier>;<key1>=<value1>;<key2>=<value2>' or a
# private key used for second sign (PQC only) of the container header. Header can be signed by SRK. The referenced SRK
# must not have been revoked.
signer_#2: ../../../_data/keys/mldsa65/srk0_mldsa65.pem

# ======================================================================================================================
#                                         == Configuration of AHAB SRK table ==                                         
# ======================================================================================================================
# ------------------------------------===== SRK Table [Conditionally required] =====------------------------------------
# Description: SRK (Super Root key) table definition.
srk_table:
  # -------------------------------------------===== CA Flag [Optional] =====-------------------------------------------
  # Description: CA Flag is used by HAB to indicate if the SRK is allowed to sign other keys. In AHAB CA Flag only
  # affects the final SRKH (Super Root Key Hash) value burned into chip fuses. It is not used in the AHAB signing
  # process itself. This option exists only for compatibility with systems where fuses are already programmed. In most
  # cases, this should remain false.
  flag_ca: false
  # ---------------------------------------===== Hash Algorithm [Optional] =====----------------------------------------
  # Description: Hash algorithm used for SRK records. If not specified, default algorithm based on key type will be
  # used.
  # Possible options: <default, sha256, sha384, sha512, sha3_256, sha3_384, sha3_512, shake_128_256, shake_256_512, sm3>
  hash_algorithm: sha3_512
  # ---------------------------------===== Super Root Key (SRK) table [Required] =====----------------------------------
  # Description: Table containing the used SRK records. All SRKs must be of the same type. Supported signing algorithms
  # are: RSA-PSS, ECDSA, Dilithium or SM2. Supported hash algorithms: sha256, sha384, sha512, sha3_256, sha3_384,
  # sha3_512, sm3. Supported key sizes/curves: prime256v1, sec384r1, sec512r1, rsa2048, rsa4096, dilithium3, sm2.
  # Certificate may be of Certificate Authority. Dilithium algorithms are supported just in new type of AHAB container
  srk_array:
    - ../../../_data/keys/ecc384/srk0_ecc384.pub
    - ../../../_data/keys/ecc384/srk1_ecc384.pub
    - ../../../_data/keys/ecc384/srk2_ecc384.pub
    - ../../../_data/keys/ecc384/srk3_ecc384.pub

  # ====================================================================================================================
  #                  == Configuration of AHAB SRK table in case that the double signing (ECC + PQC) ==                  
  # ====================================================================================================================
  # --------------------------------------===== Second SRK Table [Optional] =====---------------------------------------
  srk_table_#2:
    # ------------------------------------------===== CA Flag [Optional] =====------------------------------------------
    # Description: CA Flag is used by AHAB to indicate if the SRK is allowed to sign other keys. In AHAB CA Flag only
    # affects the final SRKH (Super Root Key Hash) value burned into chip fuses. It is not used in the AHAB signing
    # process itself. This option exists only for compatibility with systems where fuses are already programmed. In most
    # cases, this should remain false.
    flag_ca: false
    # --------------------------------------===== Hash Algorithm [Optional] =====---------------------------------------
    # Description: Hash algorithm used for SRK records. If not specified, default algorithm based on key type will be
    # used.
    # Possible options: <default, sha256, sha384, sha512, sha3_256, sha3_384, sha3_512, shake_128_256, shake_256_512,
    # sm3>
    hash_algorithm: sha3_512
    # --------------------------------===== Super Root Key (SRK) table [Required] =====---------------------------------
    # Description: Table containing the used SRK Dilithium records. All SRKs must be of the same type. Supported signing
    # algorithms are: Dilithium level 3. Supported hash algorithms: sha3_256, sha3_384, sha3_512. Certificate may be of
    # Certificate Authority.
    srk_array:
      - ../../../_data/keys/mldsa65/srk0_mldsa65.pub
      - ../../../_data/keys/mldsa65/srk1_mldsa65.pub
      - ../../../_data/keys/mldsa65/srk2_mldsa65.pub
      - ../../../_data/keys/mldsa65/srk3_mldsa65.pub
